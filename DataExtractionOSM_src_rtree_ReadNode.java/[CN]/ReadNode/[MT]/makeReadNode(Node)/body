{
  ReadNode rdNode=new ReadNode();
  try {
    rdNode.file=node.file;
    rdNode.dirty=node.dirty;
    rdNode.fileName=new String(node.fileName.toCharArray());
    rdNode.nodeIndex=node.nodeIndex;
    rdNode.sorted=node.sorted;
    rdNode.nodeMBR=new Rect(node.nodeMBR);
    rdNode.elements=new Element[node.elements.length];
    if (node.elementType == LEAF_NODE) {
      for (int i=0; i < node.totalElements; i++)       rdNode.elements[i]=new LeafElement(new Rect(node.elements[i].getRect()),node.elements[i].getPtr());
    }
 else {
      for (int i=0; i < node.totalElements; i++)       rdNode.elements[i]=new NonLeafElement(new Rect(node.elements[i].getRect()),node.elements[i].getPtr());
    }
    rdNode.fileHdr=node.fileHdr;
    rdNode.totalElements=node.totalElements;
    rdNode.parent=node.parent;
    rdNode.elementSize=node.elementSize;
    rdNode.elementType=node.elementType;
    return rdNode;
  }
 catch (  Exception e) {
    e.printStackTrace();
    return null;
  }
}
