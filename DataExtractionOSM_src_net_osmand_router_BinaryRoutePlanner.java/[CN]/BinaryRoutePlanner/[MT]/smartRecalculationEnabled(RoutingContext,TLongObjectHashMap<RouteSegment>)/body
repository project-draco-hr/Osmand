{
  boolean runRecalculation=ctx.previouslyCalculatedRoute != null && ctx.previouslyCalculatedRoute.size() > 0 && ctx.config.recalculateDistance != 0;
  if (runRecalculation) {
    RouteSegment previous=null;
    List<RouteSegmentResult> rlist=new ArrayList<RouteSegmentResult>();
    float distanceThreshold=ctx.config.recalculateDistance;
    float threshold=0;
    for (    RouteSegmentResult rr : ctx.previouslyCalculatedRoute) {
      threshold+=rr.getDistance();
      if (threshold > distanceThreshold) {
        rlist.add(rr);
      }
    }
    runRecalculation=rlist.size() > 0;
    if (rlist.size() > 0) {
      for (      RouteSegmentResult rr : rlist) {
        RouteSegment segment=new RouteSegment(rr.getObject(),rr.getEndPointIndex());
        if (previous != null) {
          previous.setParentRoute(segment);
          previous.setParentSegmentEnd(rr.getStartPointIndex());
          boolean positive=rr.getStartPointIndex() < rr.getEndPointIndex();
          long t=calculateRoutePointId(rr.getObject(),positive ? rr.getEndPointIndex() - 1 : rr.getEndPointIndex(),positive);
          visitedOppositeSegments.put(t,segment);
        }
        previous=segment;
      }
      return previous;
    }
  }
  return null;
}
