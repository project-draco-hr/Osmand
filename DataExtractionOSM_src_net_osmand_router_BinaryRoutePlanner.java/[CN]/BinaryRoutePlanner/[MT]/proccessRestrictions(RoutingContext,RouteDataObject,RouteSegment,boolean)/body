{
  ctx.segmentsToVisitPrescripted.clear();
  ctx.segmentsToVisitNotForbidden.clear();
  boolean exclusiveRestriction=false;
  RouteSegment next=inputNext;
  if (!reverseWay && road.restrictions.isEmpty()) {
    return false;
  }
  while (next != null) {
    int type=-1;
    if (!reverseWay) {
      for (int i=0; i < road.restrictions.size(); i++) {
        if (road.restrictions.getQuick(i) >> 3 == next.road.id) {
          type=(int)(road.restrictions.getQuick(i) & 7);
          break;
        }
      }
    }
 else {
      for (int i=0; i < next.road.restrictions.size(); i++) {
        int rt=(int)(next.road.restrictions.getQuick(i) & 7);
        long restrictedTo=next.road.restrictions.getQuick(i) >> 3;
        if (restrictedTo == road.id) {
          type=rt;
          break;
        }
        if (rt == MapRenderingTypes.RESTRICTION_ONLY_RIGHT_TURN || rt == MapRenderingTypes.RESTRICTION_ONLY_LEFT_TURN || rt == MapRenderingTypes.RESTRICTION_ONLY_STRAIGHT_ON) {
          RouteSegment foundNext=inputNext;
          while (foundNext != null) {
            if (foundNext.getRoad().id == restrictedTo) {
              break;
            }
            foundNext=foundNext.next;
          }
          if (foundNext != null) {
            type=REVERSE_WAY_RESTRICTION_ONLY;
          }
        }
      }
    }
    if (type == REVERSE_WAY_RESTRICTION_ONLY) {
    }
 else     if (type == -1 && exclusiveRestriction) {
    }
 else     if (type == MapRenderingTypes.RESTRICTION_NO_LEFT_TURN || type == MapRenderingTypes.RESTRICTION_NO_RIGHT_TURN || type == MapRenderingTypes.RESTRICTION_NO_STRAIGHT_ON || type == MapRenderingTypes.RESTRICTION_NO_U_TURN) {
    }
 else     if (type == -1) {
      ctx.segmentsToVisitNotForbidden.add(next);
    }
 else {
      if (!reverseWay) {
        exclusiveRestriction=true;
        ctx.segmentsToVisitNotForbidden.clear();
        ctx.segmentsToVisitPrescripted.add(next);
      }
 else {
        ctx.segmentsToVisitNotForbidden.add(next);
      }
    }
    next=next.next;
  }
  ctx.segmentsToVisitPrescripted.addAll(ctx.segmentsToVisitNotForbidden);
  return true;
}
