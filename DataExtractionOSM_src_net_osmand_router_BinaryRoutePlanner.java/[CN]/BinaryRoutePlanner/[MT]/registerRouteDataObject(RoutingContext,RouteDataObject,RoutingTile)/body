{
  if (!ctx.getRouter().acceptLine(o)) {
    return;
  }
  RoutingTile tl=suggestedTile;
  RouteDataObject old=tl.idObjects.get(o.id);
  if (old != null && old.pointsX.size() >= o.pointsX.size()) {
    return;
  }
  ;
  for (int j=0; j < o.pointsX.size(); j++) {
    int x=o.pointsX.getQuick(j);
    int y=o.pointsY.getQuick(j);
    if (!tl.checkContains(x,y)) {
      continue;
    }
    long l=(((long)x) << 31) + (long)y;
    RouteSegment segment=new RouteSegment(o,j);
    RouteSegment prev=tl.routes.get(l);
    boolean i=true;
    if (prev != null) {
      if (old == null) {
        segment.next=prev;
      }
 else       if (prev.road == old) {
        segment.next=prev.next;
      }
 else {
        RouteSegment rr=prev;
        while (rr != null) {
          if (rr.road == old) {
            prev.next=segment;
            segment.next=rr.next;
            break;
          }
          prev=rr;
          rr=rr.next;
        }
        i=false;
      }
    }
    if (i) {
      tl.routes.put(l,segment);
    }
  }
}
