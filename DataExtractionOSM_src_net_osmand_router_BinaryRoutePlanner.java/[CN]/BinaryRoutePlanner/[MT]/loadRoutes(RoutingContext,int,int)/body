{
  final RoutingTile tile=ctx.getRoutingTile(tile31X,tile31Y);
  if (tile.isLoaded()) {
    tile.access++;
    return tile;
  }
  if (ctx.getCurrentEstimatedSize() > 0.95 * ctx.config.memoryLimitation) {
    int sz1=ctx.getCurrentEstimatedSize();
    long h1=0;
    if (SHOW_GC_SIZE && sz1 > 0.7 * ctx.config.memoryLimitation) {
      runGCUsedMemory();
      h1=runGCUsedMemory();
    }
    int clt=ctx.getCurrentlyLoadedTiles();
    unloadUnusedTiles(ctx);
    if (h1 != 0 && ctx.getCurrentlyLoadedTiles() != clt) {
      int sz2=ctx.getCurrentEstimatedSize();
      runGCUsedMemory();
      long h2=runGCUsedMemory();
      float mb=(1 << 20);
      log.warn("Unload tiles :  estimated " + (sz1 - sz2) / mb + " ?= " + (h1 - h2) / mb + " actual");
      log.warn("Used after " + h2 / mb + " of " + Runtime.getRuntime().totalMemory() / mb + " max " + Runtime.getRuntime().maxMemory() / mb);
    }
  }
  ctx.loadTileData(tile,null,nativeLib,map);
  return tile;
}
