{
  if (i == 0) {
    return TurnType.valueOf(TurnType.C,false);
  }
  RouteSegmentResult prev=result.get(i - 1);
  if (prev.getObject().roundabout()) {
    return null;
  }
  RouteSegmentResult rr=result.get(i);
  if (rr.getObject().roundabout()) {
    int exit=1;
    RouteSegmentResult last=rr;
    for (int j=i; j < result.size(); j++) {
      RouteSegmentResult rnext=result.get(j);
      if (rnext.getObject().roundabout()) {
        last=rnext;
        boolean plus=rnext.getStartPointIndex() < rnext.getEndPointIndex();
        int k=rnext.getStartPointIndex();
        if (j == i) {
          k=plus ? k + 1 : k - 1;
        }
        while (k != rnext.getEndPointIndex()) {
          if (rnext.getAttachedRoutes(k).size() > 0) {
            exit++;
          }
          k=plus ? k + 1 : k - 1;
        }
      }
 else {
        break;
      }
    }
    TurnType t=TurnType.valueOf("EXIT" + exit,leftSide);
    t.setTurnAngle((float)MapUtils.degreesDiff(last.getBearingBegin(),prev.getBearingEnd()));
    return t;
  }
  TurnType t=null;
  if (prev != null) {
    double mpi=MapUtils.degreesDiff(prev.getBearingEnd(),rr.getBearingBegin());
    if (mpi >= 50) {
      if (mpi < 60) {
        t=TurnType.valueOf(TurnType.TSLL,leftSide);
      }
 else       if (mpi < 120) {
        t=TurnType.valueOf(TurnType.TL,leftSide);
      }
 else       if (mpi < 135) {
        t=TurnType.valueOf(TurnType.TSHL,leftSide);
      }
 else {
        t=TurnType.valueOf(TurnType.TU,leftSide);
      }
    }
 else     if (mpi < -50) {
      if (mpi > -60) {
        t=TurnType.valueOf(TurnType.TSLR,leftSide);
      }
 else       if (mpi > -120) {
        t=TurnType.valueOf(TurnType.TR,leftSide);
      }
 else       if (mpi > -135) {
        t=TurnType.valueOf(TurnType.TSHR,leftSide);
      }
 else {
        t=TurnType.valueOf(TurnType.TU,leftSide);
      }
    }
 else {
      boolean kl=false;
      boolean kr=false;
      List<RouteSegmentResult> attachedRoutes=rr.getAttachedRoutes(rr.getStartPointIndex());
      if (attachedRoutes != null) {
        for (        RouteSegmentResult rs : attachedRoutes) {
          double ex=MapUtils.degreesDiff(rs.getBearingBegin(),rr.getBearingBegin());
          if (ex < 30 && ex >= 0) {
            kl=true;
          }
 else           if (ex > -30 && ex <= 0) {
            kr=true;
          }
        }
      }
      if (kl) {
        t=TurnType.valueOf(TurnType.KL,leftSide);
      }
 else       if (kr) {
        t=TurnType.valueOf(TurnType.KR,leftSide);
      }
    }
    if (t != null) {
      t.setTurnAngle((float)-mpi);
    }
  }
  return t;
}
