{
  int zoomAround=15;
  int coordinatesShift=(1 << (31 - zoomAround));
  int px=MapUtils.get31TileNumberX(lon);
  int py=MapUtils.get31TileNumberY(lat);
  TIntObjectHashMap<RoutingTile> ts=new TIntObjectHashMap<RoutingContext.RoutingTile>();
  RoutingTile rt=ctx.getRoutingTile(px - coordinatesShift,py - coordinatesShift);
  ts.put(rt.getId(),rt);
  rt=ctx.getRoutingTile(px + coordinatesShift,py - coordinatesShift);
  ts.put(rt.getId(),rt);
  rt=ctx.getRoutingTile(px - coordinatesShift,py + coordinatesShift);
  ts.put(rt.getId(),rt);
  rt=ctx.getRoutingTile(px + coordinatesShift,py + coordinatesShift);
  ts.put(rt.getId(),rt);
  List<RouteDataObject> dataObjects=new ArrayList<RouteDataObject>();
  Iterator<RoutingTile> it=ts.valueCollection().iterator();
  while (it.hasNext()) {
    loadTileData(ctx,it.next(),dataObjects);
  }
  RouteSegment road=null;
  double sdist=0;
  int foundProjX=0;
  int foundProjY=0;
  for (  RouteDataObject r : dataObjects) {
    if (r.getPointsLength() > 1) {
      for (int j=1; j < r.getPointsLength(); j++) {
        double mDist=squareRootDist(r.getPoint31XTile(j),r.getPoint31YTile(j),r.getPoint31XTile(j - 1),r.getPoint31YTile(j - 1));
        int prx=r.getPoint31XTile(j);
        int pry=r.getPoint31YTile(j);
        double projection=calculateProjection(r.getPoint31XTile(j - 1),r.getPoint31YTile(j - 1),r.getPoint31XTile(j),r.getPoint31YTile(j),px,py);
        if (projection < 0) {
          prx=r.getPoint31XTile(j - 1);
          pry=r.getPoint31YTile(j - 1);
        }
 else         if (projection >= mDist * mDist) {
          prx=r.getPoint31XTile(j);
          pry=r.getPoint31YTile(j);
        }
 else {
          prx=(int)(r.getPoint31XTile(j - 1) + (r.getPoint31XTile(j) - r.getPoint31XTile(j - 1)) * (projection / (mDist * mDist)));
          pry=(int)(r.getPoint31YTile(j - 1) + (r.getPoint31YTile(j) - r.getPoint31YTile(j - 1)) * (projection / (mDist * mDist)));
        }
        double currentsDist=squareDist(prx,pry,px,py);
        if (road == null || currentsDist < sdist) {
          RouteDataObject ro=new RouteDataObject(r);
          road=new RouteSegment(ro,j);
          ro.pointsX.insert(j,prx);
          ro.pointsY.insert(j,pry);
          if (ro.pointTypes.size() > j) {
            ro.pointTypes.add(j,null);
          }
          sdist=currentsDist;
          foundProjX=prx;
          foundProjY=pry;
        }
      }
    }
  }
  if (road != null) {
    registerRouteDataObject(ctx,road.getRoad(),ctx.getRoutingTile(foundProjX,foundProjY));
  }
  return road;
}
