{
  addPreferencesFromResource(R.xml.navigation_settings);
  PreferenceScreen screen=getPreferenceScreen();
  settings=getMyApplication().getSettings();
  routerServicePreference=(ListPreference)screen.findPreference(settings.ROUTER_SERVICE.getId());
  RouteService[] vls=RouteService.getAvailableRouters(getMyApplication());
  String[] entries=new String[vls.length];
  for (int i=0; i < entries.length; i++) {
    entries[i]=vls[i].getName();
  }
  registerListPreference(settings.ROUTER_SERVICE,screen,entries,vls);
  registerBooleanPreference(settings.SNAP_TO_ROAD,screen);
  Integer[] intValues=new Integer[]{0,5,10,15,20,25,30,45,60,90};
  entries=new String[intValues.length];
  entries[0]=getString(R.string.auto_follow_route_never);
  for (int i=1; i < intValues.length; i++) {
    entries[i]=(int)intValues[i] + " " + getString(R.string.int_seconds);
  }
  registerListPreference(settings.AUTO_FOLLOW_ROUTE,screen,entries,intValues);
  entries=new String[AutoZoomMap.values().length];
  for (int i=0; i < entries.length; i++) {
    entries[i]=getString(AutoZoomMap.values()[i].name);
  }
  registerListPreference(settings.AUTO_ZOOM_MAP,screen,entries,AutoZoomMap.values());
  Integer[] keepInformingValues=new Integer[]{0,1,2,3,5,7,10,15,20,25,30};
  String[] keepInformingNames=new String[keepInformingValues.length];
  keepInformingNames[0]=getString(R.string.keep_informing_never);
  for (int i=1; i < keepInformingValues.length; i++) {
    keepInformingNames[i]=keepInformingValues[i] + " " + getString(R.string.int_min);
  }
  registerListPreference(settings.KEEP_INFORMING,screen,keepInformingNames,keepInformingValues);
  Integer[] screenPowerSaveValues=new Integer[]{0,5,10,15,20,30,45,60};
  String[] screenPowerSaveNames=new String[screenPowerSaveValues.length];
  screenPowerSaveNames[0]=getString(R.string.shared_string_never);
  for (int i=1; i < screenPowerSaveValues.length; i++) {
    screenPowerSaveNames[i]=screenPowerSaveValues[i] + " " + getString(R.string.int_seconds);
  }
  registerListPreference(settings.WAKE_ON_VOICE_INT,screen,screenPowerSaveNames,screenPowerSaveValues);
  registerBooleanPreference(settings.SHOW_ZOOM_BUTTONS_NAVIGATION,screen);
  autoZoomMapPreference=(ListPreference)screen.findPreference(settings.AUTO_ZOOM_MAP.getId());
  autoZoomMapPreference.setOnPreferenceChangeListener(this);
  showAlarms=(Preference)screen.findPreference("show_routing_alarms");
  showAlarms.setOnPreferenceClickListener(this);
  speakAlarms=(Preference)screen.findPreference("speak_routing_alarms");
  speakAlarms.setOnPreferenceClickListener(this);
  Float[] arrivalValues=new Float[]{1.5f,1f,0.5f,0.25f};
  String[] arrivalNames=new String[]{getString(R.string.arrival_distance_factor_early),getString(R.string.arrival_distance_factor_normally),getString(R.string.arrival_distance_factor_late),getString(R.string.arrival_distance_factor_at_last)};
  registerListPreference(settings.ARRIVAL_DISTANCE_FACTOR,screen,arrivalNames,arrivalValues);
  Float[] speedLimitsKm=new Float[]{0f,5f,7f,10f,15f,20f};
  Float[] speedLimitsMiles=new Float[]{0f,3f,5f,7f,10f,15f};
  if (settings.METRIC_SYSTEM.get() == OsmandSettings.MetricsConstants.KILOMETERS_AND_METERS) {
    String[] speedNames=new String[speedLimitsKm.length];
    for (int i=0; i < speedLimitsKm.length; i++) {
      speedNames[i]=speedLimitsKm[i] + " " + getString(R.string.km_h);
    }
    registerListPreference(settings.SPEED_LIMIT_EXCEED,screen,speedNames,speedLimitsKm);
  }
 else {
    String[] speedNames=new String[speedLimitsKm.length];
    for (int i=0; i < speedNames.length; i++) {
      speedNames[i]=speedLimitsMiles[i] + " " + getString(R.string.mile_per_hour);
    }
    registerListPreference(settings.SPEED_LIMIT_EXCEED,screen,speedNames,speedLimitsKm);
  }
  PreferenceCategory category=(PreferenceCategory)screen.findPreference("guidance_preferences");
  speedLimitExceed=(ListPreference)category.findPreference("speed_limit_exceed");
  ApplicationMode mode=getMyApplication().getSettings().getApplicationMode();
  if (!mode.isDerivedRoutingFrom(ApplicationMode.CAR)) {
    category.removePreference(speedLimitExceed);
  }
  profileDialog();
}
