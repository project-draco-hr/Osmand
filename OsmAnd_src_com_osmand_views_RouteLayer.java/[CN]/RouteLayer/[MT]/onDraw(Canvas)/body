{
  path.reset();
  if (helper.hasPointsToShow()) {
    long time=System.currentTimeMillis();
    int w=view.getWidth();
    int h=view.getHeight();
    if (helper.getCurrentLocation() != null && view.isPointOnTheRotatedMap(helper.getCurrentLocation().getLatitude(),helper.getCurrentLocation().getLongitude())) {
      boundsRect=new Rect(-w / 2,-h,3 * w / 2,h);
    }
 else {
      boundsRect=new Rect(0,0,w,h);
    }
    view.calculateTileRectangle(boundsRect,view.getCenterPointX(),view.getCenterPointY(),view.getXTile(),view.getYTile(),tileRect);
    double topLatitude=MapUtils.getLatitudeFromTile(view.getZoom(),tileRect.top);
    double leftLongitude=MapUtils.getLongitudeFromTile(view.getZoom(),tileRect.left);
    double bottomLatitude=MapUtils.getLatitudeFromTile(view.getZoom(),tileRect.bottom);
    double rightLongitude=MapUtils.getLongitudeFromTile(view.getZoom(),tileRect.right);
    helper.fillLocationsToShow(topLatitude,leftLongitude,bottomLatitude,rightLongitude,points);
    if ((System.currentTimeMillis() - time) > 80) {
      Log.e(LogUtil.TAG,"Calculate route layer " + (System.currentTimeMillis() - time));
    }
    if (points.size() > 0) {
      int px=view.getMapXForPoint(points.get(0).getLongitude());
      int py=view.getMapYForPoint(points.get(0).getLatitude());
      path.moveTo(px,py);
      for (int i=1; i < points.size(); i++) {
        Location o=points.get(i);
        int x=view.getMapXForPoint(o.getLongitude());
        int y=view.getMapYForPoint(o.getLatitude());
        if (i == 1) {
          pathBearing=(float)(Math.atan2(y - py,x - px) / Math.PI * 180);
        }
        path.lineTo(x,y);
      }
      canvas.drawPath(path,paint);
    }
  }
}
