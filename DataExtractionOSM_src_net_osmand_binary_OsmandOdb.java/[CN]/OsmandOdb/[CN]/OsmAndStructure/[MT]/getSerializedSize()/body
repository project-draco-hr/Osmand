{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (hasVersion()) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(1,getVersion());
  }
  for (  net.osmand.binary.OsmandOdb.OsmAndTransportIndex element : getTransportIndexList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(4,element);
  }
  for (  net.osmand.binary.OsmandOdb.OsmAndMapIndex element : getMapIndexList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(6,element);
  }
  for (  net.osmand.binary.OsmandOdb.OsmAndAddressIndex element : getAddressIndexList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(7,element);
  }
  for (  net.osmand.binary.OsmandOdb.OsmAndPoiIndex element : getPoiIndexList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(8,element);
  }
  if (hasVersionConfirm()) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(32,getVersionConfirm());
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
