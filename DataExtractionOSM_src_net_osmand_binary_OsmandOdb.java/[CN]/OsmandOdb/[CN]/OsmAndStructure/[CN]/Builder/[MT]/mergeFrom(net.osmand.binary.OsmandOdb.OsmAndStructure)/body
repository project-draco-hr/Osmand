{
  if (other == net.osmand.binary.OsmandOdb.OsmAndStructure.getDefaultInstance())   return this;
  if (other.hasVersion()) {
    setVersion(other.getVersion());
  }
  if (!other.addressIndex_.isEmpty()) {
    if (result.addressIndex_.isEmpty()) {
      result.addressIndex_=new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndAddressIndex>();
    }
    result.addressIndex_.addAll(other.addressIndex_);
  }
  if (!other.transportIndex_.isEmpty()) {
    if (result.transportIndex_.isEmpty()) {
      result.transportIndex_=new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndTransportIndex>();
    }
    result.transportIndex_.addAll(other.transportIndex_);
  }
  if (!other.poiIndex_.isEmpty()) {
    if (result.poiIndex_.isEmpty()) {
      result.poiIndex_=new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndPoiIndex>();
    }
    result.poiIndex_.addAll(other.poiIndex_);
  }
  if (!other.mapIndex_.isEmpty()) {
    if (result.mapIndex_.isEmpty()) {
      result.mapIndex_=new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndMapIndex>();
    }
    result.mapIndex_.addAll(other.mapIndex_);
  }
  if (other.hasVersionConfirm()) {
    setVersionConfirm(other.getVersionConfirm());
  }
  this.mergeUnknownFields(other.getUnknownFields());
  return this;
}
