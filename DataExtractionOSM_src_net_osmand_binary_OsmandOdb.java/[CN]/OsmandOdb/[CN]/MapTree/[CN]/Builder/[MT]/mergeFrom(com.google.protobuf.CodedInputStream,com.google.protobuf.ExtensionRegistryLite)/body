{
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
  while (true) {
    int tag=input.readTag();
switch (tag) {
case 0:
      this.setUnknownFields(unknownFields.build());
    return this;
default :
{
    if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
      this.setUnknownFields(unknownFields.build());
      return this;
    }
    break;
  }
case 8:
{
  setLeft(input.readSInt32());
  break;
}
case 16:
{
setRight(input.readSInt32());
break;
}
case 24:
{
setTop(input.readSInt32());
break;
}
case 32:
{
setBottom(input.readSInt32());
break;
}
case 42:
{
net.osmand.binary.OsmandOdb.StringTable.Builder subBuilder=net.osmand.binary.OsmandOdb.StringTable.newBuilder();
if (hasOldstringTable()) {
subBuilder.mergeFrom(getOldstringTable());
}
input.readMessage(subBuilder,extensionRegistry);
setOldstringTable(subBuilder.buildPartial());
break;
}
case 48:
{
setOldbaseId(input.readUInt64());
break;
}
case 58:
{
net.osmand.binary.OsmandOdb.MapTree.Builder subBuilder=net.osmand.binary.OsmandOdb.MapTree.newBuilder();
input.readMessage(subBuilder,extensionRegistry);
addSubtrees(subBuilder.buildPartial());
break;
}
case 66:
{
net.osmand.binary.OsmandOdb.MapData.Builder subBuilder=net.osmand.binary.OsmandOdb.MapData.newBuilder();
input.readMessage(subBuilder,extensionRegistry);
addLeafs(subBuilder.buildPartial());
break;
}
case 80:
{
setBaseId(input.readUInt64());
break;
}
case 90:
{
net.osmand.binary.OsmandOdb.StringTable.Builder subBuilder=net.osmand.binary.OsmandOdb.StringTable.newBuilder();
if (hasStringTable()) {
subBuilder.mergeFrom(getStringTable());
}
input.readMessage(subBuilder,extensionRegistry);
setStringTable(subBuilder.buildPartial());
break;
}
}
}
}
