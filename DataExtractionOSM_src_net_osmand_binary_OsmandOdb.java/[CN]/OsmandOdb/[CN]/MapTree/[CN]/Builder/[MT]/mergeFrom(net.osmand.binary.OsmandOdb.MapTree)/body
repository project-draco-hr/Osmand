{
  if (other == net.osmand.binary.OsmandOdb.MapTree.getDefaultInstance())   return this;
  if (other.hasLeft()) {
    setLeft(other.getLeft());
  }
  if (other.hasRight()) {
    setRight(other.getRight());
  }
  if (other.hasTop()) {
    setTop(other.getTop());
  }
  if (other.hasBottom()) {
    setBottom(other.getBottom());
  }
  if (other.hasOldstringTable()) {
    mergeOldstringTable(other.getOldstringTable());
  }
  if (other.hasOldbaseId()) {
    setOldbaseId(other.getOldbaseId());
  }
  if (!other.subtrees_.isEmpty()) {
    if (result.subtrees_.isEmpty()) {
      result.subtrees_=new java.util.ArrayList<net.osmand.binary.OsmandOdb.MapTree>();
    }
    result.subtrees_.addAll(other.subtrees_);
  }
  if (!other.leafs_.isEmpty()) {
    if (result.leafs_.isEmpty()) {
      result.leafs_=new java.util.ArrayList<net.osmand.binary.OsmandOdb.MapData>();
    }
    result.leafs_.addAll(other.leafs_);
  }
  if (other.hasBaseId()) {
    setBaseId(other.getBaseId());
  }
  if (other.hasStringTable()) {
    mergeStringTable(other.getStringTable());
  }
  this.mergeUnknownFields(other.getUnknownFields());
  return this;
}
