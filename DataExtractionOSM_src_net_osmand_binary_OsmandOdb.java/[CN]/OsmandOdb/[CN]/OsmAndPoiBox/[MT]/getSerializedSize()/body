{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (hasZoom()) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(1,getZoom());
  }
  if (hasLeft()) {
    size+=com.google.protobuf.CodedOutputStream.computeSInt32Size(2,getLeft());
  }
  if (hasTop()) {
    size+=com.google.protobuf.CodedOutputStream.computeSInt32Size(3,getTop());
  }
  if (hasCategories()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(4,getCategories());
  }
  if (hasIncludeNamesList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(5,getIncludeNamesList());
  }
  if (hasExcludeNamesList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(6,getExcludeNamesList());
  }
  for (  net.osmand.binary.OsmandOdb.OsmAndPoiBox element : getSubBoxesList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(10,element);
  }
  if (hasShiftToData()) {
    size+=com.google.protobuf.CodedOutputStream.computeFixed32Size(14,getShiftToData());
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
