{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (hasName()) {
    size+=com.google.protobuf.CodedOutputStream.computeStringSize(1,getName());
  }
  for (  net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule element : getRulesList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(2,element);
  }
  for (  net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox element : getRootBoxesList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(3,element);
  }
  for (  net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox element : getBasemapBoxesList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(4,element);
  }
  for (  net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock element : getBlocksList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(5,element);
  }
  if (hasBorderBox()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(7,getBorderBox());
  }
  if (hasBaseBorderBox()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(8,getBaseBorderBox());
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
