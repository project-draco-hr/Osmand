{
  net.osmand.binary.OsmandOdb.StreetIndex result=new net.osmand.binary.OsmandOdb.StreetIndex(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  result.name_=name_;
  if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
    to_bitField0_|=0x00000002;
  }
  result.nameEn_=nameEn_;
  if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
    to_bitField0_|=0x00000004;
  }
  result.x_=x_;
  if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
    to_bitField0_|=0x00000008;
  }
  result.y_=y_;
  if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
    to_bitField0_|=0x00000010;
  }
  result.id_=id_;
  if (buildingsBuilder_ == null) {
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      buildings_=java.util.Collections.unmodifiableList(buildings_);
      bitField0_=(bitField0_ & ~0x00000020);
    }
    result.buildings_=buildings_;
  }
 else {
    result.buildings_=buildingsBuilder_.build();
  }
  if (intersectionsBuilder_ == null) {
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      intersections_=java.util.Collections.unmodifiableList(intersections_);
      bitField0_=(bitField0_ & ~0x00000040);
    }
    result.intersections_=intersections_;
  }
 else {
    result.intersections_=intersectionsBuilder_.build();
  }
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
