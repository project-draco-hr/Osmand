{
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
  while (true) {
    int tag=input.readTag();
switch (tag) {
case 0:
      this.setUnknownFields(unknownFields.build());
    return this;
default :
{
    if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
      this.setUnknownFields(unknownFields.build());
      return this;
    }
    break;
  }
case 10:
{
  setName(input.readString());
  break;
}
case 18:
{
setNameEn(input.readString());
break;
}
case 42:
{
net.osmand.binary.OsmandOdb.CitiesIndex.Builder subBuilder=net.osmand.binary.OsmandOdb.CitiesIndex.newBuilder();
if (hasCities()) {
subBuilder.mergeFrom(getCities());
}
input.readMessage(subBuilder,extensionRegistry);
setCities(subBuilder.buildPartial());
break;
}
case 50:
{
net.osmand.binary.OsmandOdb.PostcodesIndex.Builder subBuilder=net.osmand.binary.OsmandOdb.PostcodesIndex.newBuilder();
if (hasPostcodes()) {
subBuilder.mergeFrom(getPostcodes());
}
input.readMessage(subBuilder,extensionRegistry);
setPostcodes(subBuilder.buildPartial());
break;
}
case 58:
{
net.osmand.binary.OsmandOdb.CitiesIndex.Builder subBuilder=net.osmand.binary.OsmandOdb.CitiesIndex.newBuilder();
if (hasVillages()) {
subBuilder.mergeFrom(getVillages());
}
input.readMessage(subBuilder,extensionRegistry);
setVillages(subBuilder.buildPartial());
break;
}
}
}
}
