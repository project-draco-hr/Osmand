{
  List<OsMoDevice> delta=new ArrayList<OsMoDevice>();
  try {
    if (obj.has("group")) {
      parseGroup(obj.getJSONObject("group"),gr);
    }
    Map<String,OsMoDevice> toDelete=new HashMap<String,OsMoDevice>(gr.users);
    if (obj.has(USERS)) {
      JSONArray arr=obj.getJSONArray(USERS);
      for (int i=0; i < arr.length(); i++) {
        JSONObject o=(JSONObject)arr.get(i);
        String tid=o.getString(GROUP_TRACKER_ID);
        OsMoDevice device=toDelete.remove(tid);
        if (device == null) {
          device=new OsMoDevice();
          device.group=gr;
          device.trackerId=tid;
          device.enabled=true;
          gr.users.put(tid,device);
        }
        if (o.has(USER_NAME)) {
          device.serverName=o.getString(USER_NAME);
        }
        if (o.has(DELETED)) {
          device.deleted=System.currentTimeMillis();
        }
 else {
          device.deleted=0;
        }
        if (o.has(LAST_ONLINE)) {
          device.lastOnline=o.getLong(LAST_ONLINE);
        }
        if (o.has(USER_COLOR)) {
          device.serverColor=net.osmand.util.Algorithms.parseColor(o.getString(USER_COLOR));
        }
        delta.add(device);
      }
    }
    if (obj.has(TRACKS)) {
      JSONArray ar=obj.getJSONArray(TRACKS);
      JSONObject[] a=new JSONObject[ar.length()];
      for (int i=0; i < a.length; i++) {
        a[i]=(JSONObject)ar.get(i);
      }
      plugin.getDownloadGpxTask(true).execute(a);
    }
    if (deleteUsers) {
      for (      OsMoDevice s : toDelete.values()) {
        s.deleted=System.currentTimeMillis();
        delta.add(s);
      }
    }
  }
 catch (  JSONException e) {
    e.printStackTrace();
    service.showErrorMessage(e.getMessage());
  }
  return delta;
}
