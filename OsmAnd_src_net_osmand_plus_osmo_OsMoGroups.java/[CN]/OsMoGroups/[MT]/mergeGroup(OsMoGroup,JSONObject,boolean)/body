{
  try {
    if (obj.has(GROUP_NAME)) {
      gr.name=obj.getString(GROUP_NAME);
    }
    if (obj.has(MY_GROUP_TRACKER_ID)) {
      gr.myGroupTrackerId=obj.getString(MY_GROUP_TRACKER_ID);
    }
    JSONArray arr=obj.getJSONArray(GROUP_TRACKERS);
    Set<String> toDelete=new HashSet<String>(gr.users.keySet());
    for (int i=0; i < arr.length(); i++) {
      JSONObject o=(JSONObject)arr.get(i);
      String tid=o.getString(TRACKER_ID);
      toDelete.remove(tid);
      OsMoUser us=gr.users.get(tid);
      if (us == null) {
        us=new OsMoUser();
        us.trackerId=tid;
        gr.users.put(tid,us);
        if (gr.active) {
          if (!tid.equals(gr.myGroupTrackerId)) {
            tracker.startTrackingId(tid);
          }
        }
      }
      if (o.has(NAME)) {
        us.serverName=o.getString(NAME);
      }
    }
    if (deleteUsers) {
      for (      String s : toDelete) {
        gr.users.remove(s);
        if (gr.active) {
          tracker.stopTrackingId(s);
        }
      }
    }
  }
 catch (  JSONException e) {
    e.printStackTrace();
    service.showErrorMessage(e.getMessage());
  }
}
