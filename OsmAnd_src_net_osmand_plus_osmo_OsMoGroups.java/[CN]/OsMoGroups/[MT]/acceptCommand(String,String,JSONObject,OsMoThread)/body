{
  boolean processed=false;
  String operation=command;
  OsMoGroup group=null;
  if (command.startsWith("GROUP_CHANGE:")) {
    String gid=command.substring(command.indexOf(':') + 1);
    group=storage.getGroup(gid);
    if (group != null) {
      List<OsMoDevice> delta=mergeGroup(group,obj,false);
      for (      OsMoDevice d : delta) {
        if (d.getDeletedTimestamp() != 0 && d.isEnabled()) {
          disconnectImpl(d);
        }
 else         if (d.isEnabled() && !d.isActive()) {
          connectDeviceImpl(d);
        }
      }
      storage.save();
    }
    processed=true;
  }
 else   if (command.startsWith("GROUP_DISCONNECT:")) {
    String gid=command.substring(command.indexOf(':') + 1);
    group=storage.getGroup(gid);
    if (group != null) {
      disconnectAllGroupUsers(group);
    }
    processed=true;
  }
 else   if (command.startsWith("GROUP_CONNECT:")) {
    String gid=command.substring(command.indexOf(':') + 1);
    group=storage.getGroup(gid);
    if (group != null) {
      mergeGroup(group,obj,true);
      group.active=true;
      for (      OsMoDevice d : storage.getMainGroup().getGroupUsers()) {
        connectDeviceImpl(d);
      }
      storage.save();
    }
    processed=true;
  }
 else   if (command.startsWith("AGROUP_CREATE") || command.startsWith("GROUP_JOIN:")) {
    String gid;
    if (command.startsWith("AGROUP_CREATE")) {
      try {
        gid=obj.getString(GROUP_ID);
      }
 catch (      JSONException e) {
        e.printStackTrace();
        service.showErrorMessage(e.getMessage());
        return true;
      }
    }
 else {
      gid=command.substring(command.indexOf(':') + 1);
    }
    group=storage.getGroup(gid);
    if (group == null) {
      group=new OsMoGroup();
      group.groupId=gid;
      storage.addGroup(group);
    }
    parseGroup(obj,group);
    connectGroupImpl(group);
    storage.save();
    processed=true;
  }
 else   if (command.startsWith("LEAVE_GROUP:")) {
    String gid=command.substring(command.indexOf(':') + 1);
    group=storage.getGroup(gid);
    if (group != null) {
      disconnectAllGroupUsers(group);
      storage.deleteGroup(group);
      storage.save();
    }
    processed=true;
  }
  if (processed && uiListener != null) {
    uiListener.groupsListChange(operation,group);
  }
  return processed;
}
