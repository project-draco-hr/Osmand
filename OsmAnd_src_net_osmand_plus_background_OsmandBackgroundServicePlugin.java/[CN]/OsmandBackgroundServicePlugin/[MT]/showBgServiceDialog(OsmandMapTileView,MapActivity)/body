{
  final View bgServiceView=mapActivity.getLayoutInflater().inflate(R.layout.background_service,null);
  Builder dialog=new AlertDialog.Builder(mapActivity);
  dialog.setView(bgServiceView);
  dialog.setTitle("Background Service");
  CheckBox lockCheck=(CheckBox)bgServiceView.findViewById(R.id.screen_lock_check);
  lockCheck.setChecked(isScreenLocked);
  lockCheck.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){
    @Override public void onCheckedChanged(    CompoundButton buttonView,    boolean isChecked){
      isScreenLocked=isChecked;
      updateLayers(view,mapActivity);
    }
  }
);
  CheckBox bgCheck=(CheckBox)bgServiceView.findViewById(R.id.sleep_mode_check);
  bgCheck.setChecked(app.getNavigationService() != null);
  bgCheck.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){
    @Override public void onCheckedChanged(    CompoundButton buttonView,    boolean isChecked){
      Context applicationContext=app.getApplicationContext();
      Intent serviceIntent=new Intent(applicationContext,NavigationService.class);
      if (isChecked) {
        applicationContext.startService(serviceIntent);
      }
 else {
        applicationContext.stopService(serviceIntent);
      }
    }
  }
);
  Spinner intSpinner=(Spinner)bgServiceView.findViewById(R.id.wake_up_int_spinner);
  final int secondsLength=SECONDS.length;
  final int minutesLength=MINUTES.length;
  final int coef=1000;
  int selection=0;
  Integer interval=settings.SERVICE_OFF_INTERVAL.get();
  String[] intDescriptions=new String[minutesLength + secondsLength];
  for (int i=0; i < secondsLength; i++) {
    intDescriptions[i]=SECONDS[i] + " " + mapActivity.getString(R.string.int_seconds);
    if (interval == SECONDS[i] * coef) {
      selection=i;
    }
  }
  for (int i=0; i < minutesLength; i++) {
    intDescriptions[secondsLength + i]=MINUTES[i] + " " + mapActivity.getString(R.string.int_min);
    if (interval == MINUTES[i] * 60 * coef) {
      selection=secondsLength + i;
    }
  }
  ArrayAdapter<String> adapter=new ArrayAdapter<String>(mapActivity,R.layout.my_spinner_text,intDescriptions);
  adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
  intSpinner.setAdapter(adapter);
  intSpinner.setSelection(selection);
  intSpinner.setOnItemSelectedListener(new OnItemSelectedListener(){
    @Override public void onItemSelected(    AdapterView<?> parent,    View view,    int position,    long id){
      if (position < secondsLength) {
        settings.SERVICE_OFF_INTERVAL.set(SECONDS[position] * coef);
        return;
      }
 else {
        settings.SERVICE_OFF_INTERVAL.set(MINUTES[position - secondsLength] * 60 * coef);
        return;
      }
    }
    @Override public void onNothingSelected(    AdapterView<?> parent){
    }
  }
);
  dialog.setNeutralButton(R.string.default_buttons_ok,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      dialog.dismiss();
    }
  }
);
  dialog.show();
}
