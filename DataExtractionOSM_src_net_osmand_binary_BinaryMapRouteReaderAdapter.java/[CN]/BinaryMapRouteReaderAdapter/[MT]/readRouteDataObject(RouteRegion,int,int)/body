{
  RouteDataObject o=new RouteDataObject(reg);
  while (true) {
    int ts=codedIS.readTag();
    int tags=WireFormat.getTagFieldNumber(ts);
switch (tags) {
case 0:
      return o;
case RouteData.TYPES_FIELD_NUMBER:
    int len=codedIS.readRawVarint32();
  int oldLimit=codedIS.pushLimit(len);
while (codedIS.getBytesUntilLimit() > 0) {
  o.types.add(codedIS.readRawVarint32());
}
codedIS.popLimit(oldLimit);
break;
case RouteData.POINTS_FIELD_NUMBER:
len=codedIS.readRawVarint32();
oldLimit=codedIS.pushLimit(len);
int px=pleftx >> SHIFT_COORDINATES;
int py=ptopy >> SHIFT_COORDINATES;
while (codedIS.getBytesUntilLimit() > 0) {
int x=(codedIS.readSInt32()) + px;
int y=(codedIS.readSInt32()) + py;
o.pointsX.add(x << SHIFT_COORDINATES);
o.pointsY.add(y << SHIFT_COORDINATES);
px=x;
py=y;
}
codedIS.popLimit(oldLimit);
break;
case RouteData.POINTTYPES_FIELD_NUMBER:
len=codedIS.readRawVarint32();
oldLimit=codedIS.pushLimit(len);
while (codedIS.getBytesUntilLimit() > 0) {
int pointInd=codedIS.readRawVarint32();
TIntArrayList pointTypes=new TIntArrayList();
int lens=codedIS.readRawVarint32();
int oldLimits=codedIS.pushLimit(lens);
while (codedIS.getBytesUntilLimit() > 0) {
pointTypes.add(codedIS.readRawVarint32());
}
o.setPointTypes(pointInd,pointTypes);
codedIS.popLimit(oldLimits);
}
codedIS.popLimit(oldLimit);
break;
case RouteData.ROUTEID_FIELD_NUMBER:
o.id=codedIS.readInt32();
break;
default :
skipUnknownField(ts);
break;
}
}
}
