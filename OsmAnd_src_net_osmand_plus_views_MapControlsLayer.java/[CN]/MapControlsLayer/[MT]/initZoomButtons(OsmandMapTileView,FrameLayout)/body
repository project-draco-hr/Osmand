{
  int minimumWidth=view.getResources().getDrawable(R.drawable.map_zoom_in).getMinimumWidth();
  Context ctx=view.getContext();
  ImageView bottomShadow=new ImageView(ctx);
  bottomShadow.setBackgroundResource(R.drawable.bottom_shadow);
  android.widget.FrameLayout.LayoutParams params=new FrameLayout.LayoutParams(LayoutParams.FILL_PARENT,LayoutParams.WRAP_CONTENT,Gravity.BOTTOM);
  params.setMargins(0,0,0,0);
  parent.addView(bottomShadow,params);
  zoomTextPaint=new TextPaint();
  zoomTextPaint.setTextSize(18 * scaleCoefficient);
  zoomTextPaint.setAntiAlias(true);
  zoomTextPaint.setFakeBoldText(true);
  zoomShadow=view.getResources().getDrawable(R.drawable.zoom_background);
  zoomInButton=new Button(ctx);
  zoomInButton.setBackgroundResource(R.drawable.map_zoom_in);
  params=new FrameLayout.LayoutParams(LayoutParams.WRAP_CONTENT,LayoutParams.WRAP_CONTENT,Gravity.BOTTOM | Gravity.RIGHT);
  params.setMargins(0,0,0,0);
  zoomInButton.setContentDescription(ctx.getString(R.string.zoomIn));
  parent.addView(zoomInButton,params);
  zoomOutButton=new Button(ctx);
  zoomOutButton.setBackgroundResource(R.drawable.map_zoom_out);
  params=new FrameLayout.LayoutParams(LayoutParams.WRAP_CONTENT,LayoutParams.WRAP_CONTENT,Gravity.BOTTOM | Gravity.RIGHT);
  params.setMargins(0,0,minimumWidth,0);
  zoomOutButton.setContentDescription(ctx.getString(R.string.zoomOut));
  parent.addView(zoomOutButton,params);
  activity.accessibleContent.add(zoomInButton);
  activity.accessibleContent.add(zoomOutButton);
  zoomInButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (view.isZooming()) {
        activity.changeZoom(2);
      }
 else {
        activity.changeZoom(1);
      }
    }
  }
);
  final OsmandSettings.OsmandPreference<Float> zoomScale=view.getSettings().MAP_ZOOM_SCALE_BY_DENSITY;
  final View.OnLongClickListener listener=new View.OnLongClickListener(){
    @Override public boolean onLongClick(    View v){
      final AlertDialog.Builder bld=new AlertDialog.Builder(view.getContext());
      float scale=view.getZoomScale();
      int p=(int)Math.round(scale * scale * 100) + 100;
      final TIntArrayList tlist=new TIntArrayList(new int[]{100,150,200,300,400});
      final List<String> values=new ArrayList<String>();
      int i=-1;
      for (int k=0; k <= tlist.size(); k++) {
        final boolean end=k == tlist.size();
        if (i == -1) {
          if ((end || p < tlist.get(k))) {
            values.add(p + "%");
            i=k;
          }
 else           if (p == tlist.get(k)) {
            i=k;
          }
        }
        if (k < tlist.size()) {
          values.add(tlist.get(k) + "%");
        }
      }
      if (values.size() != tlist.size()) {
        tlist.insert(i,p);
      }
      bld.setTitle(R.string.map_magnifier);
      bld.setSingleChoiceItems(values.toArray(new String[values.size()]),i,new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int which){
          float newScale=(float)Math.sqrt((tlist.get(which) - 100f) / 100f);
          zoomScale.set(newScale - (float)Math.sqrt(Math.max(view.getDensity() - 1,0)));
          view.getAnimatedDraggingThread().startZooming(view.getZoom(),view.getSettingsZoomScale(),false);
          dialog.dismiss();
        }
      }
);
      bld.show();
      return true;
    }
  }
;
  zoomInButton.setOnLongClickListener(listener);
  zoomOutButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      activity.changeZoom(-1);
    }
  }
);
  zoomOutButton.setOnLongClickListener(listener);
}
