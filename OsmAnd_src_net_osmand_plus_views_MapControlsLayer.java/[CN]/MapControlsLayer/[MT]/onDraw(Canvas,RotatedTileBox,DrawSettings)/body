{
  boolean isNight=nightMode != null && nightMode.isNightMode();
  int shadw=isNight ? Color.TRANSPARENT : Color.WHITE;
  int textColor=isNight ? NIGHT_COLOR : Color.BLACK;
  if (shadowColor != shadw) {
    shadowColor=shadw;
    updatextColor(textColor,shadw,rulerControl,zoomControls,mapMenuControls);
  }
  boolean showDefaultButtons=false;
  checkVisibilityAndDraw(showDefaultButtons,zoomControls,canvas,tileBox,nightMode);
  checkVisibilityAndDraw(showDefaultButtons,mapMenuControls,canvas,tileBox,nightMode);
  boolean showRouteCalculationControls=!mapMenuControls.isVisible();
  checkVisibilityAndDraw(showRouteCalculationControls,mapSmallMenuControls,canvas,tileBox,nightMode);
  checkVisibilityAndDraw(showRouteCalculationControls,mapCancelNavigationControl,canvas,tileBox,nightMode);
  checkVisibilityAndDraw(showRouteCalculationControls,mapInfoNavigationControl,canvas,tileBox,nightMode);
  checkVisibilityAndDraw(showRouteCalculationControls,mapAppModeControl,canvas,tileBox,nightMode);
  checkVisibilityAndDraw(showRouteCalculationControls,mapNavigationControl,canvas,tileBox,nightMode);
  int vmargin=mapNavigationControl.isVisible() || zoomControls.isVisible() ? zoomControls.getHeight() : 0;
  rulerControl.setVerticalMargin(vmargin);
  checkVisibilityAndDraw(true,rulerControl,canvas,tileBox,nightMode);
}
