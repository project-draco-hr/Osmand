{
  boolean isNight=nightMode != null && nightMode.isNightMode();
  int shadw=isNight ? Color.TRANSPARENT : Color.WHITE;
  int textColor=isNight ? mapActivity.getResources().getColor(R.color.widgettext_night) : Color.BLACK;
  if (shadowColor != shadw) {
    shadowColor=shadw;
  }
  boolean routePlanningMode=false;
  RoutingHelper rh=mapActivity.getRoutingHelper();
  if (rh.isRoutePlanningMode()) {
    routePlanningMode=true;
  }
 else   if ((rh.isRouteCalculated() || rh.isRouteBeingCalculated()) && !rh.isFollowingMode()) {
    routePlanningMode=true;
  }
  boolean routeFollowingMode=!routePlanningMode && rh.isFollowingMode();
  boolean showRouteCalculationControls=routePlanningMode;
  boolean showDefaultButtons=!routePlanningMode && (!routeFollowingMode || settings.SHOW_ZOOM_BUTTONS_NAVIGATION.get());
  boolean enabled=mapActivity.getMyApplication().getLocationProvider().getLastKnownLocation() != null;
  boolean tracked=mapActivity.getMapViewTrackingUtilities().isMapLinkedToLocation();
  if (!enabled) {
    backToLocationControl.setIconColorId(R.color.icon_color_light);
  }
 else   if (tracked) {
    backToLocationControl.setIconColorId(R.color.color_distance);
  }
 else {
    backToLocationControl.setIconColorId(R.color.color_white);
  }
  menuControl.setIconResId(mapActivity.getMyApplication().getSettings().USE_DASHBOARD_INSTEAD_OF_DRAWER.get() ? R.drawable.ic_dashboard_dark : R.drawable.ic_navigation_drawer);
  optionsRouteControl.setIconResId(settings.getApplicationMode().getSmallIcon(true));
  int vis=showRouteCalculationControls ? View.VISIBLE : View.GONE;
  if (showRouteCalculationControls) {
    ((TextView)routeGoControl.iv).setTextColor(textColor);
    final String text;
    if (startCounter > 0) {
      int get=(int)((startCounter - System.currentTimeMillis()) / 1000l);
      text=mapActivity.getString(R.string.shared_string_go) + " (" + get+ ")";
    }
 else {
      text=mapActivity.getString(R.string.shared_string_go);
    }
    ((TextView)routeGoControl.iv).setText(text);
  }
  if (routePreparationLayout.getVisibility() != vis) {
    routePreparationLayout.setVisibility(vis);
    mapRouteInfoControlDialog.setVisible(showRouteCalculationControls);
    if (showRouteCalculationControls) {
      if (!mapActivity.getRoutingHelper().isFollowingMode() && !mapActivity.getRoutingHelper().isPauseNavigation()) {
        startCounter();
      }
    }
 else {
      stopCounter();
    }
  }
  float mapRotate=mapActivity.getMapView().getRotate();
  if (mapRotate != cachedRotate) {
    cachedRotate=mapRotate;
    compassHud.iv.invalidate();
  }
  if (settings.ROTATE_MAP.get() == OsmandSettings.ROTATE_MAP_NONE) {
    compassHud.setIconResId(isNight ? R.drawable.map_compass_niu_white : R.drawable.map_compass_niu);
  }
 else   if (settings.ROTATE_MAP.get() == OsmandSettings.ROTATE_MAP_BEARING) {
    compassHud.setIconResId(isNight ? R.drawable.map_compass_bearing_white : R.drawable.map_compass_bearing);
  }
 else {
    compassHud.setIconResId(isNight ? R.drawable.map_compass_white : R.drawable.map_compass);
  }
  for (  MapHudButton mc : controls) {
    mc.update(mapActivity.getMyApplication(),nightMode == null ? false : nightMode.isNightMode());
  }
}
