{
  final ProgressDialog dlg=ProgressDialog.show(this,getString(R.string.downloading),getString(R.string.downloading_file),true,true);
  dlg.show();
  final ProgressDialogImplementation impl=new ProgressDialogImplementation(dlg,true);
  impl.setRunnable("DownloadIndex",new Runnable(){
    @Override public void run(){
      try {
        FileOutputStream out=new FileOutputStream(file);
        try {
          URL url=DownloaderIndexFromGoogleCode.getInputStreamToLoadIndex(key);
          URLConnection conn=url.openConnection();
          InputStream is=conn.getInputStream();
          impl.startTask(getString(R.string.downloading_file),conn.getContentLength());
          byte[] buffer=new byte[BUFFER_SIZE];
          int read=0;
          while ((read=is.read(buffer)) != -1) {
            out.write(buffer,0,read);
            impl.progress(read);
          }
          ArrayList<String> warnings=new ArrayList<String>();
          if (file.getName().endsWith(IndexConstants.ADDRESS_INDEX_EXT)) {
            ResourceManager.getResourceManager().indexingAddress(impl,warnings,file);
          }
 else           if (file.getName().endsWith(IndexConstants.POI_INDEX_EXT)) {
            ResourceManager.getResourceManager().indexingPoi(impl,warnings,file);
          }
 else           if (file.getName().endsWith(IndexConstants.TRANSPORT_INDEX_EXT)) {
            ResourceManager.getResourceManager().indexingTransport(impl,warnings,file);
          }
          if (warnings.isEmpty()) {
            showWarning(getString(R.string.download_index_success));
          }
 else {
            showWarning(warnings.get(0));
          }
        }
  finally {
          out.close();
        }
      }
 catch (      IOException e) {
        log.error("Exception ocurred",e);
        showWarning(getString(R.string.error_io_error));
        file.delete();
      }
 finally {
        dlg.dismiss();
      }
    }
  }
);
  impl.run();
}
