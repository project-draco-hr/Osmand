{
  JPanel panel=new JPanel(new BorderLayout());
  searchTextField=new JTextField();
  final JButton button=new JButton();
  button.setText("Set town");
  panel.add(searchTextField,BorderLayout.CENTER);
  panel.add(button,BorderLayout.WEST);
  content.add(panel,BorderLayout.NORTH);
  searchList=new JList();
  searchList.setCellRenderer(new DefaultListCellRenderer(){
    private static final long serialVersionUID=4661949460526837891L;
    @Override public Component getListCellRendererComponent(    JList list,    Object value,    int index,    boolean isSelected,    boolean cellHasFocus){
      super.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
      if (value instanceof City) {
        setText(((City)value).getName());
      }
      return this;
    }
  }
);
  updateListCities(region,searchTextField.getText(),searchList);
  searchTextField.getDocument().addUndoableEditListener(new UndoableEditListener(){
    @Override public void undoableEditHappened(    UndoableEditEvent e){
      updateListCities(region,searchTextField.getText(),searchList);
    }
  }
);
  button.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      selectedCity=(City)searchList.getSelectedValue();
    }
  }
);
  searchList.addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      if (searchList.getSelectedValue() != null) {
        LatLon node=((City)searchList.getSelectedValue()).getLocation();
        String text="Lat : " + node.getLatitude() + " Lon "+ node.getLongitude();
        if (selectedCity != null) {
          text+=" distance " + MapUtils.getDistance(node,node);
        }
        mapPanel.setLatLon(node.getLatitude(),node.getLongitude());
      }
    }
  }
);
}
