{
  treePlaces=new JTree();
  treePlaces.setModel(new DefaultTreeModel(new DefaultMutableTreeNode("Region"),false));
  treePlaces.setEditable(true);
  treePlaces.setCellEditor(new RegionCellEditor(treePlaces,(DefaultTreeCellRenderer)treePlaces.getCellRenderer()));
  treePlaces.addTreeSelectionListener(new TreeSelectionListener(){
    @SuppressWarnings("unchecked") @Override public void valueChanged(    TreeSelectionEvent e){
      if (e.getPath() != null) {
        if (e.getPath().getLastPathComponent() instanceof DataExtractionTreeNode) {
          Object o=((DataExtractionTreeNode)e.getPath().getLastPathComponent()).getModelObject();
          if (o instanceof MapObject<?>) {
            MapObject<Entity> c=(MapObject<Entity>)o;
            LatLon location=c.getLocation();
            if (location != null) {
              if (o instanceof Street) {
                DataTileManager<Way> ways=new DataTileManager<Way>();
                for (                Way w : ((Street)o).getWayNodes()) {
                  LatLon l=w.getLatLon();
                  ways.registerObject(l.getLatitude(),l.getLongitude(),w);
                }
                mapPanel.setPoints(ways);
                mapPanel.requestFocus();
              }
              mapPanel.setLatLon(location.getLatitude(),location.getLongitude());
              mapPanel.requestFocus();
            }
          }
 else           if (o instanceof Entity) {
            Entity c=(Entity)o;
            LatLon latLon=c.getLatLon();
            if (latLon != null) {
              mapPanel.setLatLon(latLon.getLatitude(),latLon.getLongitude());
              mapPanel.requestFocus();
            }
          }
        }
      }
    }
  }
);
  treeModelListener=new TreeModelListener(){
    public void treeNodesChanged(    TreeModelEvent e){
      DefaultMutableTreeNode node;
      node=(DefaultMutableTreeNode)(e.getTreePath().getLastPathComponent());
      if (node instanceof DataExtractionTreeNode) {
        if (((DataExtractionTreeNode)node).getModelObject() instanceof Region) {
          Region r=(Region)((DataExtractionTreeNode)node).getModelObject();
          r.setName(node.getUserObject().toString());
        }
 else         if (((DataExtractionTreeNode)node).getModelObject() instanceof MapObject<?>) {
          MapObject<?> r=(MapObject<?>)((DataExtractionTreeNode)node).getModelObject();
          r.setName(node.getUserObject().toString());
        }
      }
    }
    public void treeNodesInserted(    TreeModelEvent e){
    }
    public void treeNodesRemoved(    TreeModelEvent e){
    }
    public void treeStructureChanged(    TreeModelEvent e){
    }
  }
;
  treePlaces.getModel().addTreeModelListener(treeModelListener);
  return treePlaces;
}
