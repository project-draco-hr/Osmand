{
  JMenu menu=new JMenu("File");
  bar.add(menu);
  JMenuItem loadFile=new JMenuItem("Load osm file...");
  menu.add(loadFile);
  JMenuItem loadSpecifiedAreaFile=new JMenuItem("Load osm file for specifed area...");
  menu.add(loadSpecifiedAreaFile);
  menu.addSeparator();
  JMenuItem saveOsmFile=new JMenuItem("Save data to osm file...");
  menu.add(saveOsmFile);
  JMenuItem specifyWorkingDir=new JMenuItem("Specify working directory...");
  menu.add(specifyWorkingDir);
  menu.addSeparator();
  JMenuItem exitMenu=new JMenuItem("Exit");
  menu.add(exitMenu);
  bar.add(MapPanel.getMenuToChooseSource(mapPanel));
  exitMenu.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      frame.setVisible(false);
    }
  }
);
  specifyWorkingDir.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      JFileChooser fc=new JFileChooser();
      fc.setDialogTitle("Choose working directory");
      fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
      File workingDir=DataExtractionSettings.getSettings().getDefaultWorkingDir();
      if (workingDir != null) {
        fc.setCurrentDirectory(workingDir);
      }
      if (fc.showOpenDialog(frame) == JFileChooser.APPROVE_OPTION && fc.getSelectedFile() != null && fc.getSelectedFile().isDirectory()) {
        DataExtractionSettings.getSettings().saveDefaultWorkingDir(fc.getSelectedFile());
        mapPanel.setTilesLocation(DataExtractionSettings.getSettings().getTilesDirectory());
        statusBarLabel.setText("Working directory : " + fc.getSelectedFile().getAbsolutePath());
        updateButtonsBar();
      }
    }
  }
);
  loadSpecifiedAreaFile.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      JFileChooser fc=getOsmFileChooser();
      int answer=fc.showOpenDialog(frame);
      if (answer == JFileChooser.APPROVE_OPTION && fc.getSelectedFile() != null) {
        final JDialog dlg=new JDialog(frame,true);
        dlg.setTitle("Select area to filter");
        MapPanel panel=new MapPanel(DataExtractionSettings.getSettings().getTilesDirectory());
        panel.setLatLon(mapPanel.getLatitude(),mapPanel.getLongitude());
        panel.setZoom(mapPanel.getZoom());
        final StringBuilder res=new StringBuilder();
        panel.setAreaActionHandler(new AbstractAction("Select area"){
          private static final long serialVersionUID=-3452957517341961969L;
          @Override public void actionPerformed(          ActionEvent e){
            res.append(true);
            dlg.setVisible(false);
          }
        }
);
        dlg.add(panel);
        JMenuBar bar=new JMenuBar();
        bar.add(MapPanel.getMenuToChooseSource(panel));
        dlg.setJMenuBar(bar);
        dlg.setSize(512,512);
        double x=frame.getBounds().getCenterX();
        double y=frame.getBounds().getCenterY();
        dlg.setLocation((int)x - dlg.getWidth() / 2,(int)y - dlg.getHeight() / 2);
        dlg.setVisible(true);
        if (res.length() > 0 && panel.getSelectionArea().isVisible()) {
          MapSelectionArea area=panel.getSelectionArea();
          IOsmStorageFilter filter=new OsmBoundsFilter(area.getLat1(),area.getLon1(),area.getLat2(),area.getLon2());
          loadCountry(fc.getSelectedFile(),filter);
        }
      }
    }
  }
);
  loadFile.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      JFileChooser fc=getOsmFileChooser();
      int answer=fc.showOpenDialog(frame);
      if (answer == JFileChooser.APPROVE_OPTION && fc.getSelectedFile() != null) {
        loadCountry(fc.getSelectedFile(),null);
      }
    }
  }
);
  saveOsmFile.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      if (region == null) {
        return;
      }
      JFileChooser fc=getOsmFileChooser();
      int answer=fc.showSaveDialog(frame);
      if (answer == JFileChooser.APPROVE_OPTION && fc.getSelectedFile() != null) {
        saveCountry(fc.getSelectedFile());
      }
    }
  }
);
}
