{
  Action delete=new AbstractAction("Delete"){
    private static final long serialVersionUID=7476603434847164396L;
    public void actionPerformed(    ActionEvent e){
      TreePath[] p=treePlaces.getSelectionPaths();
      if (p != null && JOptionPane.OK_OPTION == JOptionPane.showConfirmDialog(frame,"Are you sure about deleting " + p.length + " resources ? ")) {
        for (        TreePath path : treePlaces.getSelectionPaths()) {
          Object node=path.getLastPathComponent();
          if (node instanceof DataExtractionTreeNode) {
            DataExtractionTreeNode n=((DataExtractionTreeNode)node);
            if (n.getParent() instanceof DataExtractionTreeNode) {
              DataExtractionTreeNode parent=((DataExtractionTreeNode)n.getParent());
              boolean remove=false;
              if (n.getModelObject() instanceof Street) {
                ((City)parent.getModelObject()).unregisterStreet(((Street)n.getModelObject()).getName());
                remove=true;
              }
 else               if (n.getModelObject() instanceof Building) {
                ((Street)parent.getModelObject()).getBuildings().remove(n.getModelObject());
                remove=true;
              }
 else               if (n.getModelObject() instanceof City) {
                Region r=(Region)((DataExtractionTreeNode)parent.getParent()).getModelObject();
                r.unregisterCity((City)n.getModelObject());
                remove=true;
              }
 else               if (n.getModelObject() instanceof Amenity) {
                Region r=(Region)((DataExtractionTreeNode)parent.getParent().getParent()).getModelObject();
                Amenity am=(Amenity)n.getModelObject();
                r.getAmenityManager().unregisterObject(am.getLocation().getLatitude(),am.getLocation().getLongitude(),am);
                remove=true;
              }
              if (remove) {
                parent.remove(n);
                ((DefaultTreeModel)treePlaces.getModel()).nodeStructureChanged(parent);
              }
            }
          }
        }
      }
    }
  }
;
  menu.add(delete);
  Action rename=new AbstractAction("Rename"){
    private static final long serialVersionUID=-8257594433235073767L;
    public void actionPerformed(    ActionEvent e){
      TreePath path=treePlaces.getSelectionPath();
      if (path != null) {
        treePlaces.startEditingAtPath(path);
      }
    }
  }
;
  menu.add(rename);
}
