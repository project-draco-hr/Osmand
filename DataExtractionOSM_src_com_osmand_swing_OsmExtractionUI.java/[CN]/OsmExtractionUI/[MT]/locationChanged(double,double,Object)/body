{
  if (amenitiesTree != null) {
    Region reg=(Region)amenitiesTree.getUserObject();
    List<Amenity> closestAmenities=reg.getClosestAmenities(newLatitude,newLongitude);
    Collections.sort(closestAmenities,new Comparator<Amenity>(){
      @Override public int compare(      Amenity o1,      Amenity o2){
        return Double.compare(MapUtils.getDistance(o1.getNode(),newLatitude,newLongitude),MapUtils.getDistance(o2.getNode(),newLatitude,newLongitude));
      }
    }
);
    Map<AmenityType,List<Amenity>> filter=new TreeMap<AmenityType,List<Amenity>>();
    for (    Amenity n : closestAmenities) {
      AmenityType type=n.getType();
      if (!filter.containsKey(type)) {
        filter.put(type,new ArrayList<Amenity>());
      }
      filter.get(type).add(n);
    }
    for (int i=1; i < amenitiesTree.getChildCount(); i++) {
      AmenityType type=(AmenityType)((DefaultMutableTreeNode)amenitiesTree.getChildAt(i)).getUserObject();
      ((DefaultMutableTreeNode)amenitiesTree.getChildAt(i)).removeAllChildren();
      if (filter.get(type) != null) {
        for (        Amenity n : filter.get(type)) {
          int dist=(int)(MapUtils.getDistance(n.getNode(),newLatitude,newLongitude));
          String str=n.getStringWithoutType() + " [" + dist+ " m ]";
          DataExtractionTreeNode node=new DataExtractionTreeNode(str,n);
          ((DefaultMutableTreeNode)amenitiesTree.getChildAt(i)).add(node);
        }
      }
      ((DefaultTreeModel)treePlaces.getModel()).nodeStructureChanged(amenitiesTree.getChildAt(i));
    }
    ((DefaultMutableTreeNode)amenitiesTree.getChildAt(0)).removeAllChildren();
    for (int i=0; i < 15 && i < closestAmenities.size(); i++) {
      Amenity n=closestAmenities.get(i);
      int dist=(int)(MapUtils.getDistance(n.getNode(),newLatitude,newLongitude));
      String str=n.getSimpleFormat() + " [" + dist+ " m ]";
      ((DefaultMutableTreeNode)amenitiesTree.getChildAt(0)).add(new DataExtractionTreeNode(str,n));
      ((DefaultTreeModel)treePlaces.getModel()).nodeStructureChanged(amenitiesTree.getChildAt(0));
    }
  }
}
