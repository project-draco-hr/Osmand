{
  if (isLocationVisible(lastKnownLocation)) {
    checkAppMode(view.getSettings().getApplicationMode());
    int locationX=view.getMapXForPoint(lastKnownLocation.getLongitude());
    int locationY=view.getMapYForPoint(lastKnownLocation.getLatitude());
    int radius=MapUtils.getLengthXFromMeters(view.getZoom(),view.getLatitude(),view.getLongitude(),lastKnownLocation.getAccuracy(),view.getTileSize(),view.getWidth());
    if (appMode == ApplicationMode.CAR) {
      if (!lastKnownLocation.hasBearing()) {
        canvas.drawCircle(locationX,locationY,RADIUS * 2.5f * dm.density,location);
        canvas.drawCircle(locationX,locationY,RADIUS * 2.5f * dm.density,bearingOver);
      }
    }
 else {
      canvas.drawCircle(locationX,locationY,RADIUS * dm.density,location);
      canvas.drawCircle(locationX,locationY,RADIUS * dm.density,bearingOver);
    }
    if (radius > RADIUS) {
      canvas.drawCircle(locationX,locationY,radius,area);
    }
    if (heading != null) {
      canvas.drawArc(getHeadingRect(locationX,locationY),heading - HEADING_ANGLE / 2 - 90,HEADING_ANGLE,true,headingPaint);
    }
    if (lastKnownLocation.hasBearing()) {
      float bearing=lastKnownLocation.getBearing();
      int radiusBearing=(int)(30 * dm.density);
      if (lastKnownLocation.hasSpeed() && appMode != ApplicationMode.CAR) {
        radiusBearing=Math.max(MapUtils.getLengthXFromMeters(view.getZoom(),view.getLatitude(),view.getLongitude(),lastKnownLocation.getSpeed(),view.getTileSize(),view.getWidth()) * 2,radiusBearing);
        radiusBearing=Math.min(radiusBearing,view.getHeight() / 4);
      }
      radiusBearing+=RADIUS * dm.density / 2;
      pathForDirection.reset();
      pathForDirection.moveTo(0,0);
      pathForDirection.lineTo((float)RADIUS,1f);
      pathForDirection.lineTo((float)-RADIUS,1f);
      pathForDirection.lineTo(0,0);
      Matrix m=new Matrix();
      m.reset();
      if (appMode == ApplicationMode.CAR) {
        m.postScale(2.5f * dm.density,radiusBearing * 1.5f);
        m.postTranslate(0,-radiusBearing / 2);
      }
 else       if (appMode == ApplicationMode.BICYCLE) {
        m.postScale(2 * dm.density,radiusBearing);
        m.postTranslate(0,-radiusBearing / 2);
      }
 else {
        m.postScale(dm.density,radiusBearing * 0.5f);
        m.postTranslate(0,-radiusBearing);
      }
      m.postTranslate(locationX,locationY);
      m.postRotate(bearing,locationX,locationY);
      pathForDirection.transform(m);
      canvas.drawPath(pathForDirection,this.bearing);
      canvas.drawPath(pathForDirection,this.bearingOver);
    }
  }
}
