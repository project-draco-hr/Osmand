{
  boolean nm=nightMode != null && nightMode.isNightMode();
  if (nm != this.nm) {
    this.nm=nm;
    area.setColor(view.getResources().getColor(!nm ? R.color.pos_area : R.color.pos_area_night));
    headingPaint.setColor(view.getResources().getColor(!nm ? R.color.pos_heading : R.color.pos_heading_night));
  }
  Location lastKnownLocation=locationProvider.getLastKnownLocation();
  if (lastKnownLocation == null || view == null) {
    return;
  }
  int locationX=view.getMapXForPoint(lastKnownLocation.getLongitude());
  int locationY=view.getMapYForPoint(lastKnownLocation.getLatitude());
  double lonLeft=view.calcLongitude(-view.getWidth() / 2);
  double lonRight=view.calcLongitude(+view.getWidth() / 2);
  double dist=MapUtils.getDistance(view.getLatitude(),lonLeft,view.getLatitude(),lonRight);
  int radius=(int)(((double)view.getWidth()) / dist * lastKnownLocation.getAccuracy());
  if (radius > RADIUS * dm.density) {
    int allowedRad=Math.min(view.getWidth() / 2,view.getHeight() / 2);
    canvas.drawCircle(locationX,locationY,Math.min(radius,allowedRad),area);
    canvas.drawCircle(locationX,locationY,Math.min(radius,allowedRad),aroundArea);
  }
  if (isLocationVisible(lastKnownLocation)) {
    checkAppMode(view.getSettings().getApplicationMode());
    boolean isBearing=lastKnownLocation.hasBearing();
    if (!isBearing) {
      canvas.drawBitmap(locationIcon,locationX - locationIcon.getWidth() / 2,locationY - locationIcon.getHeight() / 2,locationPaint);
    }
    Float heading=locationProvider.getHeading();
    if (heading != null && view.getSettings().SHOW_VIEW_ANGLE.get()) {
      canvas.drawArc(getHeadingRect(locationX,locationY),heading - HEADING_ANGLE / 2 - 90,HEADING_ANGLE,true,headingPaint);
    }
    if (isBearing) {
      float bearing=lastKnownLocation.getBearing();
      canvas.rotate(bearing - 90,locationX,locationY);
      canvas.drawBitmap(bearingIcon,locationX - bearingIcon.getWidth() / 2,locationY - bearingIcon.getHeight() / 2,locationPaint);
    }
  }
}
