{
  if (city.getType() == City.CityType.CITY || city.getType() == City.CityType.TOWN) {
    checkPeekState(CITY_INDEX_INIT);
  }
 else {
    checkPeekState(VILLAGES_INDEX_INIT);
  }
  CityIndex.Builder cityInd=OsmandOdb.CityIndex.newBuilder();
  cityInd.setCityType(city.getType().ordinal());
  cityInd.setId(city.getId());
  cityInd.setName(city.getName());
  if (checkEnNameToWrite(city)) {
    cityInd.setNameEn(city.getEnName());
  }
  int cx=MapUtils.get31TileNumberX(city.getLocation().getLongitude());
  int cy=MapUtils.get31TileNumberY(city.getLocation().getLatitude());
  cityInd.setX(cx);
  cityInd.setY(cy);
  if (wayNodes != null) {
    InteresectedStreets.Builder sbuilders=OsmandOdb.InteresectedStreets.newBuilder();
    Map<Long,Set<Integer>> reverseMap=new LinkedHashMap<Long,Set<Integer>>();
    for (int i=0; i < streets.size(); i++) {
      streets.get(i).setIndexInCity(i);
      for (      Node n : wayNodes.get(streets.get(i))) {
        if (!reverseMap.containsKey(n.getId())) {
          reverseMap.put(n.getId(),new LinkedHashSet<Integer>(3));
        }
        reverseMap.get(n.getId()).add(i);
      }
    }
    Set<Integer> checkedStreets=new LinkedHashSet<Integer>();
    for (int i=0; i < streets.size(); i++) {
      Street s1=streets.get(i);
      checkedStreets.clear();
      for (      Node intersection : wayNodes.get(s1)) {
        for (        Integer j : reverseMap.get(intersection.getId())) {
          if (i >= j || checkedStreets.contains(j)) {
            continue;
          }
          checkedStreets.add(j);
          StreetIntersection.Builder builder=OsmandOdb.StreetIntersection.newBuilder();
          builder.setIntersectedStreet1(i);
          builder.setIntersectedStreet2(j);
          int sx=MapUtils.get31TileNumberX(intersection.getLongitude());
          int sy=MapUtils.get31TileNumberY(intersection.getLatitude());
          builder.setIntersectedX((sx - cx) >> 7);
          builder.setIntersectedY((sy - cy) >> 7);
          sbuilders.addIntersections(builder.build());
        }
      }
    }
    cityInd.setIntersections(sbuilders.build());
  }
  for (  Street s : streets) {
    StreetIndex streetInd=createStreetAndBuildings(s,cx,cy,null);
    cityInd.addStreets(streetInd);
  }
  codedOutStream.writeMessage(OsmandOdb.CitiesIndex.CITIES_FIELD_NUMBER,cityInd.build());
}
