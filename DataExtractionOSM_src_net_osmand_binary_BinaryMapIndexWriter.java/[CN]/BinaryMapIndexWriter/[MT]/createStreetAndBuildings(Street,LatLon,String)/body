{
  checkPeekState(CITY_INDEX_INIT,VILLAGES_INDEX_INIT,POSTCODES_INDEX_INIT);
  boolean inCity=state.peek() == CITY_INDEX_INIT || state.peek() == VILLAGES_INDEX_INIT;
  StreetIndex.Builder streetBuilder=OsmandOdb.StreetIndex.newBuilder();
  streetBuilder.setName(street.getName());
  if (checkEnNameToWrite(street)) {
    streetBuilder.setNameEn(street.getEnName());
  }
  streetBuilder.setId(street.getId());
  int cx=MapUtils.get31TileNumberX(l.getLongitude());
  int cy=MapUtils.get31TileNumberY(l.getLatitude());
  int sx=MapUtils.get31TileNumberX(street.getLocation().getLongitude());
  int sy=MapUtils.get31TileNumberY(street.getLocation().getLatitude());
  streetBuilder.setX((sx - cx) >> 7);
  streetBuilder.setY((sy - cy) >> 7);
  for (  Building b : street.getBuildings()) {
    if (postcodeFilter != null && !postcodeFilter.equalsIgnoreCase(b.getPostcode())) {
      continue;
    }
    OsmandOdb.BuildingIndex.Builder bbuilder=OsmandOdb.BuildingIndex.newBuilder();
    int bx=MapUtils.get31TileNumberX(b.getLocation().getLongitude());
    int by=MapUtils.get31TileNumberY(b.getLocation().getLatitude());
    bbuilder.setX((bx - sx) >> 7);
    bbuilder.setY((by - sy) >> 7);
    bbuilder.setId(b.getId());
    bbuilder.setName(b.getName());
    if (checkEnNameToWrite(b)) {
      bbuilder.setNameEn(b.getEnName());
    }
    if (inCity && b.getPostcode() != null) {
      bbuilder.setPostcode(b.getPostcode());
    }
    streetBuilder.addBuildings(bbuilder.build());
  }
  return streetBuilder.build();
}
