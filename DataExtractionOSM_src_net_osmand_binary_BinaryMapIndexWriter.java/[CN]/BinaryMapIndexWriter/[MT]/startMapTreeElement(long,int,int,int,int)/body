{
  checkPeekState(MAP_ROOT_LEVEL_INIT,MAP_TREE);
  if (state.peek() == MAP_ROOT_LEVEL_INIT) {
    codedOutStream.writeTag(OsmandOdb.MapRootLevel.ROOT_FIELD_NUMBER,WireFormat.WIRETYPE_FIXED32_LENGTH_DELIMITED);
  }
 else {
    codedOutStream.writeTag(OsmandOdb.MapTree.SUBTREES_FIELD_NUMBER,WireFormat.WIRETYPE_FIXED32_LENGTH_DELIMITED);
  }
  state.push(MAP_TREE);
  preserveInt32Size();
  Bounds bounds=stackBounds.peek();
  codedOutStream.writeSInt32(OsmandOdb.MapTree.LEFT_FIELD_NUMBER,leftX - bounds.leftX);
  codedOutStream.writeSInt32(OsmandOdb.MapTree.RIGHT_FIELD_NUMBER,rightX - bounds.rightX);
  codedOutStream.writeSInt32(OsmandOdb.MapTree.TOP_FIELD_NUMBER,topY - bounds.topY);
  codedOutStream.writeSInt32(OsmandOdb.MapTree.BOTTOM_FIELD_NUMBER,bottomY - bounds.bottomY);
  stackBounds.push(new Bounds(leftX,rightX,topY,bottomY));
  stackBaseIds.push(baseId);
  stackStringTable.push(null);
}
