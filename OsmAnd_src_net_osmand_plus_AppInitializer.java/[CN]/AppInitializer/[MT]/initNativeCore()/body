{
  if (!"qnx".equals(System.getProperty("os.name"))) {
    OsmandSettings osmandSettings=app.getSettings();
    if (osmandSettings.USE_OPENGL_RENDER.get()) {
      boolean success=false;
      if (!osmandSettings.OPENGL_RENDER_FAILED.get()) {
        osmandSettings.OPENGL_RENDER_FAILED.set(true);
        success=NativeCoreContext.tryCatchInit(app);
        if (success) {
          osmandSettings.OPENGL_RENDER_FAILED.set(false);
        }
      }
      if (!success) {
        osmandSettings.OPENGL_RENDER_FAILED.set(false);
        warnings.add("Native OpenGL library is not supported. Please try again after exit");
      }
    }
    if (osmandSettings.NATIVE_RENDERING_FAILED.get()) {
      osmandSettings.SAFE_MODE.set(true);
      osmandSettings.NATIVE_RENDERING_FAILED.set(false);
      warnings.add(app.getString(R.string.native_library_not_supported));
    }
 else {
      osmandSettings.SAFE_MODE.set(false);
      osmandSettings.NATIVE_RENDERING_FAILED.set(true);
      startTask(app.getString(R.string.init_native_library),-1);
      RenderingRulesStorage storage=app.getRendererRegistry().getCurrentSelectedRenderer();
      NativeOsmandLibrary lib=NativeOsmandLibrary.getLibrary(storage,app);
      boolean initialized=lib != null;
      osmandSettings.NATIVE_RENDERING_FAILED.set(false);
      if (!initialized) {
        LOG.info("Native library could not be loaded!");
      }
 else {
        File ls=app.getAppPath("fonts");
        lib.loadFontData(ls);
      }
    }
    app.getResourceManager().initMapBoundariesCacheNative();
  }
}
