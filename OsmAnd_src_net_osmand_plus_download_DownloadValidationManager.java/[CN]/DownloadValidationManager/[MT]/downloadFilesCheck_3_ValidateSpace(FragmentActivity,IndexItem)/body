{
  long szChangeLong=0;
  long szMaxTempLong=0;
  int i=0;
  for (  IndexItem es : downloadThread.getCurrentDownloadingItems()) {
    final long szExistingLong=getExistingFileSize(es.getTargetFile(getMyApplication()));
    long change=es.contentSize - szExistingLong;
    szChangeLong+=change;
    if (szExistingLong > szMaxTempLong)     szMaxTempLong=szExistingLong;
    i++;
  }
  for (  IndexItem es : items) {
    final long szExistingLong=getExistingFileSize(es.getTargetFile(getMyApplication()));
    long change=es.contentSize - szExistingLong;
    szChangeLong+=change;
    if (szExistingLong > szMaxTempLong)     szMaxTempLong=szExistingLong;
    i++;
  }
  double szChange=((double)szChangeLong) / (1 << 20);
  double szMaxTemp=szChange + ((double)szMaxTempLong) / (1 << 20);
  double asz=downloadThread.getAvailableSpace();
  if (asz != -1 && asz > 0 && (szMaxTemp > asz)) {
    AlertDialog.Builder builder=new AlertDialog.Builder(context);
    builder.setMessage(MessageFormat.format(context.getString(R.string.download_files_error_not_enough_space),i,szChange,asz,szMaxTemp));
    builder.setNegativeButton(R.string.shared_string_no,null);
    builder.show();
  }
 else   if (asz != -1 && asz > 0 && (szChange / asz > 0.8 || szMaxTemp / asz > 0.9)) {
    AlertDialog.Builder builder=new AlertDialog.Builder(context);
    if (szChange != szMaxTemp) {
      builder.setMessage(MessageFormat.format(context.getString(R.string.download_files_question_space_with_temp),i,szChange,asz,szMaxTemp));
    }
 else {
      builder.setMessage(MessageFormat.format(context.getString(R.string.download_files_question_space),i,szChange,asz));
    }
    builder.setPositiveButton(R.string.shared_string_yes,new DialogInterface.OnClickListener(){
      @Override public void onClick(      DialogInterface dialog,      int which){
        downloadFileCheck_Final_Run(context,items);
      }
    }
);
    builder.setNegativeButton(R.string.shared_string_no,null);
    builder.show();
  }
 else {
    downloadFileCheck_Final_Run(context,items);
  }
}
