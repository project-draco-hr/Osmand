{
  int begi=0;
  float d=cutoffDistance;
  for (; begi < ls.size(); begi++) {
    d-=ls.get(begi).getDistance();
    if (d < 0) {
      break;
    }
  }
  int endi=ls.size() - 1;
  d=cutoffDistance;
  for (; endi >= 0; endi--) {
    d-=ls.get(endi).getDistance();
    if (d < 0) {
      break;
    }
  }
  if (begi < endi) {
    return new PrecalculatedRouteDirection(ls.subList(begi,endi),avgSpeed);
  }
  return null;
}
