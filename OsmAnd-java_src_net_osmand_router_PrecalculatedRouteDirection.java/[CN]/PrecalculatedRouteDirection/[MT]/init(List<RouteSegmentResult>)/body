{
  float totaltm=0;
  List<Float> times=new ArrayList<Float>();
  for (  RouteSegmentResult s : ls) {
    boolean plus=s.getStartPointIndex() < s.getEndPointIndex();
    int i=s.getStartPointIndex();
    RouteDataObject obj=s.getObject();
    float spd=s.getSegmentSpeed();
    while (true) {
      int iprev=i;
      i=plus ? i + 1 : i - 1;
      float tm=(float)(BinaryRoutePlanner.squareRootDist(obj.getPoint31XTile(iprev),obj.getPoint31YTile(iprev),obj.getPoint31XTile(i),obj.getPoint31YTile(i)) / spd);
      pointsX.add(obj.getPoint31XTile(i));
      pointsY.add(obj.getPoint31YTile(i));
      times.add(tm);
      indexedPoints.registerObjectXY(obj.getPoint31XTile(i),obj.getPoint31YTile(i),pointsX.size() - 1);
      totaltm+=tm;
      if (i == s.getEndPointIndex()) {
        break;
      }
    }
  }
  tms=new float[times.size()];
  float totDec=totaltm;
  for (int i=0; i < times.size(); i++) {
    totDec-=times.get(i);
    tms[i]=totDec;
  }
}
