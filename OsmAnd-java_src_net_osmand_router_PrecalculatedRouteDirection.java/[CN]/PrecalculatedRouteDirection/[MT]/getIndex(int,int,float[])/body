{
  long l=((long)x31) << 32l + ((long)y31);
  Integer lt=prereg.get(l);
  int ind=0;
  if (lt != null) {
    ind=lt;
  }
 else {
    cachedS.clear();
    indexedPoints.getObjects(x31 - SHIFT,y31 - SHIFT,x31 + SHIFT,y31 + SHIFT,cachedS);
    if (cachedS.size() == 0) {
      for (int k=0; k < SHIFTS.length; k++) {
        indexedPoints.getObjects(x31 - SHIFTS[k],y31 - SHIFTS[k],x31 + SHIFTS[k],y31 + SHIFTS[k],cachedS);
        if (cachedS.size() != 0) {
          break;
        }
      }
      if (cachedS.size() == 0) {
        throw new IllegalStateException();
      }
    }
    double minDist=0;
    for (int i=0; i < cachedS.size(); i++) {
      Integer n=cachedS.get(i);
      double ds=BinaryRoutePlanner.squareRootDist(x31,y31,pointsX.get(n),pointsY.get(n));
      if (ds < minDist || i == 0) {
        ind=n;
        minDist=ds;
      }
    }
  }
  double ds=BinaryRoutePlanner.squareRootDist(x31,y31,pointsX.get(ind),pointsY.get(ind));
  ct[0]=tms[ind];
  ct[1]=(float)(ds / speed);
  return ind;
}
