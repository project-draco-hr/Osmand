{
  this.speed=parent.speed;
  tms=new float[s2 - s1 + 1];
  for (int i=s1; i <= s2; i++) {
    pointsX.add(parent.pointsX.get(i));
    pointsY.add(parent.pointsY.get(i));
    quadTree.insert(pointsX.size() - 1,parent.pointsX.get(i),parent.pointsY.get(i));
    tms[i - s1]=parent.tms[i] - parent.tms[s2];
  }
}
