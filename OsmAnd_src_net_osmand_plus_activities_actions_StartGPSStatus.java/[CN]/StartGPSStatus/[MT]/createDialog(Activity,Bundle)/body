{
  GpsStatusApps[] values=GpsStatusApps.values();
  String[] res=new String[values.length];
  int i=0;
  for (  GpsStatusApps g : values) {
    res[i++]=g.stringRes;
  }
  OsmandMapTileView view=mapActivity.getMapView();
  AlertDialog.Builder builder=new AccessibleAlertBuilder(mapActivity);
  LinearLayout ll=new LinearLayout(activity);
  final ListView lv=new ListView(activity);
  lv.setPadding(7,3,7,0);
  final CheckBox cb=new CheckBox(activity);
  cb.setText(R.string.shared_string_remember_my_choice);
  LinearLayout.LayoutParams lp=new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT,LayoutParams.WRAP_CONTENT);
  lp.setMargins(7,10,7,0);
  cb.setLayoutParams(lp);
  final int layout;
  if (Build.VERSION.SDK_INT < Build.VERSION_CODES.HONEYCOMB) {
    layout=R.layout.list_menu_item;
  }
 else {
    layout=R.layout.list_menu_item_native;
  }
  final ArrayAdapter<GpsStatusApps> adapter=new ArrayAdapter<GpsStatusApps>(mapActivity,layout,GpsStatusApps.values()){
    @Override public View getView(    int position,    View convertView,    ViewGroup parent){
      View v=mapActivity.getLayoutInflater().inflate(layout,null);
      TextView tv=(TextView)v.findViewById(R.id.title);
      tv.setText(getItem(position).stringRes);
      v.findViewById(R.id.check_item).setVisibility(View.INVISIBLE);
      return v;
    }
  }
;
  lv.setAdapter(adapter);
  ll.setOrientation(LinearLayout.VERTICAL);
  ll.addView(lv);
  ll.addView(cb);
  final AlertDialog dlg=builder.create();
  lv.setOnItemClickListener(new OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      boolean remember=cb.isChecked();
      GpsStatusApps item=adapter.getItem(position);
      if (remember) {
        getSettings().GPS_STATUS_APP.set(item.appName);
      }
      dlg.dismiss();
      runChosenGPSStatus(item);
    }
  }
);
  dlg.setView(ll);
  return dlg;
}
