{
  View mainView=getView();
  final TargetPointsHelper helper=getMyApplication().getTargetPointsHelper();
  if (helper.getPointToNavigate() == null) {
    (mainView.findViewById(R.id.main_fav)).setVisibility(View.GONE);
    return;
  }
 else {
    (mainView.findViewById(R.id.main_fav)).setVisibility(View.VISIBLE);
  }
  points=SHOW_ALL ? helper.getIntermediatePointsWithTarget() : Collections.singletonList(helper.getPointToNavigate());
  ((Button)mainView.findViewById(R.id.show_all)).setText(SHOW_ALL ? getString(R.string.shared_string_collapse) : getString(R.string.shared_string_show_all));
  ((Button)mainView.findViewById(R.id.show_all)).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View view){
      SHOW_ALL=!SHOW_ALL;
      setupView();
    }
  }
);
  ((Button)mainView.findViewById(R.id.show_all)).setVisibility(helper.getIntermediatePoints().size() == 0 ? View.INVISIBLE : View.VISIBLE);
  ((TextView)mainView.findViewById(R.id.fav_text)).setText(getString(R.string.waypoints) + " (" + helper.getIntermediatePointsWithTarget().size()+ ")");
  LinearLayout favorites=(LinearLayout)mainView.findViewById(R.id.items);
  favorites.removeAllViews();
  List<DashLocationView> distances=new ArrayList<DashLocationFragment.DashLocationView>();
  for (  final TargetPoint point : points) {
    LayoutInflater inflater=getActivity().getLayoutInflater();
    View view=inflater.inflate(R.layout.favorites_list_item,null,false);
    TextView name=(TextView)view.findViewById(R.id.favourite_label);
    TextView label=(TextView)view.findViewById(R.id.distance);
    ImageView direction=(ImageView)view.findViewById(R.id.direction);
    direction.setVisibility(View.VISIBLE);
    label.setVisibility(View.VISIBLE);
    view.findViewById(R.id.divider).setVisibility(View.VISIBLE);
    view.findViewById(R.id.group_image).setVisibility(View.GONE);
    boolean target=helper.getPointToNavigate() == point;
    int id;
    if (!target) {
      id=R.drawable.list_intermediate;
    }
 else {
      id=R.drawable.list_destination;
    }
    ((ImageView)view.findViewById(R.id.favourite_icon)).setImageDrawable(getMyApplication().getIconsCache().getIcon(id,0));
    DashLocationView dv=new DashLocationView(direction,label,new LatLon(point.getLatitude(),point.getLongitude()));
    distances.add(dv);
    name.setText(PointDescription.getSimpleName(point,getActivity()));
    ImageButton options=((ImageButton)view.findViewById(R.id.options));
    options.setVisibility(View.VISIBLE);
    final boolean optionsVisible=(SHOW_ALL && getMyApplication().getTargetPointsHelper().getIntermediatePoints().size() > 0);
    options.setImageDrawable(getMyApplication().getIconsCache().getThemedIcon(optionsVisible ? R.drawable.ic_overflow_menu_white : R.drawable.ic_action_remove_dark));
    options.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View view){
        if (optionsVisible) {
          selectTargetModel(point,view);
        }
 else {
          deletePointConfirm(point,view);
        }
      }
    }
);
    ImageButton navigate=((ImageButton)view.findViewById(R.id.navigate_to));
    navigate.setImageDrawable(getMyApplication().getIconsCache().getThemedIcon(R.drawable.ic_action_gdirections_dark));
    navigate.setVisibility(target ? View.VISIBLE : View.GONE);
    navigate.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View view){
        dashboard.navigationAction();
      }
    }
);
    view.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View view){
        getMyApplication().getSettings().setMapLocationToShow(point.getLatitude(),point.getLongitude(),15,point.getPointDescription(getActivity()),false,point);
        MapActivity.launchMapActivityMoveToTop(getActivity());
      }
    }
);
    favorites.addView(view);
  }
  this.distances=distances;
}
