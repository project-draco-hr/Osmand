{
  ArrayList<PointItem> pointItemsList=new ArrayList<PointItem>();
  for (int i=0; i < pointsList.size(); i++) {
    String pointName=pointsList.get(i).name;
    if (pointsStatus.get(i) != 0) {
      String dateString=DateFormat.format("MM/dd/yyyy",new Date(pointsStatus.get(i))).toString();
      pointItemsList.add(new PointItem(true,pointName,dateString));
    }
 else {
      pointItemsList.add(new PointItem(false,pointName,""));
    }
  }
  PointItemAdapter adapter=new PointItemAdapter(this,R.layout.route_point_info,pointItemsList);
  final ListView listView=(ListView)findViewById(R.id.pointsListView);
  listView.setAdapter(adapter);
  listView.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> adapterView,    View view,    int i,    long l){
      final PopupMenu menu=new PopupMenu(RouteStepsActivity.this,view);
      menu.getMenuInflater().inflate(R.menu.route_step_menu,menu.getMenu());
      menu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener(){
        @Override public boolean onMenuItemClick(        MenuItem menuItem){
          if (menuItem.getTitle().equals("Mark as next")) {
          }
 else {
          }
          return true;
        }
      }
);
      menu.show();
    }
  }
);
}
