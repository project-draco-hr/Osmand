{
  Block body=ast.newBlock();
  List<Statement> stmts=body.statements();
  for (  Statement stmt : initStatements) {
    Statement newStmt=NodeCopier.copySubtree(ast,stmt);
    stmts.add(newStmt);
  }
  MethodDeclaration method=ast.newMethodDeclaration();
  GeneratedMethodBinding binding=new GeneratedMethodBinding(name,modifiers,null,type,isConstructor,false,true);
  Types.addBinding(method,binding);
  Type returnType=ast.newPrimitiveType(PrimitiveType.VOID);
  Types.addBinding(returnType,ast.resolveWellKnownType("void"));
  method.setReturnType2(returnType);
  method.setBody(body);
  method.setConstructor(isConstructor);
  method.modifiers().addAll(ast.newModifiers(modifiers));
  SimpleName nameNode=NameTable.unsafeSimpleName(name,ast);
  Types.addBinding(nameNode,binding);
  method.setName(nameNode);
  members.add(method);
  Symbols.resolve(method,binding);
}
