{
  if (item.getItemId() == R.id.Clear) {
    if (binder != null) {
      binder.clearEntries();
      gridViewAdapter.clear();
    }
    return true;
  }
 else   if (item.getItemId() == R.id.Export) {
    if (binder == null) {
      return true;
    }
    File directory=Environment.getExternalStorageDirectory();
    if (directory.canWrite()) {
      File f=new File(directory,"BatteryLog.txt");
      int i=1;
      while (f.exists()) {
        f=new File(directory,"BatteryLog" + (++i) + ".txt");
      }
      try {
        BufferedWriter writer=new BufferedWriter(new FileWriter(f));
        List<BatteryLogEntry> entries=binder.getEntries();
        for (i=entries.size() - 1; i >= 0; i--) {
          writer.write(entries.get(i).toString());
        }
        writer.close();
        binder.clearEntries();
        gridViewAdapter.clear();
      }
 catch (      IOException e) {
        Log.e("batteryLog","Can't export file",e);
      }
    }
  }
 else   if (item.getItemId() == R.id.Exit) {
    finish();
    return true;
  }
  return super.onOptionsItemSelected(item);
}
