{
  String basename=getBasename(fileName);
  if (basename.endsWith("_wiki")) {
    String cutted=basename.substring(0,basename.indexOf("_wiki"));
    String wikiName=getStandardLangName(ctx,cutted);
    if (wikiName == null) {
      wikiName=cutted;
    }
    String wikiWord=ctx.getString(R.string.amenity_type_osmwiki);
    int index=wikiWord.indexOf("(");
    if (index >= 0) {
      return wikiWord.substring(0,index) + wikiName;
    }
    return ctx.getString(R.string.amenity_type_osmwiki) + " " + wikiName;
  }
 else   if (fileName.endsWith("tts")) {
    return getVoiceName(ctx,fileName);
  }
 else   if (fileName.length() == 2) {
    try {
      Field f=R.string.class.getField("lang_" + fileName);
      if (f != null) {
        Integer in=(Integer)f.get(null);
        return ctx.getString(in);
      }
    }
 catch (    Exception e) {
      System.err.println(e.getMessage());
    }
  }
  String lc=basename.toLowerCase();
  String std=getStandardMapName(ctx,lc);
  if (std != null) {
    return std;
  }
  if (regions != null) {
    return regions.getLocaleName(basename);
  }
  return null;
}
