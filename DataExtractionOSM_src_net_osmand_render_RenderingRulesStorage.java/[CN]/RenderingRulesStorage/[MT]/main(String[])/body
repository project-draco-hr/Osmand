{
  RenderingRulesStorage storage=new RenderingRulesStorage();
  final RenderingRulesStorageResolver resolver=new RenderingRulesStorageResolver(){
    @Override public RenderingRulesStorage resolve(    String name,    RenderingRulesStorageResolver ref) throws SAXException {
      RenderingRulesStorage depends=new RenderingRulesStorage();
      try {
        depends.parseRulesFromXmlInputStream(RenderingRulesStorage.class.getResourceAsStream(name + ".render.xml"),ref);
      }
 catch (      IOException e) {
        throw new SAXException(e);
      }
      return depends;
    }
  }
;
  storage.parseRulesFromXmlInputStream(RenderingRulesStorage.class.getResourceAsStream("winter+ski.render.xml"),resolver);
  RenderingRuleSearchRequest searchRequest=new RenderingRuleSearchRequest(storage);
  searchRequest.setStringFilter(storage.PROPS.R_TAG,"landuse");
  searchRequest.setStringFilter(storage.PROPS.R_VALUE,"wood");
  searchRequest.setIntFilter(storage.PROPS.R_LAYER,1);
  searchRequest.setIntFilter(storage.PROPS.R_MINZOOM,15);
  searchRequest.setIntFilter(storage.PROPS.R_MAXZOOM,15);
  boolean res=searchRequest.search(POLYGON_RULES);
  System.out.println("Result " + res);
  printResult(searchRequest,System.out);
}
