{
  try {
    final SAXParser saxParser=SAXParserFactory.newInstance().newSAXParser();
    RenderingRulesHandler handler=new RenderingRulesHandler(saxParser,resolver);
    saxParser.parse(is,handler);
    RenderingRulesStorage depends=handler.getDependsStorage();
    if (depends != null) {
      Iterator<Entry<String,RenderingRule>> it=depends.renderingAttributes.entrySet().iterator();
      while (it.hasNext()) {
        Entry<String,RenderingRule> e=it.next();
        if (renderingAttributes.containsKey(e.getKey())) {
          RenderingRule root=renderingAttributes.get(e.getKey());
          List<RenderingRule> list=e.getValue().getIfElseChildren();
          for (          RenderingRule every : list) {
            root.addIfElseChildren(every);
          }
        }
 else {
          renderingAttributes.put(e.getKey(),e.getValue());
        }
      }
      for (int i=0; i < LENGTH_RULES; i++) {
        if (depends.tagValueGlobalRules[i] == null || depends.tagValueGlobalRules[i].isEmpty()) {
          continue;
        }
        if (tagValueGlobalRules[i] != null) {
          int[] keys=depends.tagValueGlobalRules[i].keys();
          for (int j=0; j < keys.length; j++) {
            RenderingRule rule=tagValueGlobalRules[i].get(keys[j]);
            RenderingRule dependsRule=depends.tagValueGlobalRules[i].get(keys[j]);
            if (dependsRule != null) {
              if (rule != null) {
                RenderingRule toInsert=createTagValueRootWrapperRule(keys[j],rule);
                toInsert.addIfElseChildren(dependsRule);
              }
 else {
                tagValueGlobalRules[i].put(keys[j],dependsRule);
              }
            }
          }
        }
 else {
          tagValueGlobalRules[i]=depends.tagValueGlobalRules[i];
        }
      }
    }
  }
 catch (  ParserConfigurationException e) {
    throw new SAXException(e);
  }
}
