{
  RoutingSubregionTile key=new RoutingSubregionTile(subregion);
  long now=System.nanoTime();
  int ind=Collections.binarySearch(subregionTiles,key,new Comparator<RoutingSubregionTile>(){
    @Override public int compare(    RoutingSubregionTile o1,    RoutingSubregionTile o2){
      if (o1.subregion.left == o2.subregion.left) {
        return 0;
      }
      return o1.subregion.left < o2.subregion.left ? 1 : -1;
    }
  }
);
  if (ind >= 0) {
    for (int i=ind; i <= subregionTiles.size(); i++) {
      if (i == subregionTiles.size() || subregionTiles.get(i).subregion.left > subregion.left) {
        ind=-i - 1;
        return ind;
      }
      if (subregionTiles.get(i).subregion == subregion) {
        return i;
      }
    }
  }
  timeToLoadHeaders+=(System.nanoTime() - now);
  return ind;
}
