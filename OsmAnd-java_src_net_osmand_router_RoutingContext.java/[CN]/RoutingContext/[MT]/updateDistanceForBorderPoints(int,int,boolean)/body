{
  boolean plus=borderLines.length > 0 && sy < borderLines[0].borderLine;
  if (borderLines.length > 0 && !plus && sy < borderLines[borderLines.length - 1].borderLine) {
    throw new IllegalStateException();
  }
  for (int i=0; i < borderLines.length; i++) {
    int ind=plus ? i : borderLines.length - i - 1;
    for (    RouteDataBorderLinePoint ps : borderLines[ind].borderPoints) {
      float res=(float)Math.sqrt(MapUtils.squareDist31TileMetric(sX,sy,ps.x,ps.y));
      if (i > 0) {
        int prevInd=plus ? i - 1 : borderLines.length - i;
        double minDist=0;
        for (        RouteDataBorderLinePoint prevs : borderLines[prevInd].borderPoints) {
          double d=Math.sqrt(MapUtils.squareDist31TileMetric(prevs.x,prevs.y,ps.x,ps.y)) + (distanceToStart ? prevs.distanceToStartPoint : prevs.distanceToEndPoint);
          if (minDist == 0 || d < minDist) {
            minDist=d;
          }
        }
        if (minDist > 0) {
          System.out.println("Border line " + i + " exp="+ res+ " min="+ minDist);
          res=(float)minDist;
        }
      }
      if (distanceToStart) {
        ps.distanceToStartPoint=res;
      }
 else {
        ps.distanceToEndPoint=res;
      }
    }
  }
}
