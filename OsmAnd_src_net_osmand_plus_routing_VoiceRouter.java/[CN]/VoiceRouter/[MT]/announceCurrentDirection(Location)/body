{
  NextDirectionInfo nextInfo=router.getNextRouteDirectionInfo(new NextDirectionInfo(),true);
  if (nextInfo == null) {
    playGoAheadToDestination();
    return;
  }
  NextDirectionInfo nextNextInfo=router.getNextRouteDirectionInfoAfter(nextInfo,new NextDirectionInfo(),false);
  float speed=DEFAULT_SPEED;
  RouteDirectionInfo next=nextInfo.directionInfo;
  int dist=nextInfo.distanceTo;
  if (currentLocation != null && currentLocation.hasSpeed()) {
    speed=Math.max(currentLocation.getSpeed(),speed);
  }
switch (currentStatus) {
case STATUS_UTWP_TOLD:
    playMakeUTwp();
  break;
case STATUS_UNKNOWN:
if (nextRouteDirection != null && ((next == null) || (next.distance == 0))) {
  playGoAheadToDestination();
}
 else {
  playGoAhead(dist);
}
break;
case STATUS_TOLD:
if (nextRouteDirection != null) {
playGoAheadToDestination();
}
break;
case STATUS_TURN:
if (next.distance < TURN_IN_DISTANCE_END && nextNextInfo != null) {
playMakeTurn(next,nextNextInfo.directionInfo);
}
 else {
playMakeTurn(next,null);
}
break;
case STATUS_TURN_IN:
if ((isDistanceLess(speed,next.distance,TURN_DISTANCE) || next.distance < TURN_IN_DISTANCE_END) && nextNextInfo != null) {
playMakeTurnIn(next,dist,nextNextInfo.directionInfo);
}
 else {
playMakeTurnIn(next,dist,null);
}
break;
case STATUS_PREPARE:
playPrepareTurn(next,dist);
break;
case STATUS_LONG_PREPARE:
playPrepareTurn(next,dist);
break;
default :
break;
}
}
