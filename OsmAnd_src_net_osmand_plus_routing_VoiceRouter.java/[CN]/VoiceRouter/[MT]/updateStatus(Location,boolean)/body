{
  float speed=DEFAULT_SPEED;
  if (currentLocation != null && currentLocation.hasSpeed()) {
    speed=Math.max(currentLocation.getSpeed(),speed);
  }
  NextDirectionInfo nextInfo=router.getNextRouteDirectionInfo(new NextDirectionInfo(),true);
  RouteSegmentResult currentSegment=router.getCurrentSegmentResult();
  if (nextInfo == null || nextInfo.directionInfo == null || nextInfo.directionInfo.distance == 0) {
    if (repeat || currentStatus <= STATUS_UNKNOWN) {
      if (playGoAheadToDestination(nextInfo == null ? "" : getSpeakableStreetName(nextInfo.directionInfo),nextInfo == null ? "" : getSpeakablePointName(nextInfo.pointName))) {
        currentStatus=STATUS_TOLD;
        playGoAheadDist=0;
      }
    }
    return;
  }
  if (nextInfo.intermediatePoint) {
    if (repeat || currentStatus <= STATUS_UNKNOWN) {
      if (playGoAheadToIntermediate(getSpeakableStreetName(nextInfo.directionInfo),getSpeakablePointName(nextInfo.pointName))) {
        currentStatus=STATUS_TOLD;
        playGoAheadDist=0;
      }
    }
    return;
  }
  int dist=nextInfo.distanceTo;
  RouteDirectionInfo next=nextInfo.directionInfo;
  if (next != nextRouteDirection) {
    nextRouteDirection=next;
    currentStatus=STATUS_UNKNOWN;
    playGoAheadDist=0;
  }
  if (!repeat && (dist == 0 || currentStatus == STATUS_TOLD)) {
    return;
  }
  if (currentStatus == STATUS_UNKNOWN) {
    if (!isDistanceLess(speed,dist,TURN_IN_DISTANCE * 1.3)) {
      playGoAheadDist=dist - 80;
    }
    if (dist > PREPARE_LONG_DISTANCE + 300) {
      nextStatusAfter(STATUS_UNKNOWN);
    }
 else     if (dist > PREPARE_DISTANCE + 300) {
      nextStatusAfter(STATUS_LONG_PREPARE);
    }
 else {
      nextStatusAfter(STATUS_PREPARE);
    }
  }
  NextDirectionInfo nextNextInfo=router.getNextRouteDirectionInfoAfter(nextInfo,new NextDirectionInfo(),!repeat);
  if ((repeat || statusNotPassed(STATUS_TURN)) && isDistanceLess(speed,dist,TURN_DISTANCE,TURN_DEFAULT_SPEED)) {
    if (next.distance < TURN_IN_DISTANCE_END && nextNextInfo != null) {
      playMakeTurn(next,nextNextInfo.directionInfo);
    }
 else {
      playMakeTurn(next,null);
    }
    nextStatusAfter(STATUS_TURN);
  }
 else   if ((repeat || statusNotPassed(STATUS_TURN_IN)) && isDistanceLess(speed,dist,TURN_IN_DISTANCE)) {
    if (repeat || dist >= TURN_IN_DISTANCE_END) {
      if ((isDistanceLess(speed,next.distance,TURN_DISTANCE) || next.distance < TURN_IN_DISTANCE_END) && nextNextInfo != null) {
        playMakeTurnIn(next,dist,nextNextInfo.directionInfo);
      }
 else {
        playMakeTurnIn(next,dist,null);
      }
    }
    nextStatusAfter(STATUS_TURN_IN);
  }
 else   if ((repeat || statusNotPassed(STATUS_PREPARE)) && (dist <= PREPARE_DISTANCE)) {
    if (repeat || dist >= PREPARE_DISTANCE_END) {
      if (!repeat && (next.getTurnType().keepLeft() || next.getTurnType().keepRight())) {
      }
 else {
        playPrepareTurn(next,dist);
      }
    }
    nextStatusAfter(STATUS_PREPARE);
  }
 else   if ((repeat || statusNotPassed(STATUS_LONG_PREPARE)) && (dist <= PREPARE_LONG_DISTANCE)) {
    if (repeat || dist >= PREPARE_LONG_DISTANCE_END) {
      playPrepareTurn(next,dist);
    }
    nextStatusAfter(STATUS_LONG_PREPARE);
  }
 else   if (statusNotPassed(STATUS_UNKNOWN)) {
    nextStatusAfter(STATUS_UNKNOWN);
  }
 else   if (repeat || (statusNotPassed(STATUS_TURN_IN) && dist < playGoAheadDist)) {
    playGoAheadDist=0;
    playGoAhead(dist,getSpeakableStreetName(next));
  }
}
