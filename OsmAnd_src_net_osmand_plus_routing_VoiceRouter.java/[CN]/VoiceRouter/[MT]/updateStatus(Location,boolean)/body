{
  float speed=DEFAULT_SPEED;
  if (currentLocation != null && currentLocation.hasSpeed()) {
    speed=Math.max(currentLocation.getSpeed(),speed);
  }
  if (makeUturnWhenPossible == true) {
    if (System.currentTimeMillis() - lastTimeMakeUTwpAnnounced > 60000) {
      CommandBuilder play=getNewCommandPlayerToPlay();
      if (play != null) {
        play.makeUTwp().play();
        lastTimeMakeUTwpAnnounced=System.currentTimeMillis();
      }
    }
    currentStatus=STATUS_UNKNOWN;
    return;
  }
  RouteDirectionInfo next=router.getNextRouteDirectionInfo();
  int dist=router.getDistanceToNextRouteDirection();
  if (currentDirection != router.currentDirectionInfo) {
    currentDirection=router.currentDirectionInfo;
    currentStatus=STATUS_UNKNOWN;
  }
  if (next == null || next.distance == 0) {
    if (currentStatus == STATUS_UNKNOWN && currentDirection > 0) {
      CommandBuilder play=getNewCommandPlayerToPlay();
      if (play != null) {
        play.goAhead(router.getLeftDistance()).andArriveAtDestination().play();
      }
      currentStatus=STATUS_TOLD;
    }
    return;
  }
  if (dist == 0 || currentStatus == STATUS_TOLD) {
    return;
  }
  RouteDirectionInfo nextNext=router.getNextNextRouteDirectionInfo();
  if (statusNotPassed(STATUS_TURN) && isDistanceLess(speed,dist,TURN_DISTANCE)) {
    if (next.distance < TURN_IN_DISTANCE_END) {
      playMakeTurn(next,nextNext);
    }
 else {
      playMakeTurn(next,null);
    }
    nextStatusAfter(STATUS_TURN);
  }
 else   if (statusNotPassed(STATUS_TURN_IN) && isDistanceLess(speed,dist,TURN_IN_DISTANCE)) {
    if (dist >= TURN_IN_DISTANCE_END) {
      if (isDistanceLess(speed,next.distance,TURN_DISTANCE) || next.distance < TURN_IN_DISTANCE_END) {
        playMakeTurnIn(next,dist,nextNext);
      }
 else {
        playMakeTurnIn(next,dist,null);
      }
    }
    nextStatusAfter(STATUS_TURN_IN);
  }
 else   if (statusNotPassed(STATUS_PREPARE) && isDistanceLess(speed,dist,PREPARE_DISTANCE)) {
    if (dist >= PREPARE_DISTANCE_END) {
      playPrepareTurn(next,dist);
    }
    nextStatusAfter(STATUS_PREPARE);
  }
 else   if (statusNotPassed(STATUS_LONG_PREPARE) && isDistanceLess(speed,dist,PREPARE_LONG_DISTANCE)) {
    if (dist >= PREPARE_LONG_DISTANCE_END) {
      playPrepareTurn(next,dist);
    }
    nextStatusAfter(STATUS_LONG_PREPARE);
  }
 else   if (statusNotPassed(STATUS_UNKNOWN)) {
    if (dist >= PREPARE_LONG_DISTANCE && !isDistanceLess(speed,dist,PREPARE_LONG_DISTANCE)) {
      playGoAhead(dist);
    }
    nextStatusAfter(STATUS_UNKNOWN);
  }
}
