{
  float speed=DEFAULT_SPEED;
  if (currentLocation != null && currentLocation.hasSpeed()) {
    speed=Math.max(currentLocation.getSpeed(),speed);
  }
  if (makeUturnWhenPossible == true) {
    if (currentStatus != STATUS_UTWP_TOLD) {
      if (playMakeUTwp()) {
        currentStatus=STATUS_UTWP_TOLD;
      }
    }
    return;
  }
  RouteDirectionInfo next=router.getNextRouteDirectionInfo();
  int dist=router.getDistanceToNextRouteDirection();
  if (currentDirection != router.getRoute().currentDirectionInfo) {
    currentDirection=router.getRoute().currentDirectionInfo;
    currentStatus=STATUS_UNKNOWN;
  }
  if (next == null || next.distance == 0) {
    if (currentStatus <= STATUS_UNKNOWN) {
      if (playGoAheadToDestination()) {
        currentStatus=STATUS_TOLD;
      }
    }
    return;
  }
  if (dist == 0 || currentStatus == STATUS_TOLD) {
    return;
  }
  RouteDirectionInfo nextNext=router.getNextNextRouteDirectionInfo();
  if (statusNotPassed(STATUS_TURN) && isDistanceLess(speed,dist,TURN_DISTANCE)) {
    if (next.distance < TURN_IN_DISTANCE_END) {
      playMakeTurn(next,nextNext);
    }
 else {
      playMakeTurn(next,null);
    }
    nextStatusAfter(STATUS_TURN);
  }
 else   if (statusNotPassed(STATUS_TURN_IN) && isDistanceLess(speed,dist,TURN_IN_DISTANCE)) {
    if (dist >= TURN_IN_DISTANCE_END) {
      if (isDistanceLess(speed,next.distance,TURN_DISTANCE) || next.distance < TURN_IN_DISTANCE_END) {
        playMakeTurnIn(next,dist,nextNext);
      }
 else {
        playMakeTurnIn(next,dist,null);
      }
    }
    nextStatusAfter(STATUS_TURN_IN);
  }
 else   if (statusNotPassed(STATUS_PREPARE) && (dist <= PREPARE_DISTANCE)) {
    if (dist >= PREPARE_DISTANCE_END) {
      playPrepareTurn(next,dist);
    }
    nextStatusAfter(STATUS_PREPARE);
  }
 else   if (statusNotPassed(STATUS_LONG_PREPARE) && (dist <= PREPARE_LONG_DISTANCE)) {
    if (dist >= PREPARE_LONG_DISTANCE_END) {
      playPrepareTurn(next,dist);
    }
    nextStatusAfter(STATUS_LONG_PREPARE);
  }
 else   if (statusNotPassed(STATUS_UNKNOWN)) {
    if (!isDistanceLess(speed,dist,TURN_IN_DISTANCE * 1.5)) {
      playGoAhead(dist);
    }
    if (dist > 3 * PREPARE_LONG_DISTANCE) {
      nextStatusAfter(STATUS_UNKNOWN);
    }
 else     if (dist > 1.5 * PREPARE_DISTANCE) {
      nextStatusAfter(STATUS_LONG_PREPARE);
    }
 else {
      nextStatusAfter(STATUS_PREPARE);
    }
  }
}
