{
  Location currentLocation=router.getCurrentLocation();
  RouteDirectionInfo next=router.getNextRouteDirectionInfo();
  int dist=router.getDistanceToNextRouteDirection();
  float speed=DEFAULT_SPEED;
  if (currentLocation != null && currentLocation.hasSpeed()) {
    speed=Math.max(currentLocation.getSpeed(),speed);
  }
switch (currentStatus) {
case STATUS_UNKNOWN:
    if ((currentDirection > 0) && ((next == null) || (next.distance == 0))) {
      playGoAheadToDestination();
    }
 else {
      playGoAhead(dist);
    }
  break;
case STATUS_TOLD:
if (currentDirection > 0) {
  playGoAheadToDestination();
}
break;
case STATUS_TURN:
if (next.distance < TURN_IN_DISTANCE_END) {
playMakeTurn(next,router.getNextNextRouteDirectionInfo());
}
 else {
playMakeTurn(next,null);
}
break;
case STATUS_TURN_IN:
if (isDistanceLess(speed,next.distance,TURN_DISTANCE) || next.distance < TURN_IN_DISTANCE_END) {
playMakeTurnIn(next,dist,router.getNextNextRouteDirectionInfo());
}
 else {
playMakeTurnIn(next,dist,null);
}
break;
case STATUS_PREPARE:
playPrepareTurn(next,dist);
break;
case STATUS_LONG_PREPARE:
playPrepareTurn(next,dist);
break;
default :
break;
}
}
