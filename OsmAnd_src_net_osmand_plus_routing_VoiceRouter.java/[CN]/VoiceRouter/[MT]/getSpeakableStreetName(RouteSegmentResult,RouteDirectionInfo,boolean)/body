{
  if (i == null || !router.getSettings().SPEAK_STREET_NAMES.get()) {
    return empty;
  }
  if (player != null && player.supportsStructuredStreetNames()) {
    Term next=empty;
    if (includeDest == true) {
      next=new Struct(new Term[]{getTermString(getSpeakablePointName(i.getRef())),getTermString(getSpeakablePointName(i.getStreetName())),getTermString(getSpeakablePointName(i.getDestinationName()))});
    }
 else {
      next=new Struct(new Term[]{getTermString(getSpeakablePointName(i.getRef())),getTermString(getSpeakablePointName(i.getStreetName())),empty});
    }
    Term current=empty;
    if (currentSegment != null) {
      if (includeDest == true) {
        RouteDataObject obj=currentSegment.getObject();
        current=new Struct(new Term[]{getTermString(getSpeakablePointName(obj.getRef())),getTermString(getSpeakablePointName(obj.getName(settings.MAP_PREFERRED_LOCALE.get()))),getTermString(getSpeakablePointName(obj.getDestinationName(settings.MAP_PREFERRED_LOCALE.get(),currentSegment.isForwardDirection())))});
      }
 else {
        RouteDataObject obj=currentSegment.getObject();
        current=new Struct(new Term[]{getTermString(getSpeakablePointName(obj.getRef())),getTermString(getSpeakablePointName(obj.getName(settings.MAP_PREFERRED_LOCALE.get()))),empty});
      }
    }
    Struct voice=new Struct("voice",next,current);
    return voice;
  }
 else {
    Term rf=getTermString(getSpeakablePointName(i.getRef()));
    if (rf == empty) {
      rf=getTermString(getSpeakablePointName(i.getStreetName()));
    }
    return rf;
  }
}
