{
  List<Location> res=new ArrayList<Location>();
  StringBuilder uri=new StringBuilder();
  uri.append("http://www.yournavigation.org/api/1.0/gosmore.php?format=kml");
  uri.append("&flat=").append(start.getLatitude());
  uri.append("&flon=").append(start.getLongitude());
  uri.append("&tlat=").append(end.getLatitude());
  uri.append("&tlon=").append(end.getLongitude());
  if (ApplicationMode.PEDESTRIAN == mode) {
    uri.append("&v=foot");
  }
 else   if (ApplicationMode.BICYCLE == mode) {
    uri.append("&v=bicycle");
  }
 else {
    uri.append("&v=motorcar");
  }
  uri.append("&fast=1").append("&layer=mapnik");
  URL url=new URL(uri.toString());
  URLConnection connection=url.openConnection();
  DocumentBuilder dom=DocumentBuilderFactory.newInstance().newDocumentBuilder();
  Document doc=dom.parse(new InputSource(new InputStreamReader(connection.getInputStream())));
  NodeList list=doc.getElementsByTagName("coordinates");
  for (int i=0; i < list.getLength(); i++) {
    Node item=list.item(i);
    String str=item.getFirstChild().getNodeValue();
    if (str == null) {
      continue;
    }
    int st=0;
    int next=0;
    while ((next=str.indexOf('\n',st)) != -1) {
      String coordinate=str.substring(st,next + 1);
      int s=coordinate.indexOf(',');
      if (s != -1) {
        try {
          double lon=Double.parseDouble(coordinate.substring(0,s));
          double lat=Double.parseDouble(coordinate.substring(s + 1));
          Location l=new Location("router");
          l.setLatitude(lat);
          l.setLongitude(lon);
          res.add(l);
        }
 catch (        NumberFormatException e) {
        }
      }
      st=next + 1;
    }
  }
  if (list.getLength() == 0) {
    if (doc.getChildNodes().getLength() == 1) {
      Node item=doc.getChildNodes().item(0);
      return new RouteCalculationResult(item.getNodeValue());
    }
  }
  return new RouteCalculationResult(res,null,null);
}
