{
  super(ctx,voiceProvider,CONFIG_FILE);
  if (mTts == null) {
    throw new CommandPlayerException(ctx.getString(R.string.voice_data_unavailable));
  }
  final File config=new File(voiceDir,CONFIG_FILE);
  if (config.exists()) {
    BufferedReader reader=null;
    try {
      reader=new BufferedReader(new FileReader(config));
      String line=null;
      while ((line=reader.readLine()) != null) {
        if (line.matches("language(.*)")) {
          language=line.substring("language(".length(),line.lastIndexOf(')'));
          break;
        }
      }
    }
 catch (    IOException e) {
    }
 finally {
      Algoritms.closeStream(reader);
    }
    if (language == null) {
      throw new CommandPlayerException(ctx.getString(R.string.voice_data_unavailable));
    }
switch (mTts.isLanguageAvailable(new Locale(language))) {
case TextToSpeech.LANG_MISSING_DATA:
      Intent installIntent=new Intent();
    installIntent.setAction(TextToSpeech.Engine.ACTION_INSTALL_TTS_DATA);
  throw new CommandPlayerException(ctx.getString(R.string.voice_data_unavailable,installIntent));
case TextToSpeech.LANG_AVAILABLE:
break;
case TextToSpeech.LANG_NOT_SUPPORTED:
throw new CommandPlayerException(ctx.getString(R.string.voice_data_not_supported));
}
}
}
