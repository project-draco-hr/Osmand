{
  super.onCreate(savedInstanceState);
  boolean exit=false;
  if (getIntent() != null) {
    Intent intent=getIntent();
    if (intent.getExtras() != null && intent.getExtras().containsKey(APP_EXIT_KEY)) {
      exit=true;
      finish();
    }
  }
  requestWindowFeature(Window.FEATURE_NO_TITLE);
  setContentView(R.layout.menu);
  onCreateMainMenu(getWindow(),this);
  Window window=getWindow();
  final Activity activity=this;
  View showMap=window.findViewById(R.id.MapButton);
  showMap.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      final Intent mapIndent=new Intent(activity,MapActivity.class);
      activity.startActivityForResult(mapIndent,0);
    }
  }
);
  View settingsButton=window.findViewById(R.id.SettingsButton);
  settingsButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      final Intent settings=new Intent(activity,SettingsActivity.class);
      activity.startActivity(settings);
    }
  }
);
  View favouritesButton=window.findViewById(R.id.FavoritesButton);
  favouritesButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      final Intent settings=new Intent(activity,FavouritesActivity.class);
      activity.startActivity(settings);
    }
  }
);
  View closeButton=window.findViewById(R.id.CloseButton);
  closeButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      ((OsmandApplication)activity.getApplication()).closeApplication();
      activity.finish();
    }
  }
);
  View searchButton=window.findViewById(R.id.SearchButton);
  searchButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      final Intent search=new Intent(activity,SearchActivity.class);
      activity.startActivity(search);
    }
  }
);
  if (exit) {
    return;
  }
  ((OsmandApplication)getApplication()).checkApplicationIsBeingInitialized(this);
  SharedPreferences pref=getPreferences(MODE_WORLD_WRITEABLE);
  boolean firstTime=false;
  if (!pref.contains(FIRST_TIME_APP_RUN)) {
    firstTime=true;
    pref.edit().putBoolean(FIRST_TIME_APP_RUN,true).commit();
    boolean netOsmandWasInstalled=false;
    try {
      ApplicationInfo applicationInfo=getPackageManager().getApplicationInfo("net.osmand",PackageManager.GET_META_DATA);
      netOsmandWasInstalled=applicationInfo != null;
    }
 catch (    NameNotFoundException e) {
      netOsmandWasInstalled=false;
    }
    if (netOsmandWasInstalled) {
      Builder builder=new AlertDialog.Builder(this);
      builder.setMessage(R.string.osmand_net_previously_installed);
      builder.setPositiveButton(R.string.default_buttons_ok,null);
      builder.show();
    }
 else {
      Builder builder=new AlertDialog.Builder(this);
      builder.setMessage(R.string.first_time_msg);
      builder.setPositiveButton(R.string.first_time_download,new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int which){
          startActivity(new Intent(MainMenuActivity.this,DownloadIndexActivity.class));
        }
      }
);
      builder.setNegativeButton(R.string.first_time_continue,null);
      builder.show();
    }
  }
 else {
    int i=pref.getInt(TIPS_SHOW,0);
    if (i < 7) {
      pref.edit().putInt(TIPS_SHOW,++i).commit();
      if (i == 1 || i == 5) {
        TipsAndTricksActivity tipsActivity=new TipsAndTricksActivity(this);
        Dialog dlg=tipsActivity.getDialogToShowTips(true);
        dlg.show();
      }
    }
  }
  checkPreviousRunsForExceptions(firstTime);
}
