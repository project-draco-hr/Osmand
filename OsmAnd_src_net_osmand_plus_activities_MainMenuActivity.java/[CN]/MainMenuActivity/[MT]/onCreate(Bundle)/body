{
  super.onCreate(savedInstanceState);
  requestWindowFeature(Window.FEATURE_NO_TITLE);
  setContentView(R.layout.menu);
  View head=(View)findViewById(R.id.Headliner);
  head.startAnimation(getAnimation(0,-1));
  View leftview=(View)findViewById(R.id.MapButton);
  leftview.startAnimation(getAnimation(-1,0));
  leftview=(View)findViewById(R.id.FavoritesButton);
  leftview.startAnimation(getAnimation(-1,0));
  View rightview=(View)findViewById(R.id.SettingsButton);
  rightview.startAnimation(getAnimation(1,0));
  rightview=(View)findViewById(R.id.SearchButton);
  rightview.startAnimation(getAnimation(1,0));
  String textVersion=Version.APP_VERSION + " " + Version.APP_DESCRIPTION;
  final TextView textVersionView=(TextView)findViewById(R.id.TextVersion);
  textVersionView.setText(textVersion);
  SharedPreferences prefs=OsmandSettings.getPrefs(this);
  if (prefs.contains(CONTRIBUTION_VERSION_FLAG)) {
    final TextView appName=(TextView)findViewById(R.id.AppName);
    appName.setText("OsmAnd!");
    SpannableString content=new SpannableString(textVersion);
    content.setSpan(new ClickableSpan(){
      @Override public void onClick(      View widget){
        final Intent mapIndent=new Intent(MainMenuActivity.this,ContributionVersionActivity.class);
        startActivityForResult(mapIndent,0);
      }
    }
,0,content.length(),0);
    textVersionView.setText(content);
    textVersionView.setMovementMethod(LinkMovementMethod.getInstance());
  }
  showMap=findViewById(R.id.MapButton);
  showMap.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      final Intent mapIndent=new Intent(MainMenuActivity.this,MapActivity.class);
      startActivityForResult(mapIndent,0);
    }
  }
);
  settingsButton=findViewById(R.id.SettingsButton);
  settingsButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      final Intent settings=new Intent(MainMenuActivity.this,SettingsActivity.class);
      startActivity(settings);
    }
  }
);
  favouritesButton=findViewById(R.id.FavoritesButton);
  favouritesButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      final Intent settings=new Intent(MainMenuActivity.this,FavouritesActivity.class);
      startActivity(settings);
    }
  }
);
  closeButton=findViewById(R.id.CloseButton);
  closeButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      finish();
    }
  }
);
  searchButton=findViewById(R.id.SearchButton);
  searchButton.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      final Intent search=new Intent(MainMenuActivity.this,SearchActivity.class);
      startActivity(search);
    }
  }
);
  ((OsmandApplication)getApplication()).checkApplicationIsBeingInitialized(this);
  SharedPreferences pref=getPreferences(MODE_WORLD_WRITEABLE);
  boolean firstTime=false;
  if (!pref.contains(FIRST_TIME_APP_RUN)) {
    firstTime=true;
    pref.edit().putBoolean(FIRST_TIME_APP_RUN,true).commit();
    boolean netOsmandWasInstalled=false;
    try {
      ApplicationInfo applicationInfo=getPackageManager().getApplicationInfo("net.osmand",PackageManager.GET_META_DATA);
      netOsmandWasInstalled=applicationInfo != null;
    }
 catch (    NameNotFoundException e) {
      netOsmandWasInstalled=false;
    }
    if (netOsmandWasInstalled) {
      Builder builder=new AlertDialog.Builder(this);
      builder.setMessage(R.string.osmand_net_previously_installed);
      builder.setPositiveButton(R.string.default_buttons_ok,null);
      builder.show();
    }
 else {
      Builder builder=new AlertDialog.Builder(this);
      builder.setMessage(R.string.first_time_msg);
      builder.setPositiveButton(R.string.first_time_download,new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int which){
          startActivity(new Intent(MainMenuActivity.this,DownloadIndexActivity.class));
        }
      }
);
      builder.setNegativeButton(R.string.first_time_continue,null);
      builder.show();
    }
  }
  checkPreviousRunsForExceptions(firstTime);
}
