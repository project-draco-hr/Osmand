{
  latitude=MapUtils.checkLatitude(latitude);
  longitude=MapUtils.checkLongitude(longitude);
  final TextView latEdit=((TextView)findViewById(R.id.LatitudeEdit));
  final TextView lonEdit=((TextView)findViewById(R.id.LongitudeEdit));
  currentFormat=Location.FORMAT_DEGREES;
  latEdit.setText(convert(latitude,Location.FORMAT_DEGREES));
  lonEdit.setText(convert(longitude,Location.FORMAT_DEGREES));
  ((RadioButton)findViewById(R.id.Format1)).setChecked(true);
  ((RadioGroup)findViewById(R.id.RadioGroup)).setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener(){
    @Override public void onCheckedChanged(    RadioGroup group,    int checkedId){
      int newFormat=currentFormat;
      if (checkedId == R.id.Format1) {
        newFormat=Location.FORMAT_DEGREES;
      }
 else       if (checkedId == R.id.Format2) {
        newFormat=Location.FORMAT_MINUTES;
      }
 else       if (checkedId == R.id.Format3) {
        newFormat=Location.FORMAT_SECONDS;
      }
      currentFormat=newFormat;
      try {
        double lat=convert(((TextView)findViewById(R.id.LatitudeEdit)).getText().toString());
        double lon=convert(((TextView)findViewById(R.id.LongitudeEdit)).getText().toString());
        ((TextView)findViewById(R.id.ValidateTextView)).setVisibility(View.INVISIBLE);
        latEdit.setText(convert(lat,newFormat));
        lonEdit.setText(convert(lon,newFormat));
      }
 catch (      RuntimeException e) {
        ((TextView)findViewById(R.id.ValidateTextView)).setVisibility(View.VISIBLE);
        ((TextView)findViewById(R.id.ValidateTextView)).setText(R.string.invalid_locations);
        Log.w(LogUtil.TAG,"Convertion failed",e);
      }
    }
  }
);
  ((Button)findViewById(R.id.Cancel)).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (dlg == null) {
        showOnMap(true);
      }
 else {
        close();
      }
    }
  }
);
  ((Button)findViewById(R.id.ShowOnMap)).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showOnMap(false);
    }
  }
);
  TextWatcher textWatcher=new TextWatcher(){
    String pasteString=null;
    @Override public void onTextChanged(    CharSequence s,    int start,    int before,    int count){
      pasteString=null;
      if (count > 3) {
        pasteString=s.subSequence(start,start + count).toString();
      }
    }
    @Override public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){
    }
    @Override public void afterTextChanged(    Editable s){
      if (pasteString != null) {
        int latSt=-1;
        int latEnd=-1;
        int lonSt=-1;
        int lonEnd=-1;
        int step=0;
        for (int i=0; i < pasteString.length(); i++) {
          char ch=pasteString.charAt(i);
          if (Character.isDigit(ch)) {
            if (step == 0 || step == 2) {
              int t=i;
              if (i > 0 && pasteString.charAt(i - 1) == '-') {
                t--;
              }
              if (step == 0) {
                latSt=t;
              }
 else {
                lonSt=t;
              }
              step++;
            }
          }
 else           if (ch == '.' || ch == ':') {
          }
 else {
            if (step == 1) {
              latEnd=i;
              step++;
            }
 else             if (step == 3) {
              lonEnd=i;
              step++;
              break;
            }
          }
        }
        if (lonSt != -1) {
          if (lonEnd == -1) {
            lonEnd=pasteString.length();
          }
          try {
            String latString=pasteString.substring(latSt,latEnd);
            String lonString=pasteString.substring(lonSt,lonEnd);
            Double.parseDouble(latString);
            Double.parseDouble(lonString);
            latEdit.setText(latString);
            lonEdit.setText(lonString);
          }
 catch (          NumberFormatException e) {
          }
        }
      }
    }
  }
;
  latEdit.addTextChangedListener(textWatcher);
  lonEdit.addTextChangedListener(textWatcher);
}
