{
  if (dialect == DBDialect.NOSQL) {
    return iterateOverEntitiesNoSQL(progress,type,visitor);
  }
  Statement statement=dbConn.createStatement();
  PreparedStatement select;
  int count=0;
  computeRealCounts(statement);
  statement.close();
  if (type == EntityType.NODE) {
    select=iterateNodes;
    count=allNodes;
  }
 else   if (type == EntityType.WAY) {
    select=iterateWays;
    count=allWays;
  }
 else {
    select=iterateRelations;
    count=allRelations;
  }
  progress.startWork(count);
  BlockingQueue<Entity> toProcess=new ArrayBlockingQueue<Entity>(100000);
  EntityProducer entityProducer=new EntityProducer(toProcess,type,select);
  entityProducer.start();
  int counter=0;
  Entity entityToProcess=null;
  Entity endEntity=entityProducer.getEndingEntity();
  while ((entityToProcess=toProcess.take()) != endEntity) {
    if (progress != null) {
      progress.progress(1);
    }
    counter++;
    visitor.iterateEntity(entityToProcess,this);
  }
  return count;
}
