{
  ReadOptions opts=new ReadOptions();
  DBIterator iterator=accessor.NewIterator(opts);
  String prefix="0";
  int count=0;
  if (type == EntityType.WAY) {
    prefix="1";
  }
 else   if (type == EntityType.RELATION) {
    prefix="2";
  }
  iterator.Seek(prefix);
  while (iterator.Valid()) {
    String key=iterator.key();
    if (!key.startsWith(prefix)) {
      break;
    }
    String value=iterator.value();
    try {
      Entity e=null;
      if (type == EntityType.NODE) {
        e=loadEntityNoSqlFromValue(opts,key,value,true,true);
      }
 else       if (type == EntityType.WAY) {
        e=loadEntityNoSqlFromValue(opts,key,value,true,false);
      }
 else {
        e=loadEntityNoSqlFromValue(opts,key,value,true,false);
      }
      if (e != null) {
        count++;
        if (progress != null) {
          progress.progress(1);
        }
        visitor.iterateEntity(e,this);
      }
    }
 catch (    JSONException e) {
      log.warn(key + " - " + e.getMessage()+ " "+ value+ "("+ value.length()+ "]",e);
    }
    iterator.Next();
  }
  iterator.delete();
  return count;
}
