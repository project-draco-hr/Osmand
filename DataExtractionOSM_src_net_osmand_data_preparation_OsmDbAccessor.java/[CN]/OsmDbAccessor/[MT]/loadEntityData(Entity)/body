{
  if (e.isDataLoaded()) {
    return;
  }
  if (e instanceof Node || (e instanceof Way && !((Way)e).getNodes().isEmpty())) {
    return;
  }
  if (dialect == DBDialect.NOSQL) {
    loadEntityDataNoSQL(e);
    e.entityDataLoaded();
    return;
  }
  Map<EntityId,Entity> map=new LinkedHashMap<EntityId,Entity>();
  if (e instanceof Relation && ((Relation)e).getMemberIds().isEmpty()) {
    pselectRelation.setLong(1,e.getId());
    if (pselectRelation.execute()) {
      ResultSet rs=pselectRelation.getResultSet();
      boolean first=true;
      while (rs.next()) {
        int ord=rs.getInt(4);
        if (ord > 0 || first) {
          first=false;
          ((Relation)e).addMember(rs.getLong(1),EntityType.values()[rs.getInt(2)],rs.getString(3));
        }
      }
      rs.close();
    }
  }
 else   if (e instanceof Way && ((Way)e).getEntityIds().isEmpty()) {
    pselectWay.setLong(1,e.getId());
    if (pselectWay.execute()) {
      ResultSet rs=pselectWay.getResultSet();
      boolean first=true;
      while (rs.next()) {
        int ord=rs.getInt(2);
        if (ord > 0 || first) {
          first=false;
          ((Way)e).addNode(new Node(rs.getDouble(5),rs.getDouble(6),rs.getLong(1)));
        }
      }
      rs.close();
    }
  }
  Collection<EntityId> ids=e instanceof Relation ? ((Relation)e).getMemberIds() : ((Way)e).getEntityIds();
  for (  EntityId i : ids) {
    if (i.getType() == EntityType.NODE) {
      pselectNode.setLong(1,i.getId());
      if (pselectNode.execute()) {
        ResultSet rs=pselectNode.getResultSet();
        Node n=null;
        while (rs.next()) {
          if (n == null) {
            n=new Node(rs.getDouble(1),rs.getDouble(2),i.getId());
          }
          if (rs.getObject(3) != null) {
            n.putTag(rs.getString(3),rs.getString(4));
          }
        }
        map.put(i,n);
        rs.close();
      }
    }
 else     if (i.getType() == EntityType.WAY) {
      pselectWay.setLong(1,i.getId());
      if (pselectWay.execute()) {
        ResultSet rs=pselectWay.getResultSet();
        Way way=new Way(i.getId());
        map.put(i,way);
        boolean first=true;
        while (rs.next()) {
          int ord=rs.getInt(2);
          if (ord > 0 || first) {
            first=false;
            way.addNode(new Node(rs.getDouble(5),rs.getDouble(6),rs.getLong(1)));
          }
          if (ord == 0 && rs.getObject(3) != null) {
            way.putTag(rs.getString(3),rs.getString(4));
          }
        }
        if (way.getNodes() == null) {
          System.err.println("Strange, way with id:" + i.getId() + " has no nodes?");
        }
        rs.close();
      }
    }
 else     if (i.getType() == EntityType.RELATION) {
      pselectRelation.setLong(1,i.getId());
      if (pselectRelation.execute()) {
        ResultSet rs=pselectRelation.getResultSet();
        Relation rel=new Relation(i.getId());
        map.put(i,rel);
        boolean first=true;
        while (rs.next()) {
          int ord=rs.getInt(4);
          if (ord > 0 || first) {
            first=false;
            rel.addMember(rs.getLong(1),EntityType.values()[rs.getInt(2)],rs.getString(3));
          }
          if (ord == 0 && rs.getObject(5) != null) {
            rel.putTag(rs.getString(5),rs.getString(6));
          }
        }
        rs.close();
      }
    }
  }
  e.initializeLinks(map);
  e.entityDataLoaded();
}
