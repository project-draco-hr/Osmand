{
  if (Algoritms.isEmpty(templateName.getText())) {
    JOptionPane.showMessageDialog(this,"Please specify template name","Error creating new tile source",JOptionPane.ERROR_MESSAGE);
    return false;
  }
  if (Algoritms.isEmpty(templateUrl.getText())) {
    JOptionPane.showMessageDialog(this,"Please specify template url","Error creating new tile source",JOptionPane.ERROR_MESSAGE);
    return false;
  }
  String url=templateUrl.getText();
  if (url.indexOf("{$x}") == -1 || url.indexOf("{$y}") == -1 || url.indexOf("{$z}") == -1) {
    JOptionPane.showMessageDialog(this,"Please specify all placeholders {$x}, {$y}, {$z} in url","Error creating new tile source",JOptionPane.ERROR_MESSAGE);
    return false;
  }
  File tilesDirectory=DataExtractionSettings.getSettings().getTilesDirectory();
  if (tilesDirectory != null) {
    File dir=new File(tilesDirectory,templateName.getText());
    if (dir.mkdirs()) {
      try {
        FileOutputStream ous=new FileOutputStream(new File(dir,"url"));
        ous.write(url.getBytes("UTF-8"));
        ous.close();
      }
 catch (      UnsupportedEncodingException e) {
        log.error("Error creating new tile source " + url,e);
      }
catch (      IOException e) {
        log.error("Error creating new tile source " + url,e);
      }
    }
  }
  return true;
}
