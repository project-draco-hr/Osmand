{
  DistanceToPointInfoControl ctrl=new DistanceToPointInfoControl(map,0,0){
    private int cachedMarkerColorIndex=-1;
    private Boolean cachedNightMode=null;
    @Override public LatLon getPointToNavigate(){
      MapMarker marker=getMarker();
      if (marker != null) {
        return marker.point;
      }
      return null;
    }
    private MapMarker getMarker(){
      List<MapMarker> markers=helper.getSortedMapMarkers();
      if (firstMarker) {
        if (markers.size() > 0) {
          return markers.get(0);
        }
      }
 else {
        if (markers.size() > 1) {
          return markers.get(1);
        }
      }
      return null;
    }
    @Override public boolean updateInfo(    DrawSettings drawSettings){
      MapMarker marker=getMarker();
      if (marker == null) {
        setText(null,null);
        return false;
      }
      boolean res=super.updateInfo(drawSettings);
      if (marker.colorIndex != -1) {
        if (marker.colorIndex != cachedMarkerColorIndex || cachedNightMode == null || cachedNightMode != isNight()) {
          setImageDrawable(map.getMyApplication().getIconsCache().getIcon(isNight() ? R.drawable.widget_marker_night : R.drawable.widget_marker_day,R.drawable.widget_marker_triangle,MapMarkerDialogHelper.getMapMarkerColorId(marker.colorIndex)));
          cachedMarkerColorIndex=marker.colorIndex;
          cachedNightMode=isNight();
        }
      }
      return res;
    }
    @Override protected void click(    OsmandMapTileView view){
      showMarkerOnMap(firstMarker ? 0 : 1);
    }
  }
;
  ctrl.setAutoHide(false);
  return ctrl;
}
