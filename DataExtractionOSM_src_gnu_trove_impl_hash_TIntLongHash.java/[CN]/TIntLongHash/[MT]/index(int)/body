{
  int hash, probe, index, length;
  final byte[] states=_states;
  final int[] set=_set;
  length=states.length;
  hash=HashFunctions.hash(key) & 0x7fffffff;
  index=hash % length;
  if (states[index] != FREE && (states[index] == REMOVED || set[index] != key)) {
    probe=1 + (hash % (length - 2));
    do {
      index-=probe;
      if (index < 0) {
        index+=length;
      }
    }
 while (states[index] != FREE && (states[index] == REMOVED || set[index] != key));
  }
  return states[index] == FREE ? -1 : index;
}
