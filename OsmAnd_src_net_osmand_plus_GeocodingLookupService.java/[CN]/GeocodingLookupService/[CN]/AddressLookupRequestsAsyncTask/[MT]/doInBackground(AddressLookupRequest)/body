{
  for (; ; ) {
    try {
      while (!lookupLocations.isEmpty()) {
        final LatLon latLon;
synchronized (GeocodingLookupService.this) {
          latLon=lookupLocations.poll();
          currentRequestedLocation=latLon;
          List<AddressLookupRequest> requests=addressLookupRequestsMap.get(latLon);
          if (requests == null || requests.size() == 0) {
            addressLookupRequestsMap.remove(latLon);
            continue;
          }
        }
        searchDone=false;
        while (!geocode(latLon)) {
          try {
            Thread.sleep(50);
          }
 catch (          InterruptedException e) {
            e.printStackTrace();
          }
        }
        long counter=0;
        while (!searchDone) {
          try {
            Thread.sleep(50);
            counter++;
            if (counter == 10) {
              counter=0;
synchronized (GeocodingLookupService.this) {
                List<AddressLookupRequest> requests=addressLookupRequestsMap.get(latLon);
                for (                final AddressLookupRequest request : requests) {
                  if (request.uiProgressCallback != null) {
                    app.runInUIThread(new Runnable(){
                      @Override public void run(){
                        request.uiProgressCallback.geocodingInProgress();
                      }
                    }
);
                  }
                }
              }
            }
          }
 catch (          InterruptedException e) {
            e.printStackTrace();
          }
        }
synchronized (GeocodingLookupService.this) {
          List<AddressLookupRequest> requests=addressLookupRequestsMap.get(latLon);
          for (          final AddressLookupRequest request : requests) {
            if (request.uiResultCallback != null) {
              app.runInUIThread(new Runnable(){
                @Override public void run(){
                  request.uiResultCallback.geocodingDone(lastFoundAddress);
                }
              }
);
            }
          }
          addressLookupRequestsMap.remove(latLon);
        }
      }
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
synchronized (GeocodingLookupService.this) {
      currentRequestedLocation=null;
      if (lookupLocations.isEmpty()) {
        break;
      }
    }
  }
  return null;
}
