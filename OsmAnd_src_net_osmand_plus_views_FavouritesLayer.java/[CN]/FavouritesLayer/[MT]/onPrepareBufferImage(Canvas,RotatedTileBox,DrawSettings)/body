{
  cache.clear();
  if (this.settings.SHOW_FAVORITES.get()) {
    if (tileBox.getZoom() >= startZoom) {
      float iconSize=FavoriteImageDrawable.getOrCreate(view.getContext(),0,true).getIntrinsicWidth() * 3 / 2.5f;
      QuadTree<QuadRect> boundIntersections=initBoundIntersections(tileBox);
      final QuadRect latLonBounds=tileBox.getLatLonBounds();
      List<FavouritePoint> fullObjects=new ArrayList<>();
      List<LatLon> fullObjectsLatLon=new ArrayList<>();
      List<LatLon> smallObjectsLatLon=new ArrayList<>();
      for (      FavouritePoint o : getPoints()) {
        if (!o.isVisible()) {
          continue;
        }
        float x=tileBox.getPixXFromLatLon(o.getLatitude(),o.getLongitude());
        float y=tileBox.getPixYFromLatLon(o.getLatitude(),o.getLongitude());
        if (intersects(boundIntersections,x,y,iconSize,iconSize)) {
          @ColorInt int col=o.getColor() == 0 || o.getColor() == Color.BLACK ? defaultColor : o.getColor();
          paintIcon.setColorFilter(new PorterDuffColorFilter(col,PorterDuff.Mode.MULTIPLY));
          canvas.drawBitmap(pointSmall,x - pointSmall.getWidth() / 2,y - pointSmall.getHeight() / 2,paintIcon);
          smallObjectsLatLon.add(new LatLon(o.getLatitude(),o.getLongitude()));
        }
 else {
          fullObjects.add(o);
          fullObjectsLatLon.add(new LatLon(o.getLatitude(),o.getLongitude()));
        }
      }
      for (      FavouritePoint o : fullObjects) {
        if (o != contextMenuLayer.getMoveableObject()) {
          drawPoint(canvas,tileBox,latLonBounds,o);
        }
      }
      this.fullObjectsLatLon=fullObjectsLatLon;
      this.smallObjectsLatLon=smallObjectsLatLon;
    }
  }
  if (textLayer.isVisible()) {
    textLayer.putData(this,cache);
  }
}
