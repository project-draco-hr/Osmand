{
  int defPointColor=view.getResources().getColor(R.color.gpx_color_point);
  int visitedColor=view.getContext().getResources().getColor(R.color.color_ok);
  if (tileBox.getZoom() >= startZoom) {
    float iconSize=FavoriteImageDrawable.getOrCreate(view.getContext(),0,tileBox.getDensity()).getIntrinsicWidth() * 3 / 2.5f;
    QuadRect bounds=new QuadRect(0,0,tileBox.getPixWidth(),tileBox.getPixHeight());
    bounds.inset(-bounds.width() / 4,-bounds.height() / 4);
    QuadTree<QuadRect> boundIntersections=new QuadTree<>(bounds,4,0.6f);
    List<QuadRect> result=new ArrayList<>();
    final QuadRect latLonBounds=tileBox.getLatLonBounds();
    for (    SelectedGpxFile g : selectedGPXFiles) {
      List<WptPt> pts=getListStarPoints(g);
      List<WptPt> fullObjects=new ArrayList<>();
      int fcolor=g.getColor() == 0 ? defPointColor : g.getColor();
      for (      WptPt o : pts) {
        if (o.lat >= latLonBounds.bottom && o.lat <= latLonBounds.top && o.lon >= latLonBounds.left && o.lon <= latLonBounds.right) {
          cache.add(o);
          float x=tileBox.getPixXFromLatLon(o.lat,o.lon);
          float y=tileBox.getPixYFromLatLon(o.lat,o.lon);
          boolean intersects=false;
          QuadRect visibleRect=calculateRect(x,y,iconSize,iconSize);
          boundIntersections.queryInBox(new QuadRect(visibleRect.left,visibleRect.top,visibleRect.right,visibleRect.bottom),result);
          for (          QuadRect r : result) {
            if (QuadRect.intersects(r,visibleRect)) {
              intersects=true;
              break;
            }
          }
          if (intersects) {
            canvas.drawBitmap(pointSmall,x - pointSmall.getWidth() / 2,y - pointSmall.getHeight() / 2,paintIcon);
          }
 else {
            boundIntersections.insert(visibleRect,new QuadRect(visibleRect.left,visibleRect.top,visibleRect.right,visibleRect.bottom));
            fullObjects.add(o);
          }
        }
      }
      for (      WptPt o : fullObjects) {
        float x=tileBox.getPixXFromLatLon(o.lat,o.lon);
        float y=tileBox.getPixYFromLatLon(o.lat,o.lon);
        boolean visit=isPointVisited(o);
        int pointColor=visit ? visitedColor : o.getColor(fcolor);
        FavoriteImageDrawable fid=FavoriteImageDrawable.getOrCreate(view.getContext(),pointColor,tileBox.getDensity());
        fid.drawBitmapInCenter(canvas,x,y);
      }
    }
  }
}
