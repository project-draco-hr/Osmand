{
  handler.removeMessages(1);
  long ms=SystemClock.elapsedRealtime();
  boolean useInternet=getSettings().USE_INTERNET_TO_DOWNLOAD_TILES.get();
  if (useInternet) {
    if (application != null) {
      application.getResourceManager().getMapTileDownloader().refuseAllPreviousRequests();
    }
  }
  SurfaceHolder holder=getHolder();
synchronized (holder) {
    int nzoom=getZoom();
    float tileX=(float)MapUtils.getTileNumberX(nzoom,longitude);
    float tileY=(float)MapUtils.getTileNumberY(nzoom,latitude);
    float w=getCenterPointX();
    float h=getCenterPointY();
    Canvas canvas=holder.lockCanvas();
    if (canvas != null) {
      boolean nightMode=application.getDaynightHelper().isNightMode();
      try {
        boundsRect.set(0,0,getWidth(),getHeight());
        calculateTileRectangle(boundsRect,w,h,tileX,tileY,tilesRect);
        latlonRect.top=(float)MapUtils.getLatitudeFromTile(nzoom,tilesRect.top);
        latlonRect.left=(float)MapUtils.getLongitudeFromTile(nzoom,tilesRect.left);
        latlonRect.bottom=(float)MapUtils.getLatitudeFromTile(nzoom,tilesRect.bottom);
        latlonRect.right=(float)MapUtils.getLongitudeFromTile(nzoom,tilesRect.right);
        if (nightMode) {
          canvas.drawARGB(255,100,100,100);
        }
 else {
          canvas.drawARGB(255,225,225,225);
        }
        drawOverMap(canvas,latlonRect,tilesRect,new DrawSettings(nightMode,updateVectorRendering));
      }
  finally {
        holder.unlockCanvasAndPost(canvas);
      }
    }
    if (MEASURE_FPS) {
      fpsMeasureMs+=SystemClock.elapsedRealtime() - ms;
      fpsMeasureCount++;
      if (fpsMeasureCount > 10 || (ms - fpsFirstMeasurement) > 400) {
        fpsFirstMeasurement=ms;
        fps=(1000f * fpsMeasureCount / fpsMeasureMs);
        fpsMeasureCount=0;
        fpsMeasureMs=0;
      }
    }
  }
}
