{
  handler.removeMessages(1);
  SurfaceHolder holder=getHolder();
  long ms=SystemClock.elapsedRealtime();
synchronized (holder) {
    Canvas canvas=holder.lockCanvas();
    if (canvas != null) {
      try {
        final float ratioy=mapPosition == OsmandSettings.BOTTOM_CONSTANT ? 0.8f : 0.5f;
        final int cy=(int)(ratioy * getHeight());
        if (currentViewport.getPixWidth() != getWidth() || currentViewport.getPixHeight() != getHeight() || currentViewport.getCenterPixelY() != cy) {
          currentViewport.setPixelDimensions(getWidth(),getHeight(),0.5f,ratioy);
        }
        boolean nightMode=application.getDaynightHelper().isNightMode();
        RotatedTileBox viewportToDraw=currentViewport.copy();
        DrawSettings drawSettings=new DrawSettings(nightMode,updateVectorRendering);
        if (nightMode) {
          canvas.drawARGB(255,100,100,100);
        }
 else {
          canvas.drawARGB(255,225,225,225);
        }
        drawOverMap(canvas,viewportToDraw,drawSettings,false);
      }
  finally {
        holder.unlockCanvasAndPost(canvas);
      }
    }
    if (MEASURE_FPS) {
      main.calculateFPS(ms,SystemClock.elapsedRealtime());
    }
  }
}
