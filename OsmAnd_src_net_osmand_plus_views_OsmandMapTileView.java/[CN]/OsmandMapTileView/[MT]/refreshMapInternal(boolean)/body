{
  handler.removeMessages(1);
  long ms=SystemClock.elapsedRealtime();
  boolean useInternet=getSettings().USE_INTERNET_TO_DOWNLOAD_TILES.get();
  if (useInternet) {
    if (application != null) {
      application.getResourceManager().getMapTileDownloader().refuseAllPreviousRequests();
    }
  }
  SurfaceHolder holder=getHolder();
synchronized (holder) {
    Canvas canvas=holder.lockCanvas();
    if (canvas != null) {
      try {
        final float ratioy=mapPosition == OsmandSettings.BOTTOM_CONSTANT ? 0.8f : 0.5f;
        final int cy=(int)(ratioy * getHeight());
        if (currentViewport.getPixWidth() != getWidth() || currentViewport.getPixHeight() != getHeight() || currentViewport.getCenterPixelY() != cy) {
          currentViewport.setPixelDimensions(getWidth(),getHeight(),0.5f,ratioy);
        }
        boolean nightMode=application.getDaynightHelper().isNightMode();
        if (nightMode) {
          canvas.drawARGB(255,100,100,100);
        }
 else {
          canvas.drawARGB(255,225,225,225);
        }
        drawOverMap(canvas,currentViewport.copy(),new DrawSettings(nightMode,updateVectorRendering),false);
      }
  finally {
        holder.unlockCanvasAndPost(canvas);
      }
    }
    if (MEASURE_FPS) {
      fpsMeasureMs+=SystemClock.elapsedRealtime() - ms;
      fpsMeasureCount++;
      if (fpsMeasureCount > 10 || (ms - fpsFirstMeasurement) > 400) {
        fpsFirstMeasurement=ms;
        fps=(1000f * fpsMeasureCount / fpsMeasureMs);
        fpsMeasureCount=0;
        fpsMeasureMs=0;
      }
    }
  }
}
