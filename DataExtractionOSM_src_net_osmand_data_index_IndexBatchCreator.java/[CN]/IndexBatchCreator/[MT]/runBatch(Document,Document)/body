{
  NodeList list=doc.getElementsByTagName("process");
  if (list.getLength() != 1) {
    throw new IllegalArgumentException("You should specify exactly 1 process element!");
  }
  Element process=(Element)list.item(0);
  IndexCreator.REMOVE_POI_DB=true;
  String file=process.getAttribute("skipExistingIndexesAt");
  if (file != null && new File(file).exists()) {
    skipExistingIndexes=new File(file);
  }
  wget=process.getAttribute("wget");
  indexPOI=Boolean.parseBoolean(process.getAttribute("indexPOI"));
  indexMap=Boolean.parseBoolean(process.getAttribute("indexMap"));
  indexRouting=process.getAttribute("indexRouting") == null || process.getAttribute("indexRouting").equalsIgnoreCase("true");
  indexTransport=Boolean.parseBoolean(process.getAttribute("indexTransport"));
  indexAddress=Boolean.parseBoolean(process.getAttribute("indexAddress"));
  parseProcessAttributes(process);
  list=doc.getElementsByTagName("process_attributes");
  if (list.getLength() == 1) {
    parseProcessAttributes((Element)list.item(0));
  }
  String dir=process.getAttribute("directory_for_osm_files");
  if (dir == null || !new File(dir).exists()) {
    throw new IllegalArgumentException("Please specify directory with .osm or .osm.bz2 files as directory_for_osm_files (attribute)" + dir);
  }
  osmDirFiles=new File(dir);
  dir=process.getAttribute("directory_for_index_files");
  if (dir == null || !new File(dir).exists()) {
    throw new IllegalArgumentException("Please specify directory with generated index files  as directory_for_index_files (attribute)");
  }
  indexDirFiles=new File(dir);
  workDir=indexDirFiles;
  dir=process.getAttribute("directory_for_generation");
  if (dir != null && new File(dir).exists()) {
    workDir=new File(dir);
  }
  List<RegionCountries> countriesToDownload=new ArrayList<RegionCountries>();
  parseCountriesToDownload(doc,countriesToDownload);
  if (regions != null) {
    parseCountriesToDownload(regions,countriesToDownload);
  }
  runBatch(countriesToDownload);
}
