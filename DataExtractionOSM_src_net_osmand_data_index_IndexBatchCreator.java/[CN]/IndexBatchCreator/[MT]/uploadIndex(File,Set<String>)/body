{
  if (!uploadIndexes) {
    return;
  }
  MessageFormat format=new MessageFormat("{0,date,dd.MM.yyyy} : {1, number,##.#} MB",Locale.US);
  String summary;
  double mbLengh=(double)f.length() / MB;
  String regionName;
  if (f.getName().endsWith(IndexConstants.POI_INDEX_EXT) || f.getName().endsWith(IndexConstants.POI_INDEX_EXT_ZIP)) {
    regionName=f.getName().substring(0,f.getName().length() - IndexConstants.POI_INDEX_EXT.length() - 2);
    summary="POI index for ";
  }
 else   if (f.getName().endsWith(IndexConstants.ADDRESS_INDEX_EXT) || f.getName().endsWith(IndexConstants.ADDRESS_INDEX_EXT_ZIP)) {
    regionName=f.getName().substring(0,f.getName().length() - IndexConstants.ADDRESS_INDEX_EXT.length() - 2);
    summary="Address index for ";
  }
 else   if (f.getName().endsWith(IndexConstants.TRANSPORT_INDEX_EXT) || f.getName().endsWith(IndexConstants.TRANSPORT_INDEX_EXT_ZIP)) {
    regionName=f.getName().substring(0,f.getName().length() - IndexConstants.TRANSPORT_INDEX_EXT.length() - 2);
    summary="Transport index for ";
  }
 else {
    return;
  }
  if (mbLengh > 5 && f.getName().endsWith(".odb")) {
    String zipFileName=f.getName().subSequence(0,f.getName().length() - 4) + ".zip";
    File zFile=new File(f.getParentFile(),zipFileName);
    log.info("Zipping file " + f.getName());
    try {
      ZipOutputStream zout=new ZipOutputStream(new FileOutputStream(zFile));
      zout.setLevel(9);
      zout.putNextEntry(new ZipEntry(f.getName()));
      FileInputStream is=new FileInputStream(f);
      byte[] BUFFER=new byte[8192];
      int read=0;
      while ((read=is.read(BUFFER)) != -1) {
        zout.write(BUFFER,0,read);
      }
      is.close();
      zout.close();
    }
 catch (    IOException e) {
      log.error("Exception while zipping file",e);
    }
    if (f.delete()) {
      log.info("Source odb file was deleted");
    }
    f=zFile;
  }
  mbLengh=(double)f.length() / MB;
  if (mbLengh > 100) {
    System.err.println("ERROR : file " + f.getName() + " exceeded 100 mb!!! Could not be uploaded.");
    return;
  }
  String descriptionFile="{" + format.format(new Object[]{new Date(f.lastModified()),mbLengh}) + "}";
  summary+=regionName + " " + descriptionFile;
  alreadyUploadedFiles.add(f.getName());
  GoogleCodeUploadIndex uploader=new GoogleCodeUploadIndex();
  uploader.setFileName(f.getAbsolutePath());
  uploader.setTargetFileName(f.getName());
  uploader.setProjectName("osmand");
  uploader.setUserName(user);
  uploader.setPassword(password);
  uploader.setLabels("Type-Archive, Testdata");
  uploader.setSummary(summary.replace('_',' '));
  try {
    uploader.upload();
  }
 catch (  IOException e) {
    log.error("Input/output exception uploading " + f.getName(),e);
  }
}
