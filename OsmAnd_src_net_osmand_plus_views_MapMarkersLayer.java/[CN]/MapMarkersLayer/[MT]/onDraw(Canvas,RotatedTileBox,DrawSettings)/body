{
  widgetsFactory.updateInfo(useFingerLocation ? fingerLocation : null,tileBox.getZoom());
  if (tileBox.getZoom() < 3 || !map.getMyApplication().getSettings().USE_MAP_MARKERS.get()) {
    return;
  }
  MapMarkersHelper markersHelper=map.getMyApplication().getMapMarkersHelper();
  if (route.size() > 0) {
    path.reset();
    boolean first=true;
    Location myLocation=map.getMapViewTrackingUtilities().getMyLocation();
    if (markersHelper.isStartFromMyLocation() && myLocation != null) {
      int locationX=tileBox.getPixXFromLonNoRot(myLocation.getLongitude());
      int locationY=tileBox.getPixYFromLatNoRot(myLocation.getLatitude());
      path.moveTo(locationX,locationY);
      first=false;
    }
    for (    LatLon point : route) {
      int locationX=tileBox.getPixXFromLonNoRot(point.getLongitude());
      int locationY=tileBox.getPixYFromLatNoRot(point.getLatitude());
      if (first) {
        path.moveTo(locationX,locationY);
        first=false;
      }
 else {
        path.lineTo(locationX,locationY);
      }
    }
    canvas.drawPath(path,paint);
  }
  List<MapMarker> activeMapMarkers=markersHelper.getActiveMapMarkers();
  for (  MapMarker marker : activeMapMarkers) {
    if (isLocationVisible(tileBox,marker) && !overlappedByWaypoint(marker) && !isInMotion(marker)) {
      Bitmap bmp=getMapMarkerBitmap(marker.colorIndex);
      int marginX=bmp.getWidth() / 6;
      int marginY=bmp.getHeight();
      int locationX=tileBox.getPixXFromLonNoRot(marker.getLongitude());
      int locationY=tileBox.getPixYFromLatNoRot(marker.getLatitude());
      canvas.rotate(-tileBox.getRotate(),locationX,locationY);
      canvas.drawBitmap(bmp,locationX - marginX,locationY - marginY,bitmapPaint);
      canvas.rotate(tileBox.getRotate(),locationX,locationY);
    }
  }
  boolean show=useFingerLocation || (map.getMyApplication().getSettings().MAP_MARKERS_MODE.get() == OsmandSettings.MapMarkersMode.WIDGETS && map.getMyApplication().getSettings().SHOW_DESTINATION_ARROW.get());
  if (show) {
    LatLon loc=fingerLocation;
    if (!useFingerLocation) {
      loc=tileBox.getCenterLatLon();
    }
    if (loc != null) {
      List<MapMarker> sortedMapMarkers=markersHelper.getSortedMapMarkers();
      int i=0;
      for (      MapMarker marker : sortedMapMarkers) {
        if (!isLocationVisible(tileBox,marker) && !isInMotion(marker)) {
          canvas.save();
          net.osmand.Location.distanceBetween(loc.getLatitude(),loc.getLongitude(),marker.getLatitude(),marker.getLongitude(),calculations);
          float bearing=calculations[1] - 90;
          float radiusBearing=DIST_TO_SHOW * tileBox.getDensity();
          final QuadPoint cp=tileBox.getCenterPixelPoint();
          canvas.rotate(bearing,cp.x,cp.y);
          canvas.translate(-24 * tileBox.getDensity() + radiusBearing,-22 * tileBox.getDensity());
          canvas.drawBitmap(arrowToDestination,cp.x,cp.y,getMarkerDestPaint(marker.colorIndex));
          canvas.restore();
        }
        i++;
        if (i > 1) {
          break;
        }
      }
    }
  }
  if (contextMenuLayer.getMoveableObject() instanceof MapMarker) {
    MapMarker objectInMotion=(MapMarker)contextMenuLayer.getMoveableObject();
    Bitmap bitmap=getMapMarkerBitmap(objectInMotion.colorIndex);
    PointF pf=contextMenuLayer.getMoveableCenterPoint(tileBox);
    int marginX=bitmap.getWidth() / 6;
    int marginY=bitmap.getHeight();
    float locationX=pf.x;
    float locationY=pf.y;
    canvas.rotate(-tileBox.getRotate(),locationX,locationY);
    canvas.drawBitmap(bitmap,locationX - marginX,locationY - marginY,bitmapPaint);
  }
}
