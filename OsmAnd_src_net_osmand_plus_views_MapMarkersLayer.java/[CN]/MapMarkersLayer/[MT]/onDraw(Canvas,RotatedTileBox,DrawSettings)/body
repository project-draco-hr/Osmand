{
  widgetsFactory.updateInfo(useFingerLocation ? fingerLocation : null,tb.getZoom());
  if (tb.getZoom() < 3 || !map.getMyApplication().getSettings().USE_MAP_MARKERS.get()) {
    return;
  }
  List<MapMarker> hiddenMarkers=new ArrayList<>();
  MapMarkersHelper markersHelper=map.getMyApplication().getMapMarkersHelper();
  List<MapMarker> activeMapMarkers=markersHelper.getActiveMapMarkers();
  for (int i=0; i < activeMapMarkers.size(); i++) {
    MapMarker marker=activeMapMarkers.get(i);
    if (isLocationVisible(tb,marker)) {
      Bitmap bmp=getMapMarkerBitmap(marker.colorIndex);
      int marginX=bmp.getWidth() / 6;
      int marginY=bmp.getHeight();
      int locationX=tb.getPixXFromLonNoRot(marker.getLongitude());
      int locationY=tb.getPixYFromLatNoRot(marker.getLatitude());
      canvas.rotate(-tb.getRotate(),locationX,locationY);
      canvas.drawBitmap(bmp,locationX - marginX,locationY - marginY,bitmapPaint);
      canvas.rotate(tb.getRotate(),locationX,locationY);
    }
 else     if (i < 2) {
      hiddenMarkers.add(marker);
    }
  }
  boolean show=useFingerLocation && map.getMyApplication().getSettings().SHOW_DESTINATION_ARROW.get();
  if (show && fingerLocation != null) {
    for (    MapMarker marker : hiddenMarkers) {
      canvas.save();
      net.osmand.Location.distanceBetween(fingerLocation.getLatitude(),fingerLocation.getLongitude(),marker.getLatitude(),marker.getLongitude(),calculations);
      float bearing=calculations[1] - 90;
      float radiusBearing=DIST_TO_SHOW * tb.getDensity();
      final QuadPoint cp=tb.getCenterPixelPoint();
      canvas.rotate(bearing,cp.x,cp.y);
      canvas.translate(-24 * tb.getDensity() + radiusBearing,-22 * tb.getDensity());
      canvas.drawBitmap(arrowToDestination,cp.x,cp.y,getMarkerDestPaint(marker.colorIndex));
      canvas.restore();
    }
  }
}
