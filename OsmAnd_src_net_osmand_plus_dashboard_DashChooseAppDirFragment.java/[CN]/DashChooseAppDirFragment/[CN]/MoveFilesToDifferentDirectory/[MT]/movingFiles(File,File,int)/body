{
  if (depth <= 2) {
    progress.startTask(ctx.getString(R.string.copying_osmand_one_file_descr,t.getName()),-1);
  }
  if (f.isDirectory()) {
    t.mkdirs();
    File[] lf=f.listFiles();
    if (lf != null) {
      for (int i=0; i < lf.length; i++) {
        if (lf[i] != null) {
          movingFiles(lf[i],new File(t,lf[i].getName()),depth + 1);
        }
      }
    }
    f.delete();
  }
 else   if (f.isFile()) {
    if (t.exists()) {
      Algorithms.removeAllFiles(t);
    }
    boolean rnm=false;
    try {
      rnm=f.renameTo(t);
    }
 catch (    RuntimeException e) {
    }
    if (!rnm) {
      FileInputStream fin=new FileInputStream(f);
      FileOutputStream fout=new FileOutputStream(t);
      try {
        progress.startTask(ctx.getString(R.string.copying_osmand_one_file_descr,t.getName()),(int)(f.length() / 1024));
        Algorithms.streamCopy(fin,fout,progress,1024);
      }
  finally {
        fin.close();
        fout.close();
      }
      f.delete();
    }
  }
  if (depth <= 2) {
    progress.finishTask();
  }
}
