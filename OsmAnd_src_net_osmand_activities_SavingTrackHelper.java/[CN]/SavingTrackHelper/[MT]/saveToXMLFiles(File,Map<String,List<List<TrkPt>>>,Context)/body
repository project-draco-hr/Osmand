{
  SimpleDateFormat format=new SimpleDateFormat(GPX_TIME_FORMAT);
  try {
    for (    String f : data.keySet()) {
      File fout=new File(dir,f + ".gpx");
      int ind=1;
      while (fout.exists()) {
        fout=new File(dir,f + "_" + (++ind)+ ".gpx");
      }
      FileOutputStream output=new FileOutputStream(fout);
      XmlSerializer serializer=Xml.newSerializer();
      serializer.setOutput(output,"UTF-8");
      serializer.setFeature("http://xmlpull.org/v1/doc/features.html#indent-output",true);
      serializer.startDocument("UTF-8",true);
      serializer.startTag(null,"gpx");
      serializer.attribute(null,"version","1.1");
      serializer.attribute(null,"creator",Version.APP_NAME_VERSION);
      serializer.attribute("xmlns","xsi","http://www.w3.org/2001/XMLSchema-instance");
      serializer.attribute("xsi","schemaLocation","http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd");
      serializer.attribute(null,"xmlns","http://www.topografix.com/GPX/1/1");
      serializer.startTag(null,"trk");
      for (      List<TrkPt> l : data.get(f)) {
        serializer.startTag(null,"trkseg");
        for (        TrkPt p : l) {
          serializer.startTag(null,"trkpt");
          serializer.attribute(null,"lat",p.lat + "");
          serializer.attribute(null,"lon",p.lon + "");
          serializer.startTag(null,"time");
          serializer.text(format.format(new Date(p.time)));
          serializer.endTag(null,"time");
          serializer.startTag(null,"ele");
          serializer.text(p.ele + "");
          serializer.endTag(null,"ele");
          if (p.speed > 0) {
            serializer.startTag(null,"speed");
            serializer.text(p.speed + "");
            serializer.endTag(null,"speed");
          }
          serializer.endTag(null,"trkpt");
        }
        serializer.endTag(null,"trkseg");
      }
      serializer.endTag(null,"trk");
      serializer.endTag(null,"gpx");
      serializer.flush();
      serializer.endDocument();
    }
    return null;
  }
 catch (  RuntimeException e) {
    log.error("Error saving gpx",e);
    return ctx.getString(R.string.error_occurred_saving_gpx);
  }
catch (  IOException e) {
    log.error("Error saving gpx",e);
    return ctx.getString(R.string.error_occurred_saving_gpx);
  }
}
