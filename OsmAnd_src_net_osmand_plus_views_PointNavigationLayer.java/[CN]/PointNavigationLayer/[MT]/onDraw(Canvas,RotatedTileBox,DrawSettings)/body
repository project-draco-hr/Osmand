{
  if (tb.getZoom() < 3) {
    return;
  }
  TargetPointsHelper targetPoints=map.getMyApplication().getTargetPointsHelper();
  TargetPoint pointToStart=targetPoints.getPointToStart();
  if (pointToStart != null) {
    if (isLocationVisible(tb,pointToStart)) {
      int marginX=mStartPoint.getWidth() / 6;
      int marginY=mStartPoint.getHeight();
      float locationX=getPointX(tb,pointToStart);
      float locationY=getPointY(tb,pointToStart);
      canvas.rotate(-tb.getRotate(),locationX,locationY);
      canvas.drawBitmap(mStartPoint,locationX - marginX,locationY - marginY,mBitmapPaint);
      canvas.rotate(tb.getRotate(),locationX,locationY);
    }
  }
  int index=0;
  for (  TargetPoint ip : targetPoints.getIntermediatePoints()) {
    index++;
    if (isLocationVisible(tb,ip)) {
      int marginX=mIntermediatePoint.getWidth() / 6;
      int marginY=mIntermediatePoint.getHeight();
      float locationX=getPointX(tb,ip);
      float locationY=getPointY(tb,ip);
      canvas.rotate(-tb.getRotate(),locationX,locationY);
      canvas.drawBitmap(mIntermediatePoint,locationX - marginX,locationY - marginY,mBitmapPaint);
      marginX=mIntermediatePoint.getWidth() / 3;
      canvas.drawText(index + "",locationX + marginX,locationY - 3 * marginY / 5,mTextPaint);
      canvas.rotate(tb.getRotate(),locationX,locationY);
    }
  }
  TargetPoint pointToNavigate=targetPoints.getPointToNavigate();
  if (isLocationVisible(tb,pointToNavigate)) {
    int marginX=mTargetPoint.getWidth() / 6;
    int marginY=mTargetPoint.getHeight();
    float locationX=getPointX(tb,pointToNavigate);
    float locationY=getPointY(tb,pointToNavigate);
    canvas.rotate(-tb.getRotate(),locationX,locationY);
    canvas.drawBitmap(mTargetPoint,locationX - marginX,locationY - marginY,mBitmapPaint);
    canvas.rotate(tb.getRotate(),locationX,locationY);
  }
  Iterator<TargetPoint> it=targetPoints.getIntermediatePoints().iterator();
  if (it.hasNext()) {
    pointToNavigate=it.next();
  }
  if (pointToNavigate != null && !isLocationVisible(tb,pointToNavigate)) {
    boolean show=!mView.getApplication().getRoutingHelper().isRouteCalculated();
    if (mView.getSettings().SHOW_DESTINATION_ARROW.isSet()) {
      show=mView.getSettings().SHOW_DESTINATION_ARROW.get();
    }
    if (show) {
      net.osmand.Location.distanceBetween(mView.getLatitude(),mView.getLongitude(),pointToNavigate.getLatitude(),pointToNavigate.getLongitude(),mCalculations);
      float bearing=mCalculations[1] - 90;
      float radiusBearing=DIST_TO_SHOW * tb.getDensity();
      final QuadPoint cp=tb.getCenterPixelPoint();
      canvas.rotate(bearing,cp.x,cp.y);
      canvas.translate(-24 * tb.getDensity() + radiusBearing,-22 * tb.getDensity());
      canvas.drawBitmap(mArrowToDestination,cp.x,cp.y,mBitmapPaint);
    }
  }
}
