{
  if (tb.getZoom() < 3) {
    return;
  }
  int index=0;
  TargetPointsHelper targetPoints=map.getMyApplication().getTargetPointsHelper();
  for (  TargetPoint ip : targetPoints.getIntermediatePoints()) {
    index++;
    if (isLocationVisible(tb,ip)) {
      int marginX=intermediatePoint.getWidth() / 3;
      int marginY=intermediatePoint.getHeight();
      int locationX=tb.getPixXFromLonNoRot(ip.getLongitude());
      int locationY=tb.getPixYFromLatNoRot(ip.getLatitude());
      canvas.rotate(-tb.getRotate(),locationX,locationY);
      canvas.drawBitmap(intermediatePoint,locationX - marginX,locationY - marginY,bitmapPaint);
      canvas.drawText(index + "",locationX + marginX,locationY - 2 * marginY / 3,textPaint);
      canvas.rotate(tb.getRotate(),locationX,locationY);
    }
  }
  TargetPoint pointToNavigate=targetPoints.getPointToNavigate();
  if (isLocationVisible(tb,pointToNavigate)) {
    int marginX=targetPoint.getWidth() / 3;
    int marginY=targetPoint.getHeight();
    int locationX=tb.getPixXFromLonNoRot(pointToNavigate.getLongitude());
    int locationY=tb.getPixYFromLatNoRot(pointToNavigate.getLatitude());
    canvas.rotate(-tb.getRotate(),locationX,locationY);
    canvas.drawBitmap(targetPoint,locationX - marginX,locationY - marginY,bitmapPaint);
  }
 else   if (pointToNavigate != null) {
    boolean show=!view.getApplication().getRoutingHelper().isRouteCalculated();
    if (view.getSettings().SHOW_DESTINATION_ARROW.isSet()) {
      show=view.getSettings().SHOW_DESTINATION_ARROW.get();
    }
    if (show) {
      net.osmand.Location.distanceBetween(view.getLatitude(),view.getLongitude(),pointToNavigate.getLatitude(),pointToNavigate.getLongitude(),calculations);
      float bearing=calculations[1] - 90;
      float radiusBearing=DIST_TO_SHOW * tb.getDensity();
      final QuadPoint cp=tb.getCenterPixelPoint();
      canvas.rotate(bearing,cp.x,cp.y);
      canvas.translate(-24 * tb.getDensity() + radiusBearing,-22 * tb.getDensity());
      canvas.drawBitmap(arrowToDestination,cp.x,cp.y,bitmapPaint);
    }
  }
}
