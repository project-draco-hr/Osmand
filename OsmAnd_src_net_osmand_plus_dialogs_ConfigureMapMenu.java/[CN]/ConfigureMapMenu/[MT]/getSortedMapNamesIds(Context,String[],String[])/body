{
  final Map<String,String> mp=new HashMap<>();
  for (int i=0; i < ids.length; i++) {
    mp.put(ids[i],values[i]);
  }
  ArrayList<String> lst=new ArrayList<>(mp.keySet());
  Collections.sort(lst,new Comparator<String>(){
    @Override public int compare(    String lhs,    String rhs){
      int i1=Algorithms.isEmpty(lhs) ? 0 : (lhs.equals("en") ? 1 : 2);
      int i2=Algorithms.isEmpty(rhs) ? 0 : (rhs.equals("en") ? 1 : 2);
      if (i1 != i2) {
        return i1 < i2 ? -1 : 1;
      }
      i1=lhs.equals(getString(R.string.system_locale) + " (" + getString(R.string.system_locale_no_translate)+ ")") ? 0 : (lhs.equals(getString(R.string.lang_en)) ? 1 : 2);
      i1=rhs.equals(getString(R.string.system_locale) + " (" + getString(R.string.system_locale_no_translate)+ ")") ? 0 : (rhs.equals(getString(R.string.lang_en)) ? 1 : 2);
      if (i1 != i2) {
        return i1 < i2 ? -1 : 1;
      }
      return mp.get(lhs).compareTo(mp.get(rhs));
    }
  }
);
  return lst.toArray(new String[lst.size()]);
}
