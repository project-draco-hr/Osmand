{
  final List<RenderingRuleProperty> ps=new ArrayList<>();
  final List<OsmandSettings.CommonPreference<Boolean>> prefs=new ArrayList<>();
  Iterator<RenderingRuleProperty> it=customRules.iterator();
  while (it.hasNext()) {
    RenderingRuleProperty p=it.next();
    if (category.equals(p.getCategory()) && p.isBoolean()) {
      ps.add(p);
      final OsmandSettings.CommonPreference<Boolean> pref=activity.getMyApplication().getSettings().getCustomRenderBooleanProperty(p.getAttrName());
      prefs.add(pref);
      it.remove();
    }
  }
  if (prefs.size() > 0) {
    final ItemClickListener clickListener=new ContextMenuAdapter.ItemClickListener(){
      @Override public boolean onContextMenuClick(      ArrayAdapter<ContextMenuItem> a,      int itemId,      int pos,      boolean isChecked){
        if (!isChecked && !useDescription) {
          for (int i=0; i < prefs.size(); i++) {
            prefs.get(i).set(false);
          }
          a.notifyDataSetInvalidated();
          refreshMapComplete(activity);
          activity.getMapLayers().updateLayers(activity.getMapView());
        }
 else {
          showPreferencesDialog(adapter,a,pos,activity,activity.getString(strId),ps,prefs,useDescription);
        }
        return false;
      }
    }
;
    ContextMenuItem.ItemBuilder builder=new ContextMenuItem.ItemBuilder().setTitleId(strId,activity).setIcon(icon).setListener(clickListener);
    if (useDescription) {
      final String descr=getDescription(prefs);
      builder.setDescription(descr);
      builder.setLayout(R.layout.list_item_single_line_descrition_narrow);
    }
 else {
      boolean selected=false;
      builder.setListener(new OnRowItemClick(){
        @Override public boolean onContextMenuClick(        ArrayAdapter<ContextMenuItem> a,        int itemId,        int pos,        boolean isChecked){
          return clickListener.onContextMenuClick(a,itemId,pos,isChecked);
        }
        @Override public boolean onRowItemClick(        ArrayAdapter<ContextMenuItem> a,        View view,        int itemId,        int pos){
          showPreferencesDialog(adapter,a,pos,activity,activity.getString(strId),ps,prefs,useDescription);
          return false;
        }
      }
);
      builder.setSecondaryIcon(R.drawable.ic_action_additional_option);
      for (      OsmandSettings.CommonPreference<Boolean> p : prefs) {
        if (p.get()) {
          selected=true;
          break;
        }
      }
      builder.setSelected(selected);
    }
    return builder.createItem();
  }
  return null;
}
