{
  am=app.getSettings().getApplicationMode();
  GeneralRouterProfile p;
  if (am.isDerivedRoutingFrom(ApplicationMode.BICYCLE)) {
    p=GeneralRouterProfile.BICYCLE;
  }
 else   if (am.isDerivedRoutingFrom(ApplicationMode.PEDESTRIAN)) {
    p=GeneralRouterProfile.PEDESTRIAN;
  }
 else   if (am.isDerivedRoutingFrom(ApplicationMode.CAR)) {
    p=GeneralRouterProfile.CAR;
  }
 else {
    p=GeneralRouterProfile.PEDESTRIAN;
  }
  RoutingConfiguration cfg=app.getDefaultRoutingConfig().build(p.name().toLowerCase(),10,new HashMap<String,String>());
  ctx=new RoutePlannerFrontEnd(false).buildRoutingContext(cfg,null,app.getResourceManager().getRoutingMapFiles());
  RoutingConfiguration defCfg=app.getDefaultRoutingConfig().build(GeneralRouterProfile.CAR.name().toLowerCase(),10,new HashMap<String,String>());
  BinaryMapIndexReader[] rs=new BinaryMapIndexReader[app.getResourceManager().getAddressRepositories().size()];
  int i=0;
  for (  RegionAddressRepository rep : app.getResourceManager().getAddressRepositories()) {
    rs[i++]=rep.getFile();
  }
  defCtx=new RoutePlannerFrontEnd(false).buildRoutingContext(defCfg,null,rs);
}
