{
  am=app.getSettings().getApplicationMode();
  String p;
  if (am.isDerivedRoutingFrom(ApplicationMode.BICYCLE)) {
    p=GeneralRouterProfile.BICYCLE.name().toLowerCase();
  }
 else   if (am.isDerivedRoutingFrom(ApplicationMode.PEDESTRIAN)) {
    p=GeneralRouterProfile.PEDESTRIAN.name().toLowerCase();
  }
 else   if (am.isDerivedRoutingFrom(ApplicationMode.CAR)) {
    p=GeneralRouterProfile.CAR.name().toLowerCase();
  }
 else {
    p="geocoding";
  }
  BinaryMapIndexReader[] rs=new BinaryMapIndexReader[app.getResourceManager().getAddressRepositories().size()];
  if (rs.length > 0) {
    int i=0;
    for (    RegionAddressRepository rep : app.getResourceManager().getAddressRepositories()) {
      rs[i++]=rep.getFile();
    }
    RoutingConfiguration cfg=app.getDefaultRoutingConfig().build(p,10,new HashMap<String,String>());
    ctx=new RoutePlannerFrontEnd(false).buildRoutingContext(cfg,null,rs);
    RoutingConfiguration defCfg=app.getDefaultRoutingConfig().build("geocoding",10,new HashMap<String,String>());
    defCtx=new RoutePlannerFrontEnd(false).buildRoutingContext(defCfg,null,rs);
  }
 else {
    ctx=null;
    defCtx=null;
  }
}
