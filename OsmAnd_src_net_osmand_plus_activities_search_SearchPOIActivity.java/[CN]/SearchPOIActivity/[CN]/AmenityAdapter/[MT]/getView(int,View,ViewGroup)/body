{
  View row=convertView;
  if (row == null) {
    LayoutInflater inflater=getLayoutInflater();
    row=inflater.inflate(R.layout.searchpoi_list,parent,false);
  }
  float[] mes=null;
  TextView label=(TextView)row.findViewById(R.id.poi_label);
  TextView distanceLabel=(TextView)row.findViewById(R.id.poidistance_label);
  ImageView icon=(ImageView)row.findViewById(R.id.poi_icon);
  Amenity amenity=getItem(position);
  Location loc=location;
  if (loc != null) {
    mes=new float[2];
    LatLon l=amenity.getLocation();
    Location.distanceBetween(l.getLatitude(),l.getLongitude(),loc.getLatitude(),loc.getLongitude(),mes);
  }
  String str=OsmAndFormatter.getPoiStringWithoutType(amenity,settings.usingEnglishNames());
  label.setText(str);
  int opened=-1;
  if (amenity.getOpeningHours() != null) {
    OpeningHours rs=OpeningHoursParser.parseOpenedHours(amenity.getOpeningHours());
    if (rs != null) {
      Calendar inst=Calendar.getInstance();
      inst.setTimeInMillis(System.currentTimeMillis());
      boolean work=false;
      work=rs.isOpenedForTime(inst);
      if (work) {
        opened=0;
      }
 else {
        opened=1;
      }
    }
  }
  if (loc != null) {
    DirectionDrawable draw=new DirectionDrawable();
    Float h=heading;
    float a=h != null ? h : 0;
    draw.setAngle(mes[1] - a + 180);
    draw.setOpenedColor(opened);
    icon.setImageDrawable(draw);
  }
 else {
    if (opened == -1) {
      icon.setImageResource(R.drawable.poi);
    }
 else     if (opened == 0) {
      icon.setImageResource(R.drawable.opened_poi);
    }
 else {
      icon.setImageResource(R.drawable.closed_poi);
    }
  }
  if (mes == null) {
    distanceLabel.setText("");
  }
 else {
    distanceLabel.setText(" " + OsmAndFormatter.getFormattedDistance((int)mes[0],SearchPOIActivity.this));
  }
  return (row);
}
