{
  View row=convertView;
  if (row == null) {
    LayoutInflater inflater=getLayoutInflater();
    row=inflater.inflate(R.layout.searchpoi_list,parent,false);
  }
  float[] mes=null;
  TextView label=(TextView)row.findViewById(R.id.poi_label);
  ImageView direction=(ImageView)row.findViewById(R.id.poi_direction);
  ImageView icon=(ImageView)row.findViewById(R.id.poi_icon);
  Amenity amenity=getItem(position);
  net.osmand.Location loc=location;
  if (loc != null) {
    mes=new float[2];
    LatLon l=amenity.getLocation();
    net.osmand.Location.distanceBetween(l.getLatitude(),l.getLongitude(),loc.getLatitude(),loc.getLongitude(),mes);
  }
  int opened=-1;
  if (amenity.getOpeningHours() != null) {
    OpeningHours rs=OpeningHoursParser.parseOpenedHours(amenity.getOpeningHours());
    if (rs != null) {
      Calendar inst=Calendar.getInstance();
      inst.setTimeInMillis(System.currentTimeMillis());
      boolean work=false;
      work=rs.isOpenedForTime(inst);
      if (work) {
        opened=0;
      }
 else {
        opened=1;
      }
    }
  }
  if (loc != null) {
    DirectionDrawable draw=new DirectionDrawable(SearchPOIActivity.this,width,height,false);
    Float h=heading;
    float a=h != null ? h : 0;
    draw.setAngle(mes[1] - a + 180);
    draw.setOpenedColor(opened);
    direction.setImageDrawable(draw);
  }
 else {
    if (opened == -1) {
      direction.setImageResource(R.drawable.poi);
    }
 else     if (opened == 0) {
      direction.setImageResource(R.drawable.opened_poi);
    }
 else {
      direction.setImageResource(R.drawable.closed_poi);
    }
  }
  StringBuilder tag=new StringBuilder();
  StringBuilder value=new StringBuilder();
  MapRenderingTypes.getDefault().getAmenityTagValue(amenity.getType(),amenity.getSubType(),tag,value);
  if (RenderingIcons.containsBigIcon(tag + "_" + value)) {
    icon.setImageResource(RenderingIcons.getBigIconResourceId(tag + "_" + value));
  }
 else   if (RenderingIcons.containsBigIcon(value.toString())) {
    icon.setImageResource(RenderingIcons.getBigIconResourceId(value.toString()));
  }
 else {
    icon.setImageDrawable(null);
  }
  String distance="  ";
  if (mes != null) {
    distance=" " + OsmAndFormatter.getFormattedDistance((int)mes[0],getMyApplication()) + "  ";
  }
  String poiType=OsmAndFormatter.getPoiStringWithoutType(amenity,settings.usingEnglishNames());
  label.setText(distance + poiType,TextView.BufferType.SPANNABLE);
  ((Spannable)label.getText()).setSpan(new ForegroundColorSpan(getResources().getColor(R.color.color_distance)),0,distance.length() - 1,0);
  return (row);
}
