{
  final Amenity amenity=((AmenityAdapter)getListAdapter()).getItem(position);
  ContextMenuAdapter adapter=new ContextMenuAdapter(v.getContext());
  adapter.setAnchor(v);
  String poiSimpleFormat=OsmAndFormatter.getPoiSimpleFormat(amenity,getMyApplication(),settings.usingEnglishNames());
  String name=poiSimpleFormat;
  int z=Math.max(16,settings.getLastKnownMapZoom());
  DirectionsDialogs.createDirectionsActions(adapter,amenity.getLocation(),amenity,name,z,this,true);
  final String d=OsmAndFormatter.getAmenityDescriptionContent(getMyApplication(),amenity,false);
  if (d.toString().trim().length() > 0) {
    Item poiDescr=adapter.item(R.string.poi_context_menu_showdescription).icons(R.drawable.ic_action_note_dark,R.drawable.ic_action_note_light);
    poiDescr.listen(new OnContextMenuClick(){
      @Override public boolean onContextMenuClick(      ArrayAdapter<?> adapter,      int itemId,      int pos,      boolean isChecked){
        SpannableString spannable=new SpannableString(d);
        Linkify.addLinks(spannable,Linkify.ALL);
        Builder bs=new AlertDialog.Builder(v.getContext());
        bs.setTitle(OsmAndFormatter.getPoiSimpleFormat(amenity,getMyApplication(),settings.usingEnglishNames()));
        bs.setMessage(spannable);
        AlertDialog dialog=bs.show();
        TextView textView=(TextView)dialog.findViewById(android.R.id.message);
        textView.setMovementMethod(LinkMovementMethod.getInstance());
        textView.setLinksClickable(true);
        return true;
      }
    }
).reg();
  }
  if (((OsmandApplication)getApplication()).accessibilityEnabled()) {
    Item showDetails=adapter.item(R.string.show_details);
    showDetails.listen(new OnContextMenuClick(){
      @Override public boolean onContextMenuClick(      ArrayAdapter<?> adapter,      int itemId,      int pos,      boolean isChecked){
        showPOIDetails(amenity,settings.usingEnglishNames());
        return true;
      }
    }
).reg();
  }
  MapActivityActions.showObjectContextMenu(adapter,this,null);
}
