{
  super.onCreate(icicle);
  setContentView(R.layout.searchpoi);
  getSupportActionBar().setTitle(R.string.searchpoi_activity);
  getSupportActionBar().setIcon(R.drawable.tab_search_poi_icon);
  setSupportProgressBarIndeterminateVisibility(false);
  app=(OsmandApplication)getApplication();
  uiHandler=new Handler();
  searchFilter=(EditText)findViewById(R.id.SearchFilter);
  searchFilterLayout=findViewById(R.id.SearchFilterLayout);
  settings=((OsmandApplication)getApplication()).getSettings();
  searchFilter.addTextChangedListener(new TextWatcher(){
    @Override public void afterTextChanged(    Editable s){
      if (!isNameFinderFilter() && !isSearchByNameFilter()) {
        amenityAdapter.getFilter().filter(s);
      }
 else {
        if (searchPOILevel != null) {
          searchPOILevel.setEnabled(true);
          searchPOILevel.setTitle(R.string.search_button);
        }
        searchFooterButton.setEnabled(true);
        searchFooterButton.setText(R.string.search_button);
      }
    }
    @Override public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){
    }
    @Override public void onTextChanged(    CharSequence s,    int start,    int before,    int count){
    }
  }
);
  searchFilter.setOnFocusChangeListener(new View.OnFocusChangeListener(){
    @Override public void onFocusChange(    View v,    boolean hasFocus){
      if (hasFocus) {
        getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);
      }
    }
  }
);
  addFooterView();
  amenityAdapter=new AmenityAdapter(new ArrayList<Amenity>());
  setListAdapter(amenityAdapter);
}
