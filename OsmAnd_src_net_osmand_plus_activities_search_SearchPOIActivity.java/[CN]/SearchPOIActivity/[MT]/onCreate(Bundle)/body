{
  super.onCreate(icicle);
  setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
  setContentView(R.layout.searchpoi);
  uiHandler=new Handler();
  searchPOILevel=(Button)findViewById(R.id.SearchPOILevelButton);
  searchArea=(TextView)findViewById(R.id.SearchAreaText);
  searchFilter=(EditText)findViewById(R.id.SearchFilter);
  searchFilterLayout=findViewById(R.id.SearchFilterLayout);
  showOnMap=(ImageButton)findViewById(R.id.ShowOnMap);
  showFilter=(ImageButton)findViewById(R.id.ShowFilter);
  settings=OsmandSettings.getOsmandSettings(this);
  searchPOILevel.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      String query=searchFilter.getText().toString();
      if (query.length() < 2 && (isNameFinderFilter() || isSearchByNameFilter())) {
        Toast.makeText(SearchPOIActivity.this,R.string.poi_namefinder_query_empty,Toast.LENGTH_LONG).show();
        return;
      }
      if (isNameFinderFilter() && !Algoritms.objectEquals(((NameFinderPoiFilter)filter).getQuery(),query)) {
        filter.clearPreviousZoom();
        ((NameFinderPoiFilter)filter).setQuery(query);
        runNewSearchQuery(SearchAmenityRequest.buildRequest(location,SearchAmenityRequest.NEW_SEARCH_INIT));
      }
 else       if (isSearchByNameFilter() && !Algoritms.objectEquals(((SearchByNameFilter)filter).getQuery(),query)) {
        showFilter.setVisibility(View.INVISIBLE);
        filter.clearPreviousZoom();
        showPoiCategoriesByNameFilter(query,location);
        ((SearchByNameFilter)filter).setQuery(query);
        runNewSearchQuery(SearchAmenityRequest.buildRequest(location,SearchAmenityRequest.NEW_SEARCH_INIT));
      }
 else {
        runNewSearchQuery(SearchAmenityRequest.buildRequest(location,SearchAmenityRequest.SEARCH_FURTHER));
      }
    }
  }
);
  showFilter.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      if (isSearchByNameFilter()) {
        Intent newIntent=new Intent(SearchPOIActivity.this,EditPOIFilterActivity.class);
        newIntent.putExtra(EditPOIFilterActivity.AMENITY_FILTER,PoiFilter.CUSTOM_FILTER_ID);
        if (location != null) {
          newIntent.putExtra(EditPOIFilterActivity.SEARCH_LAT,location.getLatitude());
          newIntent.putExtra(EditPOIFilterActivity.SEARCH_LON,location.getLongitude());
        }
        startActivity(newIntent);
      }
 else {
        if (searchFilterLayout.getVisibility() == View.GONE) {
          searchFilterLayout.setVisibility(View.VISIBLE);
        }
 else {
          searchFilter.setText("");
          searchFilterLayout.setVisibility(View.GONE);
        }
      }
    }
  }
);
  searchFilter.addTextChangedListener(new TextWatcher(){
    @Override public void afterTextChanged(    Editable s){
      if (!isNameFinderFilter() && !isSearchByNameFilter()) {
        amenityAdapter.getFilter().filter(s);
      }
 else {
        searchPOILevel.setEnabled(true);
        searchPOILevel.setText(R.string.search_button);
      }
    }
    @Override public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){
    }
    @Override public void onTextChanged(    CharSequence s,    int start,    int before,    int count){
    }
  }
);
  showOnMap.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      settings.setPoiFilterForMap(filter.getFilterId());
      settings.SHOW_POI_OVER_MAP.set(true);
      if (location != null) {
        settings.setMapLocationToShow(location.getLatitude(),location.getLongitude(),15);
      }
      MapActivity.launchMapActivityMoveToTop(SearchPOIActivity.this);
    }
  }
);
  amenityAdapter=new AmenityAdapter(new ArrayList<Amenity>());
  setListAdapter(amenityAdapter);
  ListView lv=getListView();
  lv.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener(){
    @Override public boolean onItemLongClick(    AdapterView<?> av,    View v,    int pos,    long id){
      final Amenity amenity=((AmenityAdapter)getListAdapter()).getItem(pos);
      onLongClick(amenity);
      return true;
    }
  }
);
}
