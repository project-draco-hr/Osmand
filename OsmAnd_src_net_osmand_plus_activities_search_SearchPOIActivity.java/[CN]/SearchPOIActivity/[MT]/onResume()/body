{
  super.onResume();
  Bundle bundle=this.getIntent().getExtras();
  if (bundle.containsKey(SEARCH_LAT) && bundle.containsKey(SEARCH_LON)) {
    location=new net.osmand.Location("internal");
    location.setLatitude(bundle.getDouble(SEARCH_LAT));
    location.setLongitude(bundle.getDouble(SEARCH_LON));
    searchNearBy=false;
  }
 else {
    location=null;
    searchNearBy=true;
  }
  String filterId=bundle.getString(AMENITY_FILTER);
  PoiFilter filter=app.getPoiFilters().getFilterById(filterId);
  if (filter != this.filter) {
    this.filter=filter;
    if (filter != null) {
      getSupportActionBar().setSubtitle(filter.getName());
      filter.clearPreviousZoom();
    }
 else {
      amenityAdapter.setNewModel(Collections.<Amenity>emptyList(),"");
      searchPOILevel.setText(R.string.search_POI_level_btn);
      searchPOILevel.setEnabled(false);
    }
    clearSearchQuery();
  }
  if (filter != null) {
    filter.clearNameFilter();
  }
  if (isNameFinderFilter()) {
    showFilter.setVisibility(View.GONE);
    searchFilterLayout.setVisibility(View.VISIBLE);
  }
 else   if (isSearchByNameFilter()) {
    showFilter.setVisibility(View.INVISIBLE);
    searchFilterLayout.setVisibility(View.VISIBLE);
  }
 else {
    showFilter.setVisibility(View.VISIBLE);
    showOnMap.setEnabled(filter != null);
  }
  showOnMap.setVisibility(View.VISIBLE);
  if (filter != null) {
    searchArea.setText(filter.getSearchArea());
    updateSearchPoiTextButton();
    if (searchNearBy) {
      app.getLocationProvider().addCompassListener(this);
      app.getLocationProvider().addLocationListener(this);
      location=app.getLocationProvider().getLastKnownLocation();
      app.getLocationProvider().resumeAllUpdates();
    }
    updateLocation(location);
  }
  app.getLocationProvider().registerOrUnregisterCompassListener(true);
}
