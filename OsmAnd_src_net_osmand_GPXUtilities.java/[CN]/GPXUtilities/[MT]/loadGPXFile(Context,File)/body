{
  GPXFileResult res=new GPXFileResult();
  SimpleDateFormat format=new SimpleDateFormat(GPX_TIME_FORMAT);
  format.setTimeZone(TimeZone.getTimeZone("UTC"));
  try {
    res.cloudMadeFile=false;
    XmlPullParser parser=Xml.newPullParser();
    parser.setInput(new FileInputStream(f),"UTF-8");
    int tok;
    Location current=null;
    String currentName="";
    while ((tok=parser.next()) != XmlPullParser.END_DOCUMENT) {
      if (tok == XmlPullParser.START_TAG) {
        if (parser.getName().equals("copyright")) {
          res.cloudMadeFile|="cloudmade".equalsIgnoreCase(parser.getAttributeValue("","author"));
        }
 else         if (parser.getName().equals("trkseg")) {
          res.locations.add(new ArrayList<Location>());
        }
 else         if (parser.getName().equals("wpt") || parser.getName().equals("trkpt") || (!res.cloudMadeFile && parser.getName().equals("rtept"))) {
          try {
            currentName="";
            current=new Location("gpx_file");
            current.setLatitude(Double.parseDouble(parser.getAttributeValue("","lat")));
            current.setLongitude(Double.parseDouble(parser.getAttributeValue("","lon")));
          }
 catch (          NumberFormatException e) {
            current=null;
          }
        }
 else         if (current != null && parser.getName().equals("name")) {
          if (parser.next() == XmlPullParser.TEXT) {
            currentName=parser.getText();
          }
        }
 else         if (current != null && parser.getName().equals("time")) {
          if (parser.next() == XmlPullParser.TEXT) {
            try {
              current.setTime(format.parse(parser.getText()).getTime());
            }
 catch (            ParseException e) {
            }
          }
        }
 else         if (current != null && parser.getName().equals("hdop")) {
          if (parser.next() == XmlPullParser.TEXT) {
            try {
              current.setAccuracy(Float.parseFloat(parser.getText()));
            }
 catch (            NumberFormatException e) {
            }
          }
        }
 else         if (current != null && parser.getName().equals("ele")) {
          if (parser.next() == XmlPullParser.TEXT) {
            try {
              current.setAltitude(Double.parseDouble(parser.getText()));
            }
 catch (            NumberFormatException e) {
            }
          }
        }
 else         if (current != null && parser.getName().equals("speed")) {
          if (parser.next() == XmlPullParser.TEXT) {
            try {
              current.setSpeed(Float.parseFloat(parser.getText()));
            }
 catch (            NumberFormatException e) {
            }
          }
        }
      }
 else       if (tok == XmlPullParser.END_TAG) {
        if (parser.getName().equals("wpt") || parser.getName().equals("trkpt") || (!res.cloudMadeFile && parser.getName().equals("rtept"))) {
          if (current != null) {
            if (parser.getName().equals("wpt") && !res.cloudMadeFile) {
              res.wayPoints.add(convertLocationToWayPoint(current,currentName));
            }
 else {
              if (res.locations.isEmpty()) {
                res.locations.add(new ArrayList<Location>());
              }
              res.locations.get(res.locations.size() - 1).add(current);
            }
          }
        }
      }
    }
  }
 catch (  XmlPullParserException e) {
    log.error("Error reading gpx",e);
    res.error=ctx.getString(R.string.error_reading_gpx);
  }
catch (  IOException e) {
    log.error("Error reading gpx",e);
    res.error=ctx.getString(R.string.error_reading_gpx);
  }
  return res;
}
