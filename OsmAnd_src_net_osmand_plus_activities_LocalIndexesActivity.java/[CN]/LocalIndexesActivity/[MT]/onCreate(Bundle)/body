{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.local_index);
  descriptionLoader=new LoadLocalIndexDescriptionTask();
  listAdapter=new LocalIndexesAdapter();
  Object indexes=getLastNonConfigurationInstance();
  asyncLoader=new LoadLocalIndexTask();
  if (indexes instanceof List<?>) {
    asyncLoader.setResult((List<LocalIndexInfo>)indexes);
  }
 else {
    asyncLoader.execute(this);
  }
  findViewById(R.id.DownloadButton).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      startActivity(new Intent(LocalIndexesActivity.this,DownloadIndexActivity.class));
    }
  }
);
  getExpandableListView().setOnCreateContextMenuListener(new View.OnCreateContextMenuListener(){
    @Override public void onCreateContextMenu(    ContextMenu menu,    View v,    ContextMenuInfo menuInfo){
      long packedPos=((ExpandableListContextMenuInfo)menuInfo).packedPosition;
      int group=ExpandableListView.getPackedPositionGroup(packedPos);
      int child=ExpandableListView.getPackedPositionChild(packedPos);
      if (child >= 0 && group >= 0) {
        final LocalIndexInfo point=(LocalIndexInfo)listAdapter.getChild(group,child);
        if (point != null && point.getGpxFile() != null) {
          WptPt loc=point.getGpxFile().findPointToShow();
          if (loc != null) {
            OsmandSettings.getOsmandSettings(LocalIndexesActivity.this).setMapLocationToShow(loc.lat,loc.lon);
          }
          ((OsmandApplication)getApplication()).setGpxFileToDisplay(point.getGpxFile());
          MapActivity.launchMapActivityMoveToTop(LocalIndexesActivity.this);
        }
      }
    }
  }
);
  setListAdapter(listAdapter);
  updateDescriptionTextWithSize();
}
