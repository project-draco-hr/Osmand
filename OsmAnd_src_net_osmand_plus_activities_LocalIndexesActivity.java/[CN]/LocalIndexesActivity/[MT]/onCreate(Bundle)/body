{
  super.onCreate(savedInstanceState);
  CustomTitleBar titleBar=new CustomTitleBar(this,R.string.local_index_descr_title,R.drawable.tab_settings_screen_icon);
  setContentView(R.layout.local_index);
  titleBar.afterSetContentView();
  settings=OsmandSettings.getOsmandSettings(this);
  descriptionLoader=new LoadLocalIndexDescriptionTask();
  listAdapter=new LocalIndexesAdapter();
  findViewById(R.id.DownloadButton).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      asyncLoader.setResult(null);
      startActivity(new Intent(LocalIndexesActivity.this,DownloadIndexActivity.class));
    }
  }
);
  getExpandableListView().setOnCreateContextMenuListener(new View.OnCreateContextMenuListener(){
    @Override public void onCreateContextMenu(    ContextMenu menu,    View v,    ContextMenuInfo menuInfo){
      long packedPos=((ExpandableListContextMenuInfo)menuInfo).packedPosition;
      int group=ExpandableListView.getPackedPositionGroup(packedPos);
      int child=ExpandableListView.getPackedPositionChild(packedPos);
      if (child >= 0 && group >= 0) {
        final LocalIndexInfo point=(LocalIndexInfo)listAdapter.getChild(group,child);
        showContextMenu(point);
      }
    }
  }
);
  setListAdapter(listAdapter);
  updateDescriptionTextWithSize();
  if (asyncLoader == null || asyncLoader.getResult() == null) {
    Object indexes=getLastNonConfigurationInstance();
    asyncLoader=new LoadLocalIndexTask();
    if (indexes instanceof List<?>) {
      asyncLoader.setResult((List<LocalIndexInfo>)indexes);
    }
  }
}
