{
  String[] files=null;
  try {
    files=Options.load(args);
  }
 catch (  IOException e) {
    error(e.getMessage());
    System.exit(1);
  }
  J2ObjC compiler=new J2ObjC();
  int beginningErrorLevel=compiler.getCurrentErrorLevel();
  try {
    files=compiler.removeDeadCode(files);
  }
 catch (  IOException e) {
    error(e.getMessage());
  }
  if (compiler.getCurrentErrorLevel() > beginningErrorLevel) {
    return;
  }
  nFiles=0;
  for (int i=0; i < files.length; i++) {
    String file=files[i];
    try {
      if (file.endsWith(".java")) {
        printInfo("translating " + file);
        compiler.translate(file);
        nFiles++;
      }
 else       if (file.endsWith(".jar")) {
        translateSourceJar(compiler,file);
      }
    }
 catch (    IOException e) {
      error(e.getMessage());
    }
  }
  exit();
}
