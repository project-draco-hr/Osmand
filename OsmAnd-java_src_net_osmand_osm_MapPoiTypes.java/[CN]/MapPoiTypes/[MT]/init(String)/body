{
  InputStream is;
  long time=System.currentTimeMillis();
  List<PoiType> referenceTypes=new ArrayList<PoiType>();
  final Map<String,PoiType> allTypes=new LinkedHashMap<String,PoiType>();
  final Map<String,List<PoiType>> categoryPoiAdditionalMap=new LinkedHashMap<String,List<PoiType>>();
  final Map<AbstractPoiType,Set<String>> abstractTypeAdditionalCategories=new LinkedHashMap<AbstractPoiType,Set<String>>();
  final Map<String,AbstractPoiType> additionalCategoryOriginMap=new LinkedHashMap<String,AbstractPoiType>();
  if (resourceName != null) {
    this.resourceName=resourceName;
  }
  this.categories.clear();
  try {
    if (this.resourceName == null) {
      is=MapPoiTypes.class.getResourceAsStream("poi_types.xml");
    }
 else {
      is=new FileInputStream(this.resourceName);
    }
    time=System.currentTimeMillis();
    XmlPullParser parser=PlatformUtil.newXMLPullParser();
    int tok;
    parser.setInput(is,"UTF-8");
    PoiCategory lastCategory=null;
    Set<String> lastCategoryPoiAdditionalsCategories=new TreeSet<String>();
    PoiFilter lastFilter=null;
    Set<String> lastFilterPoiAdditionalsCategories=new TreeSet<String>();
    PoiType lastType=null;
    Set<String> lastTypePoiAdditionalsCategories=new TreeSet<String>();
    String lastPoiAdditionalCategory=null;
    while ((tok=parser.next()) != XmlPullParser.END_DOCUMENT) {
      if (tok == XmlPullParser.START_TAG) {
        String name=parser.getName();
        if (name.equals("poi_category")) {
          lastCategory=new PoiCategory(this,parser.getAttributeValue("","name"),categories.size());
          lastCategory.setTopVisible(Boolean.parseBoolean(parser.getAttributeValue("","top")));
          lastCategory.setNotEditableOsm("true".equals(parser.getAttributeValue("","no_edit")));
          lastCategory.setDefaultTag(parser.getAttributeValue("","default_tag"));
          if (!Algorithms.isEmpty(parser.getAttributeValue("","poi_additional_category"))) {
            Collections.addAll(lastCategoryPoiAdditionalsCategories,parser.getAttributeValue("","poi_additional_category").split(","));
          }
          if (!Algorithms.isEmpty(parser.getAttributeValue("","excluded_poi_additional_category"))) {
            lastCategory.addExcludedPoiAdditionalCategories(parser.getAttributeValue("","excluded_poi_additional_category").split(","));
            lastCategoryPoiAdditionalsCategories.removeAll(lastCategory.getExcludedPoiAdditionalCategories());
          }
          categories.add(lastCategory);
        }
 else         if (name.equals("poi_filter")) {
          PoiFilter tp=new PoiFilter(this,lastCategory,parser.getAttributeValue("","name"));
          tp.setTopVisible(Boolean.parseBoolean(parser.getAttributeValue("","top")));
          lastFilter=tp;
          lastFilterPoiAdditionalsCategories.addAll(lastCategoryPoiAdditionalsCategories);
          if (!Algorithms.isEmpty(parser.getAttributeValue("","poi_additional_category"))) {
            Collections.addAll(lastFilterPoiAdditionalsCategories,parser.getAttributeValue("","poi_additional_category").split(","));
          }
          if (!Algorithms.isEmpty(parser.getAttributeValue("","excluded_poi_additional_category"))) {
            lastFilter.addExcludedPoiAdditionalCategories(parser.getAttributeValue("","excluded_poi_additional_category").split(","));
            lastFilterPoiAdditionalsCategories.removeAll(lastFilter.getExcludedPoiAdditionalCategories());
          }
          lastCategory.addPoiType(tp);
        }
 else         if (name.equals("poi_reference")) {
          PoiType tp=new PoiType(this,lastCategory,lastFilter,parser.getAttributeValue("","name"));
          referenceTypes.add(tp);
          tp.setReferenceType(tp);
          if (lastFilter != null) {
            lastFilter.addPoiType(tp);
          }
          lastCategory.addPoiType(tp);
        }
 else         if (name.equals("poi_additional")) {
          if (lastCategory == null) {
            lastCategory=getOtherMapCategory();
          }
          PoiType baseType=parsePoiAdditional(parser,lastCategory,lastFilter,lastType,null,null,lastPoiAdditionalCategory);
          if ("true".equals(parser.getAttributeValue("","lang"))) {
            for (            String lng : MapRenderingTypes.langs) {
              parsePoiAdditional(parser,lastCategory,lastFilter,lastType,lng,baseType,lastPoiAdditionalCategory);
            }
            parsePoiAdditional(parser,lastCategory,lastFilter,lastType,"en",baseType,lastPoiAdditionalCategory);
          }
          if (lastPoiAdditionalCategory != null) {
            List<PoiType> categoryAdditionals=categoryPoiAdditionalMap.get(lastPoiAdditionalCategory);
            if (categoryAdditionals == null) {
              categoryAdditionals=new ArrayList<>();
              categoryPoiAdditionalMap.put(lastPoiAdditionalCategory,categoryAdditionals);
            }
            categoryAdditionals.add(baseType);
          }
        }
 else         if (name.equals("poi_additional_category")) {
          if (lastPoiAdditionalCategory == null) {
            lastPoiAdditionalCategory=parser.getAttributeValue("","name");
            String icon=parser.getAttributeValue("","icon");
            if (!Algorithms.isEmpty(icon)) {
              poiAdditionalCategoryIcons.put(lastPoiAdditionalCategory,icon);
            }
            if (lastType != null) {
              additionalCategoryOriginMap.put(lastPoiAdditionalCategory,lastType);
            }
 else             if (lastFilter != null) {
              additionalCategoryOriginMap.put(lastPoiAdditionalCategory,lastFilter);
            }
 else             if (lastCategory != null) {
              additionalCategoryOriginMap.put(lastPoiAdditionalCategory,lastCategory);
            }
          }
        }
 else         if (name.equals("poi_type")) {
          if (lastCategory == null) {
            lastCategory=getOtherMapCategory();
          }
          if (!Algorithms.isEmpty(parser.getAttributeValue("","deprecated_of"))) {
            String vl=parser.getAttributeValue("","name");
            String target=parser.getAttributeValue("","deprecated_of");
            deprecatedTags.put(vl,target);
          }
 else {
            lastType=parsePoiType(allTypes,parser,lastCategory,lastFilter,null,null);
            if ("true".equals(parser.getAttributeValue("","lang"))) {
              for (              String lng : MapRenderingTypes.langs) {
                parsePoiType(allTypes,parser,lastCategory,lastFilter,lng,lastType);
              }
            }
            lastTypePoiAdditionalsCategories.addAll(lastCategoryPoiAdditionalsCategories);
            lastTypePoiAdditionalsCategories.addAll(lastFilterPoiAdditionalsCategories);
            if (!Algorithms.isEmpty(parser.getAttributeValue("","poi_additional_category"))) {
              Collections.addAll(lastTypePoiAdditionalsCategories,parser.getAttributeValue("","poi_additional_category").split(","));
            }
            if (!Algorithms.isEmpty(parser.getAttributeValue("","excluded_poi_additional_category"))) {
              lastType.addExcludedPoiAdditionalCategories(parser.getAttributeValue("","excluded_poi_additional_category").split(","));
              lastTypePoiAdditionalsCategories.removeAll(lastType.getExcludedPoiAdditionalCategories());
            }
          }
        }
      }
 else       if (tok == XmlPullParser.END_TAG) {
        String name=parser.getName();
        if (name.equals("poi_filter")) {
          if (lastFilterPoiAdditionalsCategories.size() > 0) {
            abstractTypeAdditionalCategories.put(lastFilter,lastFilterPoiAdditionalsCategories);
            lastFilterPoiAdditionalsCategories=new TreeSet<String>();
          }
          lastFilter=null;
        }
 else         if (name.equals("poi_type")) {
          if (lastTypePoiAdditionalsCategories.size() > 0) {
            abstractTypeAdditionalCategories.put(lastType,lastTypePoiAdditionalsCategories);
            lastTypePoiAdditionalsCategories=new TreeSet<String>();
          }
          lastType=null;
        }
 else         if (name.equals("poi_category")) {
          if (lastCategoryPoiAdditionalsCategories.size() > 0) {
            abstractTypeAdditionalCategories.put(lastCategory,lastCategoryPoiAdditionalsCategories);
            lastCategoryPoiAdditionalsCategories=new TreeSet<String>();
          }
          lastCategory=null;
        }
 else         if (name.equals("poi_additional_category")) {
          lastPoiAdditionalCategory=null;
        }
      }
    }
    is.close();
  }
 catch (  IOException e) {
    log.error("Unexpected error",e);
    e.printStackTrace();
    throw new RuntimeException(e);
  }
catch (  RuntimeException e) {
    log.error("Unexpected error",e);
    e.printStackTrace();
    throw e;
  }
catch (  XmlPullParserException e) {
    log.error("Unexpected error",e);
    e.printStackTrace();
    throw new RuntimeException(e);
  }
  for (  PoiType gt : referenceTypes) {
    PoiType pt=allTypes.get(gt.getKeyName());
    if (pt == null || pt.getOsmTag() == null) {
      throw new IllegalStateException("Can't find poi type for poi reference '" + gt.keyName + "'");
    }
 else {
      gt.setReferenceType(pt);
    }
  }
  for (  Entry<AbstractPoiType,Set<String>> entry : abstractTypeAdditionalCategories.entrySet()) {
    for (    String category : entry.getValue()) {
      List<PoiType> poiAdditionals=categoryPoiAdditionalMap.get(category);
      if (poiAdditionals != null) {
        boolean reference=additionalCategoryOriginMap.get(category) != entry.getKey();
        for (        PoiType poiType : poiAdditionals) {
          poiType.setPoiAdditionalReference(reference);
        }
        entry.getKey().addPoiAdditionalsCategorized(poiAdditionals);
      }
    }
  }
  findDefaultOtherCategory();
  init=true;
  log.info("Time to init poi types " + (System.currentTimeMillis() - time));
}
