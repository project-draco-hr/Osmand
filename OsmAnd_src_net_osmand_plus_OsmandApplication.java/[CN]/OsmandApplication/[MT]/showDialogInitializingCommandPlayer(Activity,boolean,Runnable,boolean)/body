{
  String voiceProvider=osmandSettings.VOICE_PROVIDER.get();
  if (voiceProvider == null || OsmandSettings.VOICE_PROVIDER_NOT_USE.equals(voiceProvider)) {
    if (warningNoneProvider && voiceProvider == null) {
      final AlertDialog.Builder builder=new AlertDialog.Builder(uiContext);
      View view=uiContext.getLayoutInflater().inflate(R.layout.select_voice_first,null);
      ((ImageView)view.findViewById(R.id.icon)).setImageDrawable(getIconsCache().getContentIcon(R.drawable.ic_action_volume_up,getSettings().isLightContent()));
      view.findViewById(R.id.spinner).setOnClickListener(new View.OnClickListener(){
        @Override public void onClick(        final View v){
          RoutePreferencesMenu.selectVoiceGuidance((MapActivity)uiContext,new CallbackWithObject<String>(){
            @Override public boolean processResult(            String result){
              boolean acceptableValue=!RoutePreferencesMenu.MORE_VALUE.equals(firstSelectedVoiceProvider);
              if (acceptableValue) {
                ((TextView)v.findViewById(R.id.selectText)).setText(RoutePreferencesMenu.getVoiceProviderName(uiContext,result));
                firstSelectedVoiceProvider=result;
              }
              return acceptableValue;
            }
          }
);
        }
      }
);
      ((ImageView)view.findViewById(R.id.dropDownIcon)).setImageDrawable(getIconsCache().getContentIcon(R.drawable.ic_action_arrow_drop_down,getSettings().isLightContent()));
      builder.setCancelable(true);
      builder.setNegativeButton(R.string.shared_string_cancel,null);
      builder.setPositiveButton(R.string.shared_string_apply,new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int which){
          if (!Algorithms.isEmpty(firstSelectedVoiceProvider)) {
            RoutePreferencesMenu.applyVoiceProvider((MapActivity)uiContext,firstSelectedVoiceProvider);
          }
        }
      }
);
      builder.setView(view);
      builder.show();
    }
  }
 else {
    if (player == null || !Algorithms.objectEquals(voiceProvider,player.getCurrentVoice())) {
      appInitializer.initVoiceDataInDifferentThread(uiContext,voiceProvider,run,showDialog);
    }
  }
}
