{
  View convertView=LayoutInflater.from(linearLayout.getContext()).inflate(R.layout.poi_tag_list_item,null,false);
  final AutoCompleteTextView tagEditText=(AutoCompleteTextView)convertView.findViewById(R.id.tagEditText);
  ImageButton deleteItemImageButton=(ImageButton)convertView.findViewById(R.id.deleteItemImageButton);
  deleteItemImageButton.setImageDrawable(deleteDrawable);
  final String[] previousTag=new String[]{tg};
  deleteItemImageButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      linearLayout.removeView((View)v.getParent());
      editPoiData.removeTag(tagEditText.getText().toString());
    }
  }
);
  final AutoCompleteTextView valueEditText=(AutoCompleteTextView)convertView.findViewById(R.id.valueEditText);
  tagEditText.setText(tg);
  tagEditText.addTextChangedListener(new TextWatcher(){
    @Override public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){
      if (!editPoiData.isInEdit()) {
        editPoiData.removeTag(s.toString());
      }
    }
    @Override public void onTextChanged(    CharSequence s,    int start,    int before,    int count){
    }
    @Override public void afterTextChanged(    Editable s){
      if (!editPoiData.isInEdit()) {
        editPoiData.removeTag(previousTag[0]);
        editPoiData.putTag(s.toString(),valueEditText.getText().toString());
        previousTag[0]=s.toString();
      }
    }
  }
);
  initAutocompleteTextView(tagEditText,tagAdapter);
  valueEditText.setText(vl);
  valueEditText.addTextChangedListener(new TextWatcher(){
    @Override public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){
    }
    @Override public void onTextChanged(    CharSequence s,    int start,    int before,    int count){
    }
    @Override public void afterTextChanged(    Editable s){
      if (!editPoiData.isInEdit()) {
        editPoiData.putTag(tagEditText.getText().toString(),s.toString());
      }
    }
  }
);
  initAutocompleteTextView(valueEditText,valueAdapter);
  linearLayout.addView(convertView);
  tagEditText.requestFocus();
}
