{
  cache.clear();
  if (this.settings.SHOW_FAVORITES.get()) {
    if (tileBox.getZoom() >= startZoom) {
      float iconSize=FavoriteImageDrawable.getOrCreate(view.getContext(),0,tileBox.getDensity()).getIntrinsicWidth() * 3 / 2.5f;
      QuadRect bounds=new QuadRect(0,0,tileBox.getPixWidth(),tileBox.getPixHeight());
      bounds.inset(-bounds.width() / 4,-bounds.height() / 4);
      QuadTree<QuadRect> boundIntersections=new QuadTree<>(bounds,4,0.6f);
      List<QuadRect> result=new ArrayList<>();
      final QuadRect latLonBounds=tileBox.getLatLonBounds();
      List<LocationPoint> fullObjects=new ArrayList<>();
      for (      LocationPoint o : getPoints()) {
        float x=tileBox.getPixXFromLatLon(o.getLatitude(),o.getLongitude());
        float y=tileBox.getPixYFromLatLon(o.getLatitude(),o.getLongitude());
        boolean intersects=false;
        QuadRect visibleRect=calculateRect(x,y,iconSize,iconSize);
        boundIntersections.queryInBox(new QuadRect(visibleRect.left,visibleRect.top,visibleRect.right,visibleRect.bottom),result);
        for (        QuadRect r : result) {
          if (QuadRect.intersects(r,visibleRect)) {
            intersects=true;
            break;
          }
        }
        if (intersects) {
          canvas.drawBitmap(pointSmall,x - pointSmall.getWidth() / 2,y - pointSmall.getHeight() / 2,paintIcon);
        }
 else {
          boundIntersections.insert(visibleRect,new QuadRect(visibleRect.left,visibleRect.top,visibleRect.right,visibleRect.bottom));
          fullObjects.add(o);
        }
      }
      for (      LocationPoint o : fullObjects) {
        drawPoint(canvas,tileBox,latLonBounds,o);
      }
    }
  }
  if (textLayer.isVisible()) {
    textLayer.putData(this,cache);
  }
}
