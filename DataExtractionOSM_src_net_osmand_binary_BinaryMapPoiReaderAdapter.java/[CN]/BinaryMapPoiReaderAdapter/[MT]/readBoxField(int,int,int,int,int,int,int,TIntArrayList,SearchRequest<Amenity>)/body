{
  if (pzoom > 0) {
    int x1=px << (31 - pzoom);
    int x2=(px + 1) << (31 - pzoom);
    int y1=py << (31 - pzoom);
    int y2=(py + 1) << (31 - pzoom);
    if (!(left31 <= x2 && x1 <= right31 && bottom31 <= y2 && y1 <= top31)) {
      codedIS.skipRawBytes(codedIS.getBytesUntilLimit());
    }
  }
  int zoom=pzoom;
  int y=py;
  int x=px;
  while (true) {
    if (req.isInterrupted()) {
      return;
    }
    int t=codedIS.readTag();
    int tag=WireFormat.getTagFieldNumber(t);
switch (tag) {
case 0:
      return;
case OsmandOdb.OsmAndPoiBox.ZOOM_FIELD_NUMBER:
    zoom=codedIS.readUInt32() + pzoom;
  break;
case OsmandOdb.OsmAndPoiBox.LEFT_FIELD_NUMBER:
x=codedIS.readSInt32() + px;
break;
case OsmandOdb.OsmAndPoiBox.TOP_FIELD_NUMBER:
y=codedIS.readSInt32() + py;
break;
case OsmandOdb.OsmAndPoiBox.SUBBOXES_FIELD_NUMBER:
int length=codedIS.readFixed32();
int oldLimit=codedIS.pushLimit(length);
readBoxField(left31,right31,top31,bottom31,x,y,zoom,offsets,req);
codedIS.popLimit(oldLimit);
break;
case OsmandOdb.OsmAndPoiBox.SHIFTTODATA_FIELD_NUMBER:
offsets.add(codedIS.readFixed32());
break;
default :
skipUnknownField(t);
break;
}
}
}
