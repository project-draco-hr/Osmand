{
  super.build(view);
  boolean hasWiki=false;
  MapPoiTypes poiTypes=app.getPoiTypes();
  for (  Map.Entry<String,String> e : amenity.getAdditionalInfo().entrySet()) {
    int iconId;
    Drawable icon=null;
    int textColor=0;
    String key=e.getKey();
    String vl=e.getValue();
    boolean isWiki=false;
    boolean needLinks=!"population".equals(key);
    if (amenity.getType().isWiki()) {
      if (!hasWiki) {
        iconId=R.drawable.ic_action_note_dark;
        String preferredLang=app.getSettings().MAP_PREFERRED_LOCALE.get();
        if (Algorithms.isEmpty(preferredLang)) {
          preferredLang=app.getLanguage();
        }
        String lng=amenity.getContentSelected("content",preferredLang,"en");
        if (Algorithms.isEmpty(lng)) {
          lng="en";
        }
        final String langSelected=lng;
        String content=amenity.getDescription(langSelected);
        vl=Html.fromHtml(content).toString();
        if (vl.length() > 300) {
          vl=vl.substring(0,300);
        }
        hasWiki=true;
        isWiki=true;
      }
 else {
        continue;
      }
    }
 else     if (key.startsWith("name:")) {
      continue;
    }
 else     if (Amenity.OPENING_HOURS.equals(key)) {
      iconId=R.drawable.ic_action_time;
      OpeningHoursParser.OpeningHours rs=OpeningHoursParser.parseOpenedHours(amenity.getOpeningHours());
      if (rs != null) {
        Calendar inst=Calendar.getInstance();
        inst.setTimeInMillis(System.currentTimeMillis());
        boolean opened=rs.isOpenedForTime(inst);
        if (opened) {
          textColor=R.color.color_ok;
        }
 else {
          textColor=R.color.color_invalid;
        }
      }
    }
 else     if (Amenity.PHONE.equals(key)) {
      iconId=R.drawable.ic_action_call_dark;
    }
 else     if (Amenity.WEBSITE.equals(key)) {
      iconId=R.drawable.ic_world_globe_dark;
      vl=vl.replace(' ','_');
    }
 else {
      if (Amenity.DESCRIPTION.equals(key)) {
        iconId=R.drawable.ic_action_note_dark;
      }
 else {
        iconId=R.drawable.ic_action_info_dark;
      }
      AbstractPoiType pt=poiTypes.getAnyPoiAdditionalTypeByKey(key);
      if (pt != null) {
        PoiType pType=(PoiType)pt;
        if (pType.getParentType() != null && pType.getParentType() instanceof PoiType) {
          icon=getRowIcon(view.getContext(),((PoiType)pType.getParentType()).getOsmTag() + "_" + pType.getOsmTag().replace(':','_')+ "_"+ pType.getOsmValue());
        }
        if (pt instanceof PoiType && !((PoiType)pt).isText()) {
          vl=pt.getTranslation();
        }
 else {
          vl=pt.getTranslation() + ": " + amenity.unzipContent(e.getValue());
        }
      }
 else {
        vl=Algorithms.capitalizeFirstLetterAndLowercase(e.getKey()) + ": " + amenity.unzipContent(e.getValue());
      }
    }
    if (icon != null) {
      buildRow(view,icon,vl,textColor,isWiki,needLinks);
    }
 else {
      buildRow(view,iconId,vl,textColor,isWiki,needLinks);
    }
  }
}
