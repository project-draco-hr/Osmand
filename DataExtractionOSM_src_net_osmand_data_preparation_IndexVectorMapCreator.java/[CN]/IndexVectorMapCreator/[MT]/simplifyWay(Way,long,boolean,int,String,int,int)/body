{
  List<Node> nodes=originalE.getNodes();
  Way way=new Way(id);
  for (  String t : originalE.getTagKeySet()) {
    way.putTag(t,originalE.getTag(t));
  }
  boolean cycle=originalE.getNodeIds().get(0).longValue() == originalE.getNodeIds().get(nodes.size() - 1).longValue();
  long longType=encodeTypesToOneLong(type);
  if (cycle) {
    if (checkForSmallAreas(nodes,zoom + Math.min(zoomWaySmothness / 2,3),1,4)) {
      return null;
    }
  }
  MapAlgorithms.simplifyDouglasPeucker(nodes,zoom + 8 + zoomWaySmothness,3,way);
  if (way.getNodes().size() < 2) {
    return null;
  }
  if (cycle) {
    return way;
  }
 else {
    lowLevelWays++;
    insertLowLevelMapBinaryObject(level,longType,id,way.getNodes(),name);
    return null;
  }
}
