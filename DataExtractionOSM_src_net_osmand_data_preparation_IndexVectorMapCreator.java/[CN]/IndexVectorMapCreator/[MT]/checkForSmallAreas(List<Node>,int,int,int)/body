{
  int minX=Integer.MAX_VALUE;
  int maxX=Integer.MIN_VALUE;
  int minY=Integer.MAX_VALUE;
  int maxY=Integer.MIN_VALUE;
  int c=0;
  for (int i=0; i < nodes.size(); i++) {
    if (nodes.get(i) != null) {
      c++;
      int x=(int)(MapUtils.getTileNumberX(zoom,nodes.get(i).getLongitude()) * 256d);
      int y=(int)(MapUtils.getTileNumberY(zoom,nodes.get(i).getLatitude()) * 256d);
      minX=Math.min(minX,x);
      maxX=Math.max(maxX,x);
      minY=Math.min(minY,y);
      maxY=Math.max(maxY,y);
    }
  }
  if (c < 2) {
    return true;
  }
  return ((maxX - minX) <= minz && (maxY - minY) <= maxz) || ((maxX - minX) <= maxz && (maxY - minY) <= minz);
}
