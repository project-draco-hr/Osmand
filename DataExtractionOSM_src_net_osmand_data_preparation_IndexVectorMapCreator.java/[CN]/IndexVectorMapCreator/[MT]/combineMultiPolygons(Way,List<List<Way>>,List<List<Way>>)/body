{
  long lId=w.getEntityIds().get(w.getEntityIds().size() - 1).getId().longValue();
  long fId=w.getEntityIds().get(0).getId().longValue();
  if (fId == lId) {
    completedRings.add(Collections.singletonList(w));
  }
 else {
    List<Way> l=new ArrayList<Way>();
    l.add(w);
    boolean add=true;
    int iRsize=incompletedRings.size();
    for (int k=0; k < iRsize; ) {
      boolean remove=false;
      List<Way> i=incompletedRings.get(k);
      Way last=i.get(i.size() - 1);
      Way first=i.get(0);
      long lastId=last.getEntityIds().get(last.getEntityIds().size() - 1).getId().longValue();
      long firstId=first.getEntityIds().get(0).getId().longValue();
      if (fId == lastId) {
        i.addAll(l);
        remove=true;
        l=i;
        fId=firstId;
      }
 else       if (lId == firstId) {
        l.addAll(i);
        remove=true;
        lId=lastId;
      }
      if (remove) {
        incompletedRings.remove(k);
      }
 else {
        k++;
      }
      if (fId == lId) {
        completedRings.add(l);
        add=false;
        break;
      }
    }
    if (add) {
      incompletedRings.add(l);
    }
  }
}
