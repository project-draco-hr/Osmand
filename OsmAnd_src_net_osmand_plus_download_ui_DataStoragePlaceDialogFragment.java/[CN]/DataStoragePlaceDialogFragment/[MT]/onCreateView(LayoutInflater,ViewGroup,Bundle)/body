{
  Activity activity=getActivity();
  hasExternalStoragePermission=DownloadActivity.hasPermissionToWriteExternalStorage(activity);
  File internalStorage=getInternalStorageDirectory(activity);
  File external1Storage=getExternal1StorageDirectory(activity);
  if (external1Storage != null && external1Storage.exists() && OsmandSettings.isWritable(external1Storage)) {
    deviceStorage=external1Storage;
    deviceStorageType=OsmandSettings.EXTERNAL_STORAGE_TYPE_EXTERNAL_FILE;
    deviceStorageName=getString(R.string.storage_directory_external);
  }
 else {
    deviceStorage=internalStorage;
    deviceStorageType=OsmandSettings.EXTERNAL_STORAGE_TYPE_INTERNAL_FILE;
    deviceStorageName=getString(R.string.storage_directory_default);
  }
  if (hasExternalStoragePermission) {
    sharedStorage=getSharedStorageDirectory(activity);
    cardStorage=getMyApplication().getSettings().getSecondaryStorage();
  }
  Bundle args=null;
  if (savedInstanceState != null) {
    args=savedInstanceState;
  }
 else   if (getArguments() != null) {
    args=getArguments();
  }
  if (args != null) {
    storageReadOnly=args.getBoolean(STORAGE_READOLNY_KEY);
  }
  final View view=inflater.inflate(R.layout.fragment_data_storage_place_dialog,container,false);
  ((ImageView)view.findViewById(R.id.folderIconImageView)).setImageDrawable(getIcon(R.drawable.ic_action_folder,R.color.map_widget_blue));
  if (storageReadOnly) {
    ((TextView)view.findViewById(R.id.description)).setText(getString(R.string.storage_directory_readonly_desc));
  }
  View deviceStorageRow=view.findViewById(R.id.deviceMemoryRow);
  deviceStorageRow.setOnClickListener(deviceMemoryOnClickListener);
  ImageView deviceStorageImageView=(ImageView)view.findViewById(R.id.deviceMemoryImageView);
  deviceStorageImageView.setImageDrawable(getContentIcon(R.drawable.ic_sdcard));
  TextView deviceStorageDescription=(TextView)view.findViewById(R.id.deviceMemoryDescription);
  deviceStorageDescription.setText(deviceStorageName);
  deviceStorageDescription.setText(getFreeSpace(internalStorage));
  View sharedMemoryRow=view.findViewById(R.id.sharedMemoryRow);
  if (hasExternalStoragePermission && sharedStorage != null) {
    sharedMemoryRow.setOnClickListener(sharedMemoryOnClickListener);
    ImageView sharedMemoryImageView=(ImageView)view.findViewById(R.id.sharedMemoryImageView);
    sharedMemoryImageView.setImageDrawable(getContentIcon(R.drawable.ic_sdcard));
    TextView sharedMemoryDescription=(TextView)view.findViewById(R.id.sharedMemoryDescription);
    sharedMemoryDescription.setText(getFreeSpace(sharedStorage));
  }
 else {
    view.findViewById(R.id.divSharedStorage).setVisibility(View.GONE);
    sharedMemoryRow.setVisibility(View.GONE);
  }
  View memoryStickRow=view.findViewById(R.id.memoryStickRow);
  if (hasExternalStoragePermission && cardStorage != null) {
    memoryStickRow.setOnClickListener(memoryStickOnClickListener);
    ImageView memoryStickImageView=(ImageView)view.findViewById(R.id.memoryStickImageView);
    memoryStickImageView.setImageDrawable(getContentIcon(R.drawable.ic_sdcard));
    TextView memoryStickDescription=(TextView)view.findViewById(R.id.memoryStickDescription);
    memoryStickDescription.setText(getFreeSpace(cardStorage));
  }
 else {
    view.findViewById(R.id.divExtStorage).setVisibility(View.GONE);
    memoryStickRow.setVisibility(View.GONE);
  }
  final ImageButton closeImageButton=(ImageButton)view.findViewById(R.id.closeImageButton);
  closeImageButton.setImageDrawable(getContentIcon(R.drawable.ic_action_remove_dark));
  closeImageButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      isInterestedInFirstTime=false;
      dismiss();
    }
  }
);
  return view;
}
