{
  FileFilter fileFilter=null;
  int p;
  do {
    p=start;
    if (args[start].startsWith("--ff=")) {
      try {
        if (fileFilter == null) {
          fileFilter=new FileFilter();
        }
        fileFilter.parseFile(args[start].substring("--ff=".length()));
      }
 catch (      IOException e) {
        throw new IndexUploadException(e.getMessage());
      }
      start++;
    }
 else     if (args[start].startsWith("--fp=")) {
      if (fileFilter == null) {
        fileFilter=new FileFilter();
      }
      fileFilter.parseCSV(args[start].substring("--fp=".length()));
      start++;
    }
 else     if (args[start].startsWith("--ep=")) {
      if (fileFilter == null) {
        throw new NullPointerException();
      }
      fileFilter.parseExcludeCSV(args[start].substring("--ep=".length()));
      start++;
    }
 else     if (args[start].startsWith("--dp=")) {
      deleteFileFilter=new FileFilter();
      deleteFileFilter.parseCSV(args[start].substring("--dp=".length()));
      start++;
    }
 else     if (args[start].startsWith("--roads")) {
      roadProcess=true;
    }
  }
 while (p != start);
  if (fileFilter != null) {
    this.fileFilter=fileFilter;
  }
  return start;
}
