{
  try {
    uploadCredentials.connect();
    File[] listFiles=directory.listFiles();
    for (    File f : listFiles) {
      try {
        if (!fileFilter.fileCanBeUploaded(f)) {
          continue;
        }
        log.info("Process file " + f.getName());
        File unzipped=unzip(f);
        String description=getDescription(unzipped);
        File logFile=new File(f.getParentFile(),unzipped.getName() + IndexBatchCreator.GEN_LOG_EXT);
        List<File> files=new ArrayList<File>();
        files.add(unzipped);
        if (logFile.exists()) {
          files.add(logFile);
        }
        File zFile=new File(f.getParentFile(),unzipped.getName() + ".zip");
        zip(files,zFile,description,unzipped.lastModified());
        unzipped.delete();
        if (logFile.exists()) {
          logFile.delete();
        }
        uploadIndex(zFile,description,uploadCredentials);
      }
 catch (      OneFileException e) {
        log.error(f.getName() + ": " + e.getMessage(),e);
      }
catch (      RuntimeException e) {
        log.error(f.getName() + ": " + e.getMessage(),e);
      }
    }
    if (deleteFileFilter != null) {
      if (uploadCredentials instanceof UploadToGoogleCodeCredentials) {
        Map<String,String> files=DownloaderIndexFromGoogleCode.getIndexFiles(new LinkedHashMap<String,String>());
        for (        String f : files.keySet()) {
          System.out.println("File on googlecode " + f + " "+ files.get(f));
          if (deleteFileFilter.patternMatches(f)) {
            log.info("About to delete " + f);
          }
        }
      }
 else {
        log.error("Delete file filter is not supported with this credentions (method) " + uploadCredentials);
      }
    }
  }
  finally {
    uploadCredentials.disconnect();
  }
}
