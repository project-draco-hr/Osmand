{
  final int padding=(int)(12 * activity.getResources().getDisplayMetrics().density + 0.5f);
  final ArrayAdapter<LatLon> listadapter=new ArrayAdapter<LatLon>(app,changeOrder ? R.layout.change_order_item : R.layout.list_menu_item,R.id.title,intermediates){
    @Override public View getView(    final int position,    View convertView,    ViewGroup parent){
      View v=super.getView(position,convertView,parent);
      TextView tv=(TextView)v.findViewById(R.id.title);
      String nm=(position + 1) + ". ";
      String distString="";
      if (activity instanceof MapActivity) {
        double lat=((MapActivity)activity).getMapView().getLatitude();
        double lon=((MapActivity)activity).getMapView().getLongitude();
        double meters=MapUtils.getDistance(intermediates.get(position),lat,lon);
        distString=OsmAndFormatter.getFormattedDistance((float)meters,app);
      }
      nm+=app.getString(R.string.target_point,distString);
      String descr=names.get(position);
      if (descr != null && descr.trim().length() > 0) {
        nm+="\n" + descr;
      }
      tv.setText(nm);
      checkedIntermediates[position]=true;
      if (changeOrder) {
        ((ImageButton)v.findViewById(R.id.up)).setOnClickListener(new View.OnClickListener(){
          @Override public void onClick(          View v){
            if (position > 0) {
              LatLon old=intermediates.remove(position - 1);
              String oldN=names.remove(position - 1);
              names.add(position,oldN);
              intermediates.add(position,old);
              notifyDataSetInvalidated();
            }
          }
        }
);
        ((ImageButton)v.findViewById(R.id.down)).setOnClickListener(new View.OnClickListener(){
          @Override public void onClick(          View v){
            if (position < intermediates.size() - 1) {
              LatLon old=intermediates.remove(position + 1);
              String oldN=names.remove(position + 1);
              names.add(position,oldN);
              intermediates.add(position,old);
              notifyDataSetInvalidated();
            }
          }
        }
);
      }
 else {
        tv.setCompoundDrawablesWithIntrinsicBounds(position == intermediates.size() - 1 ? R.drawable.list_activities_set_destination : R.drawable.list_activities_set_intermediate,0,0,0);
        tv.setCompoundDrawablePadding(padding);
        final CheckBox ch=((CheckBox)v.findViewById(R.id.check_item));
        ch.setVisibility(View.VISIBLE);
        ch.setChecked(true);
        ch.setOnCheckedChangeListener(new OnCheckedChangeListener(){
          @Override public void onCheckedChanged(          CompoundButton buttonView,          boolean isChecked){
            checkedIntermediates[position]=isChecked;
          }
        }
);
      }
      return v;
    }
  }
;
  return listadapter;
}
