{
  View mainView=getView();
  if (mainView == null) {
    return;
  }
  if (plugin == null || plugin.getParkingPosition() == null) {
    mainView.setVisibility(View.GONE);
    return;
  }
 else {
    mainView.setVisibility(View.VISIBLE);
  }
  LatLon loc=getDefaultLocation();
  LatLon position=plugin.getParkingPosition();
  boolean limited=plugin.getParkingType();
  String descr;
  TextView timeLeft=(TextView)mainView.findViewById(R.id.time_left);
  if (limited) {
    descr=getString(R.string.parking_place_limited) + " " + plugin.getFormattedTime(plugin.getParkingTime(),getActivity());
    long endtime=plugin.getParkingTime();
    long currTime=Calendar.getInstance().getTimeInMillis();
    long timeDiff=endtime - currTime;
    String time=getFormattedTime(timeDiff) + " ";
    TextView leftLbl=(TextView)mainView.findViewById(R.id.left_lbl);
    timeLeft.setText(time);
    if (timeDiff < 0) {
      timeLeft.setText(time);
      leftLbl.setTextColor(getResources().getColor(R.color.parking_outdated_color));
      leftLbl.setText(getString(R.string.osmand_parking_overdue));
    }
 else {
      timeLeft.setText(time);
      leftLbl.setTextColor(Color.WHITE);
      leftLbl.setText(getString(R.string.osmand_parking_time_left));
    }
    timeLeft.setVisibility(View.VISIBLE);
  }
 else {
    descr=getString(R.string.parking_place);
    timeLeft.setText("");
    timeLeft.setVisibility(View.GONE);
  }
  ((TextView)mainView.findViewById(R.id.name)).setText(descr);
  ImageView direction=(ImageView)mainView.findViewById(R.id.direction_icon);
  if (loc != null) {
    DashLocationView dv=new DashLocationView(direction,(TextView)mainView.findViewById(R.id.distance),position);
    dv.paint=false;
    dv.arrowResId=R.drawable.ic_action_start_navigation;
    distances.add(dv);
  }
}
