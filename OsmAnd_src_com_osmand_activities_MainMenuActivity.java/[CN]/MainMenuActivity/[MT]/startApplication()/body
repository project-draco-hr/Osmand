{
  if (!applicationAlreadyStarted) {
    progressDlg=ProgressDialog.show(this,getString(R.string.loading_data),getString(R.string.reading_indexes),true);
    final ProgressDialogImplementation impl=new ProgressDialogImplementation(progressDlg);
    impl.setRunnable("Initializing app",new Runnable(){
      @Override public void run(){
        try {
          List<String> warnings=ResourceManager.getResourceManager().reloadIndexes(impl);
          impl.startTask(getString(R.string.voice_data_initializing),-1);
          String w=CommandPlayer.init(MainMenuActivity.this);
          if (w != null) {
            warnings.add(w);
          }
          SavingTrackHelper helper=new SavingTrackHelper(MainMenuActivity.this);
          if (helper.hasDataToSave()) {
            impl.startTask(getString(R.string.saving_gpx_tracks),-1);
            helper.saveDataToGpx();
          }
          helper.close();
          showWarnings(warnings);
        }
  finally {
          if (progressDlg != null) {
            progressDlg.dismiss();
            progressDlg=null;
          }
        }
      }
    }
);
    impl.run();
    applicationAlreadyStarted=true;
    Thread.setDefaultUncaughtExceptionHandler(new DefaultExceptionHandler());
    long size=getPreferences(MODE_WORLD_READABLE).getLong(EXCEPTION_FILE_SIZE,0);
    final File file=new File(Environment.getExternalStorageDirectory(),EXCEPTION_PATH);
    if (file.exists() && file.length() > 0) {
      String msg=MessageFormat.format(getString(R.string.previous_run_crashed),EXCEPTION_PATH);
      Builder builder=new AlertDialog.Builder(MainMenuActivity.this);
      builder.setMessage(msg).setNeutralButton(getString(R.string.close),null);
      builder.setPositiveButton(R.string.send_report,new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int which){
          Intent intent=new Intent(Intent.ACTION_SEND);
          intent.putExtra(Intent.EXTRA_EMAIL,new String[]{"vics001@gmail.com"});
          intent.putExtra(Intent.EXTRA_STREAM,Uri.fromFile(file));
          intent.setType("vnd.android.cursor.dir/email");
          intent.putExtra(Intent.EXTRA_SUBJECT,"OsmAnd bug");
          StringBuilder text=new StringBuilder();
          text.append("\nDevice : ").append(Build.DEVICE);
          text.append("\nBrand : ").append(Build.BRAND);
          text.append("\nModel : ").append(Build.MODEL);
          text.append("\nProduct : ").append(Build.PRODUCT);
          text.append("\nBuild : ").append(Build.DISPLAY);
          text.append("\nVersion : ").append(Build.VERSION.RELEASE);
          intent.putExtra(Intent.EXTRA_TEXT,text.toString());
          startActivity(Intent.createChooser(intent,getString(R.string.send_report)));
        }
      }
);
      builder.show();
      getPreferences(MODE_WORLD_READABLE).edit().putLong(EXCEPTION_FILE_SIZE,file.length()).commit();
    }
 else {
      if (size > 0) {
        getPreferences(MODE_WORLD_READABLE).edit().putLong(EXCEPTION_FILE_SIZE,0).commit();
      }
    }
  }
}
