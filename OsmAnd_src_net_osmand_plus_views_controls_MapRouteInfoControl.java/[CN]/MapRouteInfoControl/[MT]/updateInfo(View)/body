{
  String via=generateViaDescription();
  ((TextView)parentView.findViewById(R.id.Targets)).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (getTargets().checkPointToNavigateShort()) {
        hideDialog();
        IntermediatePointsDialog.openIntermediatePointsDialog(mapActivity);
      }
    }
  }
);
  final TargetPointsHelper targets=getTargets();
  if (via.length() == 0) {
    ((TextView)parentView.findViewById(R.id.ViaView)).setVisibility(View.GONE);
  }
 else {
    ((TextView)parentView.findViewById(R.id.ViaView)).setVisibility(View.VISIBLE);
    ((TextView)parentView.findViewById(R.id.ViaView)).setText(via);
  }
  final Spinner fromSpinner=setupFromSpinner(parentView);
  final Spinner toSpinner=setupToSpinner(parentView);
  fromSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener(){
    @Override public void onItemSelected(    AdapterView<?> parent,    View view,    int position,    long id){
      if (position == 0) {
        if (targets.getPointToStart() != null) {
          targets.clearStartPoint(true);
        }
      }
 else       if (position == 1) {
        selectFavorite(parentView,false);
      }
 else       if (position == 2) {
        selectOnScreen(parentView,false);
      }
    }
    @Override public void onNothingSelected(    AdapterView<?> parent){
    }
  }
);
  toSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener(){
    @Override public void onItemSelected(    AdapterView<?> parent,    View view,    int position,    long id){
      if (position == 1) {
        selectFavorite(parentView,true);
      }
 else       if (position == 2) {
        selectOnScreen(parentView,true);
      }
    }
    @Override public void onNothingSelected(    AdapterView<?> parent){
    }
  }
);
}
