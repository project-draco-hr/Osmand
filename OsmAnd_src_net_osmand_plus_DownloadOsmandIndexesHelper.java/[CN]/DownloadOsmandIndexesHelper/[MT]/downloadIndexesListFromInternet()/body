{
  try {
    log.debug("Start loading list of index files");
    TreeMap<String,IndexItem> indexFiles=new TreeMap<String,IndexItem>(new Comparator<String>(){
      private static final long serialVersionUID=1L;
      @Override public int compare(      String object1,      String object2){
        if (object1.endsWith(IndexConstants.ANYVOICE_INDEX_EXT_ZIP)) {
          if (object2.endsWith(IndexConstants.ANYVOICE_INDEX_EXT_ZIP)) {
            return object1.compareTo(object2);
          }
 else {
            return -1;
          }
        }
 else         if (object2.endsWith(IndexConstants.ANYVOICE_INDEX_EXT_ZIP)) {
          return 1;
        }
        return object1.compareTo(object2);
      }
    }
);
    try {
      URL url=new URL("http://download.osmand.net/get_indexes");
      XmlPullParser parser=XmlPullParserFactory.newInstance().newPullParser();
      parser.setInput(url.openStream(),"UTF-8");
      int next;
      while ((next=parser.next()) != XmlPullParser.END_DOCUMENT) {
        if (next == XmlPullParser.START_TAG && (parser.getName().equals("region") || parser.getName().equals("multiregion"))) {
          String name=parser.getAttributeValue(null,"name");
          String size=parser.getAttributeValue(null,"size");
          String date=parser.getAttributeValue(null,"date");
          String description=parser.getAttributeValue(null,"description");
          String parts=parser.getAttributeValue(null,"parts");
          IndexItem indexItem=new IndexItem(name,description,date,size,parts);
          if (indexItem.isAccepted()) {
            indexFiles.put(name,indexItem);
          }
        }
      }
    }
 catch (    IOException e) {
      log.error("Error while loading indexes from repository",e);
      return null;
    }
catch (    XmlPullParserException e) {
      log.error("Error while loading indexes from repository",e);
      return null;
    }
    if (indexFiles != null && !indexFiles.isEmpty()) {
      return indexFiles;
    }
 else {
      return null;
    }
  }
 catch (  RuntimeException e) {
    log.error("Error while loading indexes from repository",e);
    return null;
  }
}
