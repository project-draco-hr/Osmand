{
  int prevSegment=-1;
  float dist=0;
  for (int i=0; i <= result.size(); i++) {
    if (i == result.size() || result.get(i).getTurnType() != null) {
      if (prevSegment >= 0) {
        String turn=result.get(prevSegment).getTurnType().toString();
        final int[] lns=result.get(prevSegment).getTurnType().getLanes();
        if (lns != null) {
          String s="[ ";
          for (int h=0; h < lns.length; h++) {
            if (h > 0) {
              s+=" | ";
            }
            if (lns[h] % 2 == 1) {
              s+="+";
            }
            int pt=TurnType.getPrimaryTurn(lns[h]);
            if (pt == 0) {
              pt=1;
            }
            s+=TurnType.valueOf(pt,false).toXmlString();
            int st=TurnType.getSecondaryTurn(lns[h]);
            if (st != 0) {
              s+="," + TurnType.valueOf(st,false).toXmlString();
            }
            int tt=TurnType.getTertiaryTurn(lns[h]);
            if (tt != 0) {
              s+="," + TurnType.valueOf(tt,false).toXmlString();
            }
          }
          s+="]";
          turn+=s;
        }
        result.get(prevSegment).setDescription(turn + MessageFormat.format(" and go {0,number,#.##} meters",dist));
        if (result.get(prevSegment).getTurnType().isSkipToSpeak()) {
          result.get(prevSegment).setDescription("-*" + result.get(prevSegment).getDescription());
        }
      }
      prevSegment=i;
      dist=0;
    }
    if (i < result.size()) {
      dist+=result.get(i).getDistance();
    }
  }
}
