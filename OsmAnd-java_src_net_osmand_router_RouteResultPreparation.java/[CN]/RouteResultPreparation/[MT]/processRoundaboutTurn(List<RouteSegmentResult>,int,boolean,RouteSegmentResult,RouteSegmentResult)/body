{
  int exit=1;
  RouteSegmentResult last=rr;
  for (int j=i; j < result.size(); j++) {
    RouteSegmentResult rnext=result.get(j);
    last=rnext;
    if (rnext.getObject().roundabout()) {
      boolean plus=rnext.getStartPointIndex() < rnext.getEndPointIndex();
      int k=rnext.getStartPointIndex();
      if (j == i) {
      }
      while (k != rnext.getEndPointIndex()) {
        int attachedRoads=rnext.getAttachedRoutes(k).size();
        if (attachedRoads > 0) {
          exit++;
        }
        k=plus ? k + 1 : k - 1;
      }
    }
 else {
      break;
    }
  }
  TurnType t=TurnType.getExitTurn(exit,0,leftSide);
  t.setTurnAngle((float)MapUtils.degreesDiff(last.getBearingBegin(),prev.getBearingEnd()));
  return t;
}
