{
  int[] usableLanes=outgoingCalcLanes;
  if (outgoingCalcLanes.length != splitLaneOptions.length) {
    usableLanes=new int[splitLaneOptions.length];
    int outgoingLanesIndex=0;
    int sourceLanesIndex=0;
    while (outgoingLanesIndex < outgoingCalcLanes.length && sourceLanesIndex < splitLaneOptions.length) {
      int options=countOccurrences(splitLaneOptions[sourceLanesIndex],';');
      for (int k=0; k <= options && outgoingLanesIndex < outgoingCalcLanes.length; k++) {
        usableLanes[sourceLanesIndex]|=outgoingCalcLanes[outgoingLanesIndex];
        outgoingLanesIndex++;
      }
      sourceLanesIndex++;
    }
  }
  return usableLanes;
}
