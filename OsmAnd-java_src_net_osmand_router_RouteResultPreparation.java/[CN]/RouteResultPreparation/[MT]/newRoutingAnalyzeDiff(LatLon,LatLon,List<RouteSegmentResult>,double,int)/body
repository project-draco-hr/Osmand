{
  for (int k=0; k < result.size() - d; k++) {
    RouteSegmentResult res1=result.get(k);
    RouteSegmentResult res2=result.get(k + d);
    float realdist=0;
    for (int t=k; t < k + d + 1; t++) {
      realdist+=result.get(t).getDistance();
    }
{
      RouteDataObject obj1=res1.getObject();
      RouteDataObject obj2=res2.getObject();
      int si=res1.getStartPointIndex();
      LatLon segStart=new LatLon(MapUtils.get31LatitudeY(obj1.getPoint31YTile(si)),MapUtils.get31LongitudeX(obj1.getPoint31XTile(si)));
      int ei=res2.getEndPointIndex();
      LatLon segEnd=new LatLon(MapUtils.get31LatitudeY(obj2.getPoint31YTile(ei)),MapUtils.get31LongitudeX(obj2.getPoint31XTile(ei)));
      float maxSpeed=obj1.getMaximumSpeed();
      if (maxSpeed > 0) {
        double st=MapUtils.getDistance(start,segStart);
        double en=MapUtils.getDistance(segEnd,end);
        double segmentdist=MapUtils.getDistance(segStart,segEnd);
        double f=length - st - en;
        if (f > 0) {
          double ratio=realdist / f;
          double speed_cut=maxSpeed / ratio * 3.6;
          if (speed_cut > 60) {
            System.out.println(" F " + segmentdist + " - "+ realdist+ " "+ segStart+ ".."+ segEnd);
            System.out.println("Ref ! " + k + ":"+ (k + d)+ " "+ obj1.getRef()+ "-"+ obj2.getRef()+ " DIFF "+ (int)f+ " / "+ speed_cut);
          }
        }
      }
    }
  }
}
