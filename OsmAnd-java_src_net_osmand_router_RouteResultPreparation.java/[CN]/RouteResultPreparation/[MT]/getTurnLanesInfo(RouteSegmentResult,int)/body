{
  String turnLanes=getTurnLanesString(prevSegm);
  if (turnLanes == null) {
    return null;
  }
  int[] lanesArray=calculateRawTurnLanes(turnLanes,mainTurnType);
  boolean isSet=setAllowedLanes(mainTurnType,lanesArray);
  if (!isSet && lanesArray.length > 0) {
    boolean leftTurn=TurnType.isLeftTurn(mainTurnType);
    int ind=leftTurn ? 0 : lanesArray.length - 1;
    final int tt=TurnType.getPrimaryTurn(lanesArray[ind]);
    final int st=TurnType.getSecondaryTurn(lanesArray[ind]);
    if (leftTurn) {
      if (!TurnType.isLeftTurn(tt)) {
        TurnType.setPrimaryTurnAndReset(lanesArray,ind,TurnType.TL);
        TurnType.setSecondaryTurn(lanesArray,ind,tt);
        TurnType.setTertiaryTurn(lanesArray,ind,st);
        lanesArray[ind]|=1;
      }
    }
 else {
      if (!TurnType.isRightTurn(tt)) {
        TurnType.setPrimaryTurnAndReset(lanesArray,ind,TurnType.TR);
        TurnType.setSecondaryTurn(lanesArray,ind,tt);
        TurnType.setTertiaryTurn(lanesArray,ind,st);
        lanesArray[ind]|=1;
      }
    }
    setAllowedLanes(tt,lanesArray);
  }
  return lanesArray;
}
