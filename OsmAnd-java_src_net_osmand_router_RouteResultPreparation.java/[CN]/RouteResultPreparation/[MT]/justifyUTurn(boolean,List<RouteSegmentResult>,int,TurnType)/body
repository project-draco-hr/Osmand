{
  boolean tl=TurnType.isLeftTurnNoUTurn(t.getValue());
  boolean tr=TurnType.isRightTurnNoUTurn(t.getValue());
  if (tl || tr) {
    TurnType tnext=result.get(i + 1).getTurnType();
    if (tnext != null && result.get(i).getDistance() < 50) {
      boolean ut=true;
      if (i > 0) {
        double uTurn=MapUtils.degreesDiff(result.get(i - 1).getBearingEnd(),result.get(i + 1).getBearingBegin());
        if (Math.abs(uTurn) < 120) {
          ut=false;
        }
      }
      String highway=result.get(i).getObject().getHighway();
      if (highway == null || highway.endsWith("track") || highway.endsWith("services") || highway.endsWith("service") || highway.endsWith("path")) {
        ut=false;
      }
      if (result.get(i).getObject().getOneway() == 0 || result.get(i + 1).getObject().getOneway() == 0) {
        ut=false;
      }
      if (ut) {
        tnext.setSkipToSpeak(true);
        if (tl && TurnType.isLeftTurnNoUTurn(tnext.getValue())) {
          TurnType tt=TurnType.valueOf(TurnType.TU,false);
          tt.setLanes(t.getLanes());
          return tt;
        }
 else         if (tr && TurnType.isRightTurnNoUTurn(tnext.getValue())) {
          TurnType tt=TurnType.valueOf(TurnType.TU,true);
          tt.setLanes(t.getLanes());
          return tt;
        }
      }
    }
  }
  return null;
}
