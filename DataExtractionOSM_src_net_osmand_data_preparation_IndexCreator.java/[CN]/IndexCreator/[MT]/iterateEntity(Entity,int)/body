{
  if (step == STEP_MAIN) {
    if (indexPOI && Amenity.isAmenity(e)) {
      loadEntityData(e,false);
      if (poiPreparedStatement != null) {
        Amenity a=new Amenity(e);
        if (a.getLocation() != null) {
          convertEnglishName(a);
          DataIndexWriter.insertAmenityIntoPoi(poiPreparedStatement,pStatements,a,BATCH_SIZE);
        }
      }
    }
    if (indexTransport) {
      if (e instanceof Relation && e.getTag(OSMTagKey.ROUTE) != null) {
        loadEntityData(e,true);
        TransportRoute route=indexTransportRoute((Relation)e);
        if (route != null) {
          DataIndexWriter.insertTransportIntoIndex(transRouteStat,transRouteStopsStat,transStopsStat,visitedStops,route,pStatements,BATCH_SIZE);
        }
      }
    }
    if (indexMap && (e instanceof Way || e instanceof Node)) {
      if (e instanceof Node || !multiPolygonsWays.contains(e.getId())) {
        loadEntityData(e,true);
        boolean inverse="-1".equals(e.getTag(OSMTagKey.ONEWAY));
        writeEntityToMapDatabase(e,e.getId(),inverse,0);
        indexLowLevelMap(e,1);
        indexLowLevelMap(e,2);
      }
    }
    if (indexAddress) {
      if (e.getTag(OSMTagKey.ADDR_HOUSE_NUMBER) != null && e.getTag(OSMTagKey.ADDR_STREET) != null) {
        boolean exist=false;
        if (loadInMemory) {
          exist=addressBuildingLocalSet.contains(e.getId());
        }
 else {
          addressSearchBuildingStat.setLong(1,e.getId());
          ResultSet rs=addressSearchBuildingStat.executeQuery();
          exist=rs.next();
          rs.close();
        }
        if (!exist) {
          loadEntityData(e,false);
          LatLon l=e.getLatLon();
          City city=getClosestCity(l);
          Long idStreet=getStreetInCity(city,e.getTag(OSMTagKey.ADDR_STREET),l,e.getId());
          if (idStreet != null) {
            Building building=new Building(e);
            building.setName(e.getTag(OSMTagKey.ADDR_HOUSE_NUMBER));
            convertEnglishName(building);
            DataIndexWriter.writeBuilding(addressBuildingStat,pStatements,idStreet,building,BATCH_SIZE);
          }
        }
      }
      if (e instanceof Way && e.getTag(OSMTagKey.HIGHWAY) != null && e.getTag(OSMTagKey.NAME) != null) {
        boolean exist=false;
        if (loadInMemory) {
          exist=addressStreetNodeLocalSet.contains(e.getId());
        }
 else {
          addressSearchStreetNodeStat.setLong(1,e.getId());
          ResultSet rs=addressSearchStreetNodeStat.executeQuery();
          exist=rs.next();
          rs.close();
        }
        if (!exist) {
          loadEntityData(e,false);
          LatLon l=e.getLatLon();
          City city=getClosestCity(l);
          Long idStreet=getStreetInCity(city,e.getTag(OSMTagKey.NAME),l,e.getId());
          if (idStreet != null && saveAddressWays) {
            DataIndexWriter.writeStreetWayNodes(addressStreetNodeStat,pStatements,idStreet,(Way)e,BATCH_SIZE);
          }
        }
      }
      if (e instanceof Relation) {
        if (e.getTag(OSMTagKey.POSTAL_CODE) != null) {
          loadEntityData(e,false);
          postalCodeRelations.add((Relation)e);
        }
      }
    }
  }
 else   if (step == STEP_ADDRESS_RELATIONS_AND_MULTYPOLYGONS) {
    if (e instanceof Relation && "address".equals(e.getTag(OSMTagKey.TYPE))) {
      indexAddressRelation((Relation)e);
    }
    if (e instanceof Relation && "multipolygon".equals(e.getTag(OSMTagKey.TYPE))) {
      loadEntityData(e,true);
      Map<Entity,String> entities=((Relation)e).getMemberEntities();
      for (      Entity es : entities.keySet()) {
        if (es instanceof Way) {
          boolean inner="inner".equals(entities.get(es));
          boolean clockwise=true;
          boolean inverse=!clockwise == inner;
          writeEntityToMapDatabase(es,es.getId(),inverse,0);
          indexLowLevelMap(es,1);
          indexLowLevelMap(es,2);
          multiPolygonsWays.add(es.getId());
        }
      }
    }
  }
 else   if (step == STEP_CITY_NODES) {
    registerCityIfNeeded(e);
  }
}
