{
  if (savedInstanceState != null) {
    editPoiData.tags=(LinkedHashSet<Tag>)savedInstanceState.getSerializable(TAGS_LIST);
  }
 else {
    editPoiData.tags=new LinkedHashSet<>();
  }
  View view=inflater.inflate(R.layout.fragment_edit_poi,container,false);
  Toolbar toolbar=(Toolbar)view.findViewById(R.id.toolbar);
  toolbar.setTitle(R.string.poi_create_title);
  toolbar.setNavigationIcon(R.drawable.abc_ic_ab_back_mtrl_am_alpha);
  toolbar.setNavigationOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      FragmentManager fragmentManager=getActivity().getSupportFragmentManager();
      fragmentManager.beginTransaction().remove(EditPoiFragment.this).commit();
      fragmentManager.popBackStack();
    }
  }
);
  viewPager=(ViewPager)view.findViewById(R.id.viewpager);
  MyAdapter pagerAdapter=new MyAdapter(getChildFragmentManager());
  viewPager.setAdapter(pagerAdapter);
  final TabLayout tabLayout=(TabLayout)view.findViewById(R.id.tab_layout);
  tabLayout.setTabMode(TabLayout.MODE_SCROLLABLE);
  if (ViewCompat.isLaidOut(tabLayout)) {
    tabLayout.setupWithViewPager(viewPager);
  }
 else {
    tabLayout.addOnLayoutChangeListener(new View.OnLayoutChangeListener(){
      @Override public void onLayoutChange(      View v,      int left,      int top,      int right,      int bottom,      int oldLeft,      int oldTop,      int oldRight,      int oldBottom){
        tabLayout.setupWithViewPager(viewPager);
        tabLayout.removeOnLayoutChangeListener(this);
      }
    }
);
  }
  ImageButton onlineDocumentationButton=(ImageButton)view.findViewById(R.id.onlineDocumentationButton);
  onlineDocumentationButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      getActivity().startActivity(new Intent(Intent.ACTION_VIEW,Uri.parse("https://wiki.openstreetmap.org/wiki/Map_Features")));
    }
  }
);
  return view;
}
