{
  String file=getFileForImage(x,y,zoom,map.getTileFormat());
  if (fileWithTiles == null || !fileWithTiles.canRead()) {
    return null;
  }
  File en=new File(fileWithTiles,file);
  if (cacheOfImages.size() > maxImgCacheSize) {
    onLowMemory();
  }
  if (!downloader.isFileCurrentlyDownloaded(en)) {
    if (en.exists()) {
      long time=System.currentTimeMillis();
      cacheOfImages.put(file,BitmapFactory.decodeFile(en.getAbsolutePath()));
      if (log.isDebugEnabled()) {
        log.debug("Loaded file : " + file + " "+ -(time - System.currentTimeMillis())+ " ms");
      }
    }
    if (loadIfNeeded && cacheOfImages.get(file) == null) {
      ConnectivityManager mgr=(ConnectivityManager)getContext().getSystemService(Context.CONNECTIVITY_SERVICE);
      NetworkInfo info=mgr.getActiveNetworkInfo();
      if (info != null && info.isConnected()) {
        String urlToLoad=map.getUrlToLoad(x,y,zoom);
        if (urlToLoad != null) {
          downloader.requestToDownload(urlToLoad,new DownloadRequest(en,x,y,zoom));
        }
      }
    }
  }
  return cacheOfImages.get(file);
}
