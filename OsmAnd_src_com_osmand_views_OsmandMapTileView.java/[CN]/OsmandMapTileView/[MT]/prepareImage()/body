{
  if (OsmandSettings.isUsingInternetToDownloadTiles(getContext())) {
    MapTileDownloader.getInstance().refuseAllPreviousRequests();
  }
  int width=getWidth();
  int height=getHeight();
  int tileSize=getTileSize();
  int xTileLeft=(int)Math.floor(getXTile() - width / (2d * getTileSize()));
  int yTileUp=(int)Math.floor(getYTile() - height / (2d * getTileSize()));
  int startingX=(int)((xTileLeft - getXTile()) * getTileSize() + getWidth() / 2);
  int startingY=(int)((yTileUp - getYTile()) * getTileSize() + getHeight() / 2);
  SurfaceHolder holder=getHolder();
synchronized (holder) {
    Canvas canvas=holder.lockCanvas();
    if (canvas != null) {
      try {
        for (int i=0; i * tileSize + startingX < width; i++) {
          for (int j=0; j * tileSize + startingY < height; j++) {
            ResourceManager mgr=ResourceManager.getResourceManager();
            Bitmap bmp=mgr.getTileImageForMapAsync(map,xTileLeft + i,yTileUp + j,zoom,OsmandSettings.isUsingInternetToDownloadTiles(getContext()));
            if (bmp == null) {
              drawEmptyTile(canvas,i * tileSize + startingX,j * tileSize + startingY);
            }
 else {
              canvas.drawBitmap(bmp,i * tileSize + startingX,j * tileSize + startingY,null);
            }
          }
        }
        drawOverMap(canvas);
      }
  finally {
        holder.unlockCanvasAndPost(canvas);
      }
    }
  }
}
