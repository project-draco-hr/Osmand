{
  if (request == null) {
    prepareImage();
    return;
  }
  int xTileLeft=(int)Math.floor(getXTile() - getWidth() / (2d * getTileSize()));
  int yTileUp=(int)Math.floor(getYTile() - getHeight() / (2d * getTileSize()));
  int startingX=(int)((xTileLeft - getXTile()) * getTileSize() + getWidth() / 2);
  int startingY=(int)((yTileUp - getYTile()) * getTileSize() + getHeight() / 2);
  int i=(request.xTile - xTileLeft) * getTileSize() + startingX;
  int j=(request.yTile - yTileUp) * getTileSize() + startingY;
  if (request.zoom == this.zoom && (i + getTileSize() >= 0 && i < getWidth()) && (j + getTileSize() >= 0 && j < getHeight())) {
    SurfaceHolder holder=getHolder();
synchronized (holder) {
      Canvas canvas=holder.lockCanvas(new Rect(i,j,getTileSize() + i,getTileSize() + j));
      if (canvas != null) {
        try {
          ResourceManager mgr=ResourceManager.getResourceManager();
          Bitmap bmp=mgr.getTileImageForMapSync(map,request.xTile,request.yTile,zoom,false);
          if (bmp == null) {
            drawEmptyTile(canvas,i,j);
          }
 else {
            canvas.drawBitmap(bmp,i,j,null);
          }
          drawOverMap(canvas);
        }
  finally {
          holder.unlockCanvasAndPost(canvas);
        }
      }
    }
  }
}
