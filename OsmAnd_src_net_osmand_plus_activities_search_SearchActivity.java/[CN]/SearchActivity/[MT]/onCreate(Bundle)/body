{
  ((OsmandApplication)getApplication()).applyTheme(this);
  super.onCreate(savedInstanceState);
  getSupportActionBar().setNavigationMode(ActionBar.NAVIGATION_MODE_LIST);
  long t=System.currentTimeMillis();
  setContentView(R.layout.tab_content);
  settings=((OsmandApplication)getApplication()).getSettings();
  showOnlyOneTab=getIntent() != null && getIntent().getBooleanExtra(SHOW_ONLY_ONE_TAB,false);
  getSupportActionBar().setTitle("");
  getSupportActionBar().setElevation(0);
  Integer tab=settings.SEARCH_TAB.get();
  if (!showOnlyOneTab) {
    ViewPager mViewPager=(ViewPager)findViewById(R.id.pager);
    PagerSlidingTabStrip mSlidingTabLayout=(PagerSlidingTabStrip)findViewById(R.id.sliding_tabs);
    List<TabItem> mTabs=new ArrayList<TabItem>();
    mTabs.add(getTabIndicator(R.string.poi,getFragment(POI_TAB_INDEX)));
    mTabs.add(getTabIndicator(R.string.address,getFragment(ADDRESS_TAB_INDEX)));
    mTabs.add(getTabIndicator(R.string.search_tabs_location,getFragment(LOCATION_TAB_INDEX)));
    mTabs.add(getTabIndicator(R.string.favorite,getFragment(FAVORITES_TAB_INDEX)));
    mTabs.add(getTabIndicator(R.string.shared_string_history,getFragment(HISTORY_TAB_INDEX)));
    setViewPagerAdapter(mViewPager,mTabs);
    mSlidingTabLayout.setViewPager(mViewPager);
    mViewPager.setCurrentItem(Math.min(tab,HISTORY_TAB_INDEX));
    mSlidingTabLayout.setOnPageChangeListener(new OnPageChangeListener(){
      @Override public void onPageSelected(      int arg0){
        settings.SEARCH_TAB.set(arg0);
      }
      @Override public void onPageScrolled(      int arg0,      float arg1,      int arg2){
      }
      @Override public void onPageScrollStateChanged(      int arg0){
      }
    }
);
  }
 else {
    setContentView(R.layout.search_activity_single);
    Class<?> cl=getFragment(tab);
    try {
      getSupportFragmentManager().beginTransaction().replace(R.id.layout,(Fragment)cl.newInstance()).commit();
    }
 catch (    InstantiationException e) {
      throw new IllegalStateException(e);
    }
catch (    IllegalAccessException e) {
      throw new IllegalStateException(e);
    }
  }
  setTopSpinner();
  Log.i("net.osmand","Start on create " + (System.currentTimeMillis() - t));
  Intent intent=getIntent();
  OsmandSettings settings=((OsmandApplication)getApplication()).getSettings();
  LatLon last=settings.getLastKnownMapLocation();
  if (intent != null) {
    double lat=intent.getDoubleExtra(SEARCH_LAT,0);
    double lon=intent.getDoubleExtra(SEARCH_LON,0);
    if (lat != 0 || lon != 0) {
      LatLon l=new LatLon(lat,lon);
      if (!Algorithms.objectEquals(reqSearchPoint,l)) {
        reqSearchPoint=l;
        if ((Math.abs(lat - last.getLatitude()) < 0.00001) && (Math.abs(lon - last.getLongitude()) < 0.00001)) {
          updateSearchPoint(reqSearchPoint,getString(R.string.select_search_position) + " " + getString(R.string.search_position_map_view),false);
        }
 else {
          updateSearchPoint(reqSearchPoint,getString(R.string.select_search_position) + " ",true);
        }
      }
    }
  }
  if (searchPoint == null) {
    if (!Algorithms.objectEquals(reqSearchPoint,last)) {
      reqSearchPoint=last;
      updateSearchPoint(last,getString(R.string.select_search_position) + " " + getString(R.string.search_position_map_view),false);
    }
  }
}
