{
  ((OsmandApplication)getApplication()).applyTheme(this);
  super.onCreate(savedInstanceState);
  long t=System.currentTimeMillis();
  getSupportActionBar().setNavigationMode(ActionBar.NAVIGATION_MODE_LIST);
  setContentView(R.layout.search_main);
  settings=((OsmandApplication)getApplication()).getSettings();
  Integer tab=settings.SEARCH_TAB.get();
  showOnlyOneTab=getIntent() != null && getIntent().getBooleanExtra(SHOW_ONLY_ONE_TAB,false);
  getSupportActionBar().setDisplayHomeAsUpEnabled(true);
  getSupportActionBar().setTitle("");
  if (!showOnlyOneTab) {
    final TextView tabinfo=(TextView)findViewById(R.id.textViewADesc);
    TabWidget tabs=(TabWidget)findViewById(android.R.id.tabs);
    tabs.setBackgroundResource(R.drawable.tab_icon_background);
    TabHost tabHost=(TabHost)findViewById(android.R.id.tabhost);
    tabHost.setup();
    ViewPager mViewPager=(ViewPager)findViewById(R.id.pager);
    mTabsAdapter=new TabsAdapter(this,tabHost,tabinfo,mViewPager,settings);
    TabSpec poiTab=tabHost.newTabSpec(SEARCH_POI).setIndicator(getTabIndicator(tabHost,R.drawable.tab_search_poi_icon,R.string.poi));
    mTabsAdapter.addTab(poiTab,getFragment(POI_TAB_INDEX),null);
    TabSpec addressSpec=tabHost.newTabSpec(SEARCH_ADDRESS).setIndicator(getTabIndicator(tabHost,R.drawable.tab_search_address_icon,R.string.address));
    mTabsAdapter.addTab(addressSpec,getFragment(ADDRESS_TAB_INDEX),null);
    TabSpec locationTab=tabHost.newTabSpec(SEARCH_LOCATION).setIndicator(getTabIndicator(tabHost,R.drawable.tab_search_location_icon,R.string.search_tabs_location));
    mTabsAdapter.addTab(locationTab,getFragment(LOCATION_TAB_INDEX),null);
    TabSpec favoriteTab=tabHost.newTabSpec(SEARCH_FAVORITES).setIndicator(getTabIndicator(tabHost,R.drawable.tab_search_favorites_icon,R.string.favorite));
    mTabsAdapter.addTab(favoriteTab,getFragment(FAVORITES_TAB_INDEX),null);
    TabSpec historyTab=tabHost.newTabSpec(SEARCH_HISTORY).setIndicator(getTabIndicator(tabHost,R.drawable.tab_search_history_icon,R.string.history));
    mTabsAdapter.addTab(historyTab,getFragment(HISTORY_TAB_INDEX),null);
    TabSpec transportTab=tabHost.newTabSpec(SEARCH_TRANSPORT).setIndicator(getTabIndicator(tabHost,R.drawable.tab_search_transport_icon,R.string.transport));
    mTabsAdapter.addTab(transportTab,getFragment(TRANSPORT_TAB_INDEX),null);
    tabHost.setCurrentTab(tab);
  }
 else {
    FrameLayout fl=new FrameLayout(this);
    fl.setId(R.id.layout);
    setContentView(fl);
    Class<?> cl=getFragment(tab);
    try {
      getSupportFragmentManager().beginTransaction().replace(R.id.layout,(Fragment)cl.newInstance()).commit();
    }
 catch (    InstantiationException e) {
      throw new IllegalStateException(e);
    }
catch (    IllegalAccessException e) {
      throw new IllegalStateException(e);
    }
  }
  setTopSpinner();
  Log.i("net.osmand","Start on create " + (System.currentTimeMillis() - t));
  Intent intent=getIntent();
  OsmandSettings settings=((OsmandApplication)getApplication()).getSettings();
  LatLon last=settings.getLastKnownMapLocation();
  if (intent != null) {
    double lat=intent.getDoubleExtra(SEARCH_LAT,0);
    double lon=intent.getDoubleExtra(SEARCH_LON,0);
    if (lat != 0 || lon != 0) {
      LatLon l=new LatLon(lat,lon);
      if (!Algorithms.objectEquals(reqSearchPoint,l)) {
        reqSearchPoint=l;
        if ((Math.abs(lat - last.getLatitude()) < 0.00001) && (Math.abs(lon - last.getLongitude()) < 0.00001)) {
          updateSearchPoint(reqSearchPoint,getString(R.string.select_search_position) + " " + getString(R.string.search_position_map_view),false);
        }
 else {
          updateSearchPoint(reqSearchPoint,getString(R.string.select_search_position) + " ",true);
        }
      }
    }
  }
  if (searchPoint == null) {
    if (!Algorithms.objectEquals(reqSearchPoint,last)) {
      reqSearchPoint=last;
      updateSearchPoint(last,getString(R.string.select_search_position) + " " + getString(R.string.search_position_map_view),false);
    }
  }
}
