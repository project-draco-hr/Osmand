{
  super.onCreate(savedInstanceState);
  long t=System.currentTimeMillis();
  requestWindowFeature(Window.FEATURE_NO_TITLE);
  setContentView(R.layout.search_main);
  settings=((OsmandApplication)getApplication()).getSettings();
  View backButton=(View)findViewById(R.id.search_back_button);
  backButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      SearchActivity.this.finish();
    }
  }
);
  final TextView tabinfo=(TextView)findViewById(R.id.textViewADesc);
  spinner=(Spinner)findViewById(R.id.SpinnerLocation);
  spinnerAdapter=new ArrayAdapter<String>(this,R.layout.my_spinner_text,new ArrayList<String>(Arrays.asList(new String[]{getString(R.string.search_position_undefined),getString(R.string.search_position_current_location),getString(R.string.search_position_map_view),getString(R.string.search_position_favorites),getString(R.string.search_position_address)}))){
    @Override public View getDropDownView(    int position,    View convertView,    ViewGroup parent){
      View dropDownView=super.getDropDownView(position,convertView,parent);
      if (dropDownView instanceof TextView) {
        ((TextView)dropDownView).setTextColor(getResources().getColor(R.color.color_black));
      }
      return dropDownView;
    }
  }
;
  spinnerAdapter.setDropDownViewResource(R.layout.my_spinner_text);
  TabWidget tabs=(TabWidget)findViewById(android.R.id.tabs);
  tabs.setBackgroundResource(R.drawable.tab_icon_background);
  TabHost host=getTabHost();
  host.addTab(host.newTabSpec(SEARCH_POI).setIndicator(getTabIndicator(R.drawable.tab_search_poi_icon,R.string.poi)).setContent(new Intent(this,SearchPoiFilterActivity.class)));
  addressSpec=host.newTabSpec(SEARCH_ADDRESS).setIndicator(getTabIndicator(R.drawable.tab_search_address_icon,R.string.address));
  setAddressSpecContent();
  host.addTab(addressSpec);
  host.addTab(host.newTabSpec(SEARCH_LOCATION).setIndicator(getTabIndicator(R.drawable.tab_search_location_icon,R.string.search_tabs_location)).setContent(createIntent(NavigatePointActivity.class)));
  TabSpec transportTab=host.newTabSpec(SEARCH_TRANSPORT).setIndicator(getTabIndicator(R.drawable.tab_search_transport_icon,R.string.transport)).setContent(createIntent(SearchTransportActivity.class));
  host.addTab(transportTab);
  host.addTab(host.newTabSpec(SEARCH_FAVORITES).setIndicator(getTabIndicator(R.drawable.tab_search_favorites_icon,R.string.favorite)).setContent(createIntent(FavouritesListActivity.class)));
  host.addTab(host.newTabSpec(SEARCH_HISTORY).setIndicator(getTabIndicator(R.drawable.tab_search_history_icon,R.string.history)).setContent(createIntent(SearchHistoryActivity.class)));
  host.setCurrentTab(POI_TAB_INDEX);
  host.setOnTabChangedListener(new OnTabChangeListener(){
    @Override public void onTabChanged(    String tabId){
      if (SEARCH_POI.equals(tabId)) {
        tabinfo.setText(R.string.poi_search_desc);
      }
 else       if (SEARCH_ADDRESS.equals(tabId)) {
        tabinfo.setText(R.string.address_search_desc);
      }
 else       if (SEARCH_LOCATION.equals(tabId)) {
        tabinfo.setText(R.string.navpoint_search_desc);
      }
 else       if (SEARCH_TRANSPORT.equals(tabId)) {
        tabinfo.setText(R.string.transport_search_desc);
      }
 else       if (SEARCH_FAVORITES.equals(tabId)) {
        tabinfo.setText(R.string.favourites_search_desc);
      }
 else       if (SEARCH_HISTORY.equals(tabId)) {
        tabinfo.setText(R.string.history_search_desc);
      }
    }
  }
);
  spinnerAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
  spinner.setAdapter(spinnerAdapter);
  spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener(){
    @Override public void onItemSelected(    AdapterView<?> parent,    View view,    int position,    long id){
      if (position != 0) {
        if (position == POSITION_CURRENT_LOCATION) {
          net.osmand.Location loc=getLocationProvider().getLastKnownLocation();
          if (loc != null && System.currentTimeMillis() - loc.getTime() < 10000) {
            updateLocation(loc);
          }
 else {
            startSearchCurrentLocation();
            searchAroundCurrentLocation=true;
          }
        }
 else {
          searchAroundCurrentLocation=false;
          endSearchCurrentLocation();
          if (position == POSITION_LAST_MAP_VIEW) {
            updateSearchPoint(settings.getLastKnownMapLocation(),getString(R.string.search_position_fixed),true);
          }
 else           if (position == POSITION_FAVORITES) {
            Intent intent=new Intent(SearchActivity.this,FavouritesListActivity.class);
            intent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);
            intent.putExtra(FavouritesListActivity.SELECT_FAVORITE_POINT_INTENT_KEY,(Serializable)null);
            startActivityForResult(intent,REQUEST_FAVORITE_SELECT);
            spinner.setSelection(0);
          }
 else           if (position == POSITION_ADDRESS) {
            Intent intent=new Intent(SearchActivity.this,SearchAddressActivity.class);
            intent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);
            intent.putExtra(SearchAddressActivity.SELECT_ADDRESS_POINT_INTENT_KEY,(String)null);
            startActivityForResult(intent,REQUEST_ADDRESS_SELECT);
            spinner.setSelection(0);
          }
        }
      }
    }
    @Override public void onNothingSelected(    AdapterView<?> parent){
    }
  }
);
  Log.i("net.osmand","Start on create " + (System.currentTimeMillis() - t));
}
