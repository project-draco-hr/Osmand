{
  this.view=view;
  paintBlack=new Paint();
  WindowManager mgr=(WindowManager)view.getContext().getSystemService(Context.WINDOW_SERVICE);
  dm=new DisplayMetrics();
  mgr.getDefaultDisplay().getMetrics(dm);
  scaleCoefficient=dm.density;
  if (Math.min(dm.widthPixels / (dm.density * 160),dm.heightPixels / (dm.density * 160)) > 2.5f) {
    scaleCoefficient*=1.5f;
  }
  roundCorner=3 * scaleCoefficient;
  paintBlack.setStyle(Style.STROKE);
  paintBlack.setColor(Color.BLACK);
  paintBlack.setTextSize(23 * scaleCoefficient);
  paintBlack.setAntiAlias(true);
  paintAlphaGray=new Paint();
  paintAlphaGray.setStyle(Style.FILL_AND_STROKE);
  paintAlphaGray.setColor(Color.LTGRAY);
  paintAlphaGray.setAlpha(180);
  paintRouteDirection=new Paint();
  paintRouteDirection.setStyle(Style.FILL_AND_STROKE);
  paintRouteDirection.setColor(Color.rgb(100,0,255));
  paintRouteDirection.setAntiAlias(true);
  fillBlack=new Paint();
  fillBlack.setStyle(Style.FILL_AND_STROKE);
  fillBlack.setColor(Color.BLACK);
  fillBlack.setAntiAlias(true);
  paintMiniRoute=new Paint();
  paintMiniRoute.setStyle(Style.STROKE);
  paintMiniRoute.setStrokeWidth(35 * scaleCoefficient);
  paintMiniRoute.setColor(Color.BLUE);
  paintMiniRoute.setStrokeJoin(Join.ROUND);
  paintMiniRoute.setStrokeCap(Cap.ROUND);
  paintMiniRoute.setAntiAlias(true);
  fillRed=new Paint();
  fillRed.setStyle(Style.FILL_AND_STROKE);
  fillRed.setColor(Color.RED);
  fillRed.setAntiAlias(true);
  boundsForCompass=new RectF(0,0,35,32);
  boundsForDist=new RectF(35,0,110,32);
  boundsForZoom=new RectF(0,32,35,64);
  boundsForSpeed=new RectF(35,32,110,64);
  boundsForMiniRoute=new RectF(0,64,96,196);
  boundsForLeftTime=new RectF(0,0,75,32);
  scaleRect(boundsForCompass);
  scaleRect(boundsForDist);
  scaleRect(boundsForZoom);
  scaleRect(boundsForSpeed);
  scaleRect(boundsForMiniRoute);
  scaleRect(boundsForLeftTime);
  centerMiniRouteX=(int)(boundsForMiniRoute.width() / 2);
  centerMiniRouteY=(int)(boundsForMiniRoute.top + 3 * boundsForMiniRoute.height() / 4);
  scaleMiniRoute=0.15f;
  pathForCompass=new Path();
  pathForCompass.moveTo(9 * scaleCoefficient,15.5f * scaleCoefficient);
  pathForCompass.lineTo(22f * scaleCoefficient,15.5f * scaleCoefficient);
  pathForCompass.lineTo(15.5f * scaleCoefficient,30f * scaleCoefficient);
  pathForCompass.lineTo(9 * scaleCoefficient,15.5f * scaleCoefficient);
  pathForCompass2=new Path();
  pathForCompass2.moveTo(9 * scaleCoefficient,15.5f * scaleCoefficient);
  pathForCompass2.lineTo(22f * scaleCoefficient,15.5f * scaleCoefficient);
  pathForCompass2.lineTo(15.5f * scaleCoefficient,2f * scaleCoefficient);
  pathForCompass2.lineTo(9 * scaleCoefficient,15.5f * scaleCoefficient);
  pathForTurn=new Path();
  pathTransform=new Matrix();
  pathTransform.postScale(scaleCoefficient,scaleCoefficient);
  pathTransform.postTranslate(boundsForMiniRoute.left,boundsForMiniRoute.top);
  showArrivalTime=OsmandSettings.isShowingArrivalTime(view.getContext());
}
