{
  Amenity am=new Amenity();
  parseAmenity(am,entity);
  am.setType(type);
  am.setSubType(subtype);
  am.setOpeningHours(entity.getTag(OSMTagKey.OPENING_HOURS));
  am.setPhone(entity.getTag(OSMTagKey.PHONE));
  if (am.getPhone() == null) {
    am.setPhone(entity.getTag(OSMTagKey.CONTACT_PHONE));
  }
  String siteUrl=entity.getTag(OSMTagKey.WIKIPEDIA);
  if (siteUrl != null) {
    if (!siteUrl.startsWith("http://")) {
      int i=siteUrl.indexOf(':');
      if (i == -1) {
        siteUrl="http://en.wikipedia.org/wiki/" + siteUrl;
      }
 else {
        siteUrl="http://" + siteUrl.substring(0,i) + ".wikipedia.org/wiki/"+ siteUrl.substring(i + 1);
      }
    }
  }
 else {
    siteUrl=entity.getTag(OSMTagKey.WEBSITE);
    if (siteUrl == null) {
      siteUrl=entity.getTag(OSMTagKey.URL);
      if (siteUrl == null) {
        siteUrl=entity.getTag(OSMTagKey.CONTACT_WEBSITE);
      }
    }
    if (siteUrl != null && !siteUrl.startsWith("http://") && !siteUrl.startsWith("https://")) {
      siteUrl="http://" + siteUrl;
    }
  }
  am.setSite(siteUrl);
  am.setDescription(entity.getTag(OSMTagKey.DESCRIPTION));
  return am;
}
