{
  CurrentRecording recording=plugin.getCurrentRecording();
  IconsCache iconsCache=plugin.getMapActivity().getMyApplication().getIconsCache();
  ImageView leftButtonIcon=(ImageView)view.findViewById(R.id.leftButtonIcon);
  View leftButtonView=view.findViewById(R.id.leftButtonView);
  if (recording.getType() != AVActionType.REC_AUDIO) {
    leftButtonIcon.setImageDrawable(iconsCache.getContentIcon(R.drawable.ic_action_minimize));
    TextView showHideText=(TextView)view.findViewById(R.id.leftButtonText);
    showHideText.setText(showViewfinder ? view.getResources().getString(R.string.shared_string_hide) : view.getResources().getString(R.string.shared_string_show));
    leftButtonView.setVisibility(View.VISIBLE);
    viewfinder.setVisibility(showViewfinder ? View.VISIBLE : View.GONE);
  }
 else {
    leftButtonView.setVisibility(View.INVISIBLE);
    viewfinder.setVisibility(View.GONE);
  }
  leftButtonView.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showHideViewfinder();
    }
  }
);
  View centerButtonView=view.findViewById(R.id.centerButtonView);
  ImageView recIcon=(ImageView)view.findViewById(R.id.centerButtonIcon);
  TextView recText=(TextView)view.findViewById(R.id.centerButtonText);
  View timeView=view.findViewById(R.id.timeView);
switch (recording.getType()) {
case REC_AUDIO:
case REC_VIDEO:
    recIcon.setImageDrawable(iconsCache.getContentIcon(R.drawable.ic_action_rec_stop));
  recText.setText(view.getResources().getString(R.string.shared_string_control_stop));
recText.setVisibility(View.VISIBLE);
updateDuration();
timeView.setVisibility(View.VISIBLE);
break;
case REC_PHOTO:
recIcon.setImageDrawable(iconsCache.getContentIcon(R.drawable.ic_action_photo_dark));
recText.setVisibility(View.GONE);
timeView.setVisibility(View.INVISIBLE);
break;
}
centerButtonView.setOnClickListener(new View.OnClickListener(){
@Override public void onClick(View v){
rec(plugin.getMapActivity());
}
}
);
applyViewfinderVisibility();
}
