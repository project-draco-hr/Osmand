{
  if (multiLine.size() == 1) {
    return new long[]{multiLine.get(0).getFirstNodeId(),multiLine.get(0).getLastNodeId()};
  }
  long n1=0, n2=0;
  if (multiLine.get(0).getFirstNodeId() == multiLine.get(1).getFirstNodeId() || multiLine.get(0).getFirstNodeId() == multiLine.get(1).getLastNodeId()) {
    n1=multiLine.get(0).getLastNodeId();
  }
 else   if (multiLine.get(0).getLastNodeId() == multiLine.get(1).getFirstNodeId() || multiLine.get(0).getLastNodeId() == multiLine.get(1).getLastNodeId()) {
    n1=multiLine.get(0).getFirstNodeId();
  }
  int lastIdx=multiLine.size() - 1;
  if (multiLine.get(lastIdx).getFirstNodeId() == multiLine.get(1).getFirstNodeId() || multiLine.get(lastIdx).getFirstNodeId() == multiLine.get(1).getLastNodeId()) {
    n2=multiLine.get(lastIdx).getLastNodeId();
  }
 else   if (multiLine.get(lastIdx).getLastNodeId() == multiLine.get(lastIdx - 1).getFirstNodeId() || multiLine.get(lastIdx).getLastNodeId() == multiLine.get(lastIdx - 1).getLastNodeId()) {
    n2=multiLine.get(lastIdx).getFirstNodeId();
  }
  return new long[]{n1,n2};
}
