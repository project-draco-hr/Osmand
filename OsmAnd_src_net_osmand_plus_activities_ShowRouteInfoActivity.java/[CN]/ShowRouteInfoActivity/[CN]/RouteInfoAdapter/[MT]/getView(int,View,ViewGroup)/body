{
  View row=convertView;
  if (row == null) {
    LayoutInflater inflater=getLayoutInflater();
    row=inflater.inflate(R.layout.route_info_list_item,parent,false);
  }
  RouteDirectionInfo model=(RouteDirectionInfo)getItem(position);
  TextView label=(TextView)row.findViewById(R.id.description);
  TextView distanceLabel=(TextView)row.findViewById(R.id.distance);
  TextView timeLabel=(TextView)row.findViewById(R.id.time);
  TextView cumulativeDistanceLabel=(TextView)row.findViewById(R.id.cumulative_distance);
  TextView cumulativeTimeLabel=(TextView)row.findViewById(R.id.cumulative_time);
  ImageView icon=(ImageView)row.findViewById(R.id.direction);
  TurnPathHelper.RouteDrawable drawable=new TurnPathHelper.RouteDrawable(getResources(),true);
  drawable.setRouteType(model.getTurnType());
  icon.setImageDrawable(drawable);
  label.setText(model.getDescriptionRoutePart());
  if (model.distance > 0) {
    distanceLabel.setText(OsmAndFormatter.getFormattedDistance(model.distance,getMyApplication()));
    timeLabel.setText(getTimeDescription(model));
    row.setContentDescription(label.getText() + " " + timeLabel.getText());
  }
 else {
    if (label.getText().length() == 0) {
      label.setText(getString((position != lastItemIndex) ? R.string.arrived_at_intermediate_point : R.string.arrived_at_destination));
    }
    distanceLabel.setText("");
    timeLabel.setText("");
    row.setContentDescription("");
  }
  CumulativeInfo cumulativeInfo=getRouteDirectionCumulativeInfo(position);
  cumulativeDistanceLabel.setText(OsmAndFormatter.getFormattedDistance(cumulativeInfo.distance,getMyApplication()));
  cumulativeTimeLabel.setText(Algorithms.formatDuration(cumulativeInfo.time,getMyApplication().accessibilityEnabled()));
  return row;
}
