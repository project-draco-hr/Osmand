{
  if (cancellationSignal.isCanceled()) {
    callback.onLayoutCancelled();
    return;
  }
  pageSize[0]=(float)Math.rint(newAttributes.getMediaSize().getWidthMils() * 72f / 1000f);
  pageSize[1]=(float)Math.rint(newAttributes.getMediaSize().getHeightMils() * 72f / 1000f);
  Margins margins=newAttributes.getMinMargins();
  marginLeft=(float)Math.rint(margins.getLeftMils() * 72 / 1000f);
  marginRight=(float)Math.rint(margins.getRightMils() * 72 / 1000f);
  marginTop=(float)Math.rint(margins.getTopMils() * 72 / 1000f);
  marginBottom=(float)Math.rint(margins.getBottomMils() * 72 / 1000f);
  if (marginLeft == 0f) {
    marginLeft=PDF_DERAULT_MARGINS;
  }
  if (marginRight == 0f) {
    marginRight=PDF_DERAULT_MARGINS;
  }
  if (marginTop == 0f) {
    marginTop=PDF_DERAULT_MARGINS;
  }
  if (marginBottom == 0f) {
    marginBottom=PDF_DERAULT_MARGINS;
  }
  linesPerPage=computeLinesPerPage();
  totalPages=computePageCount();
  if (totalPages > 0) {
    PrintDocumentInfo info=new PrintDocumentInfo.Builder("print_output.pdf").setContentType(PrintDocumentInfo.CONTENT_TYPE_DOCUMENT).setPageCount(totalPages).build();
    callback.onLayoutFinished(info,true);
  }
 else {
    callback.onLayoutFailed("Page count calculation failed.");
  }
}
