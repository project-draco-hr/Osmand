{
  createMapIndexStructure(mapConnection);
  this.mapConnection=mapConnection;
  mapBinaryStat=createStatementMapBinaryInsert(mapConnection);
  mapLowLevelBinaryStat=createStatementLowLevelMapBinaryInsert(mapConnection);
  try {
    mapTree=new RTree[mapZooms.size()];
    for (int i=0; i < mapZooms.size(); i++) {
      File file=new File(rtreeMapIndexNonPackFileName + i);
      if (file.exists()) {
        file.delete();
      }
      mapTree[i]=new RTree(rtreeMapIndexNonPackFileName + i);
    }
  }
 catch (  RTreeException e) {
    throw new IOException(e);
  }
  pStatements.put(mapBinaryStat,0);
  pStatements.put(mapLowLevelBinaryStat,0);
}
