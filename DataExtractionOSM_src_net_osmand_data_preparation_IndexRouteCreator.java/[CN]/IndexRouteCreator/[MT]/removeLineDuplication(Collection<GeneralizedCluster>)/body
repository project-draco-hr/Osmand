{
  for (  GeneralizedCluster cluster : clusters) {
    ArrayList<GeneralizedWay> copy=new ArrayList<GeneralizedWay>(cluster.ways);
    for (    GeneralizedWay gw : copy) {
      if (!cluster.ways.contains(gw)) {
        continue;
      }
      if (gw.size() > 2) {
        float p=DOUGLAS_PEUKER_DISTANCE / 3;
        for (        GeneralizedWay gn : copy) {
          int kmin=checkDistanceToLine(gn,0,true,gw.px.get(0),gw.py.get(0),p);
          int knext=kmin;
          boolean dir=true;
          if (kmin >= 0) {
            knext=checkDistanceToLine(gn,kmin,dir,gw.px.get(1),gw.py.get(1),p);
            if (knext < 0) {
              dir=false;
              knext=checkDistanceToLine(gn,kmin,dir,gw.px.get(1),gw.py.get(1),p);
            }
          }
          if (knext > 0) {
            int prevk=kmin;
            while (gw.size() > 1) {
              prevk=checkDistanceToLine(gn,prevk,dir,gw.px.get(1),gw.py.get(1),p);
              if (prevk < 0) {
                break;
              }
              removePointFromWayAndReplace(cluster,gw,1,gn.px.get(prevk),gn.py.get(prevk));
            }
            removePointFromWayAndReplace(cluster,gw,0,gn.px.get(kmin),gn.py.get(kmin));
            break;
          }
        }
      }
    }
  }
}
