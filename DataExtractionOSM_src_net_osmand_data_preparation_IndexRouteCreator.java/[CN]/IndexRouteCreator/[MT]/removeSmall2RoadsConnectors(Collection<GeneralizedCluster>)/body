{
  for (  GeneralizedCluster cluster : clusters) {
    ArrayList<GeneralizedWay> copy=new ArrayList<GeneralizedWay>(cluster.ways);
    for (    GeneralizedWay gw : copy) {
      if (gw.getDistance() < 500) {
        LinkedHashSet<GeneralizedWay> ll=new LinkedHashSet<GeneralizedWay>();
        for (int i=0; i < gw.size(); i++) {
          getAdjacentRoads(cluster,gw,i,ll);
        }
        if (ll.size() <= 1) {
          removeGeneratedWay(gw,cluster);
        }
 else         if (ll.size() >= 2) {
          boolean intersect=true;
          while (ll.size() > 1 && intersect) {
            Iterator<GeneralizedWay> it=ll.iterator();
            GeneralizedWay first=it.next();
            it.remove();
            intersect=false;
            LinkedHashSet<GeneralizedWay> ls=new LinkedHashSet<GeneralizedWay>();
            for (int j=0; j < first.size(); j++) {
              getAdjacentRoads(cluster,first,j,ls);
              if (ls.containsAll(ll)) {
                intersect=true;
                break;
              }
            }
          }
          if (intersect) {
            removeGeneratedWay(gw,cluster);
          }
        }
      }
    }
  }
}
