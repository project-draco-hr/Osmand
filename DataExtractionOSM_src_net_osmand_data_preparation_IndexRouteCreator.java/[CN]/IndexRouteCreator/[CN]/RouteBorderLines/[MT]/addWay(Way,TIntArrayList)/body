{
  if (leftX == -1) {
    Node n=e.getNodes().get(0);
    leftX=rightX=MapUtils.get31TileNumberX(n.getLongitude());
    topY=bottomY=MapUtils.get31TileNumberY(n.getLatitude());
  }
  int pzx=-1;
  int pzy=-1;
  int px=-1;
  int py=-1;
  for (int i=0; i < e.getNodes().size(); i++) {
    Node n=e.getNodes().get(i);
    if (n != null) {
      int x=MapUtils.get31TileNumberX(n.getLongitude());
      int y=MapUtils.get31TileNumberY(n.getLatitude());
      leftX=Math.min(leftX,x);
      rightX=Math.max(rightX,x);
      bottomY=Math.max(bottomY,y);
      topY=Math.min(topY,y);
      int zx=x >> (31 - zoomToSplit);
      int zy=y >> (31 - zoomToSplit);
      if (i > 0) {
        if (zx != pzx) {
          int cx=Math.max(pzx,zx) << (31 - zoomToSplit);
          int cy=(int)(py + ((float)y - py) * ((float)cx - px) / ((float)x - px));
          addBorderPoint(bx,cx,zx < pzx,cx,cy,e.getId(),outTypes);
        }
        if (zy != pzy) {
          int cy=Math.max(pzy,zy) << (31 - zoomToSplit);
          int cx=(int)(px + ((float)x - px) * ((float)cy - py) / ((float)y - py));
          addBorderPoint(by,cy,zy < pzy,cx,cy,e.getId(),outTypes);
        }
      }
      pzx=zx;
      pzy=zy;
      px=x;
      py=y;
    }
  }
}
