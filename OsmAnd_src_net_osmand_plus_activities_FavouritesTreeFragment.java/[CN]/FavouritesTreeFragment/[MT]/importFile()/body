{
  final File tosave=getMyApplication().getAppPath(FavouritesDbHelper.FILE_TO_SAVE);
  if (!tosave.exists()) {
    AccessibleToast.makeText(getActivity(),MessageFormat.format(getString(R.string.fav_file_to_load_not_found),tosave.getAbsolutePath()),Toast.LENGTH_LONG).show();
  }
 else {
    new AsyncTask<Void,FavouritePoint,String>(){
      @Override protected String doInBackground(      Void... params){
        Set<String> existedPoints=new LinkedHashSet<String>();
        if (!favouritesAdapter.isEmpty()) {
          for (          FavouritePoint fp : helper.getFavouritePoints()) {
            existedPoints.add(fp.getName() + "_" + fp.getCategory());
          }
        }
        GPXFile res=GPXUtilities.loadGPXFile(getMyApplication(),tosave);
        if (res.warning != null) {
          return res.warning;
        }
        for (        WptPt p : res.points) {
          if (existedPoints.contains(p.name) || existedPoints.contains(p.name + "_" + p.category)) {
            continue;
          }
          int c;
          String name=p.name;
          String categoryName=p.category != null ? p.category : "";
          if (name == null) {
            name="";
          }
          if ("".equals(categoryName.trim()) && (c=p.name.lastIndexOf('_')) != -1) {
            categoryName=p.name.substring(c + 1);
            name=p.name.substring(0,c);
          }
          FavouritePoint fp=new FavouritePoint(p.lat,p.lon,name,categoryName);
          fp.setColor(p.getColor(0));
          if (helper.addFavourite(fp)) {
            publishProgress(fp);
          }
        }
        return null;
      }
      @Override protected void onProgressUpdate(      FavouritePoint... values){
        for (        FavouritePoint p : values) {
          favouritesAdapter.addFavoritePoint(p);
        }
      }
      @Override protected void onPreExecute(){
        showProgressBar();
      }
      @Override protected void onPostExecute(      String warning){
        hideProgressBar();
        if (warning == null) {
          AccessibleToast.makeText(getActivity(),R.string.fav_imported_sucessfully,Toast.LENGTH_SHORT).show();
        }
 else {
          AccessibleToast.makeText(getActivity(),warning,Toast.LENGTH_LONG).show();
        }
        favouritesAdapter.synchronizeGroups();
        favouritesAdapter.sort(favoritesComparator);
      }
    }
.execute();
  }
}
