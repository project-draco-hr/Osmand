{
  view=inflater.inflate(R.layout.point_editor_fragment,container,false);
  getEditor().updateLandscapePortrait();
  getEditor().updateNightMode();
  Toolbar toolbar=(Toolbar)view.findViewById(R.id.toolbar);
  toolbar.setTitle(getToolbarTitle());
  toolbar.setNavigationIcon(getMyApplication().getIconsCache().getIcon(R.drawable.abc_ic_ab_back_mtrl_am_alpha));
  toolbar.setNavigationContentDescription(R.string.access_shared_string_navigate_up);
  toolbar.setTitleTextColor(getResources().getColor(getResIdFromAttribute(getMapActivity(),R.attr.pstsTextColor)));
  toolbar.setNavigationOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      dismiss();
    }
  }
);
  Button saveButton=(Button)view.findViewById(R.id.save_button);
  saveButton.setTextColor(getResources().getColor(!getEditor().isLight() ? R.color.osmand_orange : R.color.map_widget_blue));
  saveButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      savePressed();
    }
  }
);
  Button cancelButton=(Button)view.findViewById(R.id.cancel_button);
  cancelButton.setTextColor(getResources().getColor(!getEditor().isLight() ? R.color.osmand_orange : R.color.map_widget_blue));
  cancelButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      cancelled=true;
      dismiss();
    }
  }
);
  Button deleteButton=(Button)view.findViewById(R.id.delete_button);
  deleteButton.setTextColor(getResources().getColor(!getEditor().isLight() ? R.color.osmand_orange : R.color.map_widget_blue));
  deleteButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      deletePressed();
    }
  }
);
  if (getEditor().isNew()) {
    deleteButton.setVisibility(View.GONE);
  }
 else {
    deleteButton.setVisibility(View.VISIBLE);
  }
  view.findViewById(R.id.background_layout).setBackgroundResource(!getEditor().isLight() ? R.color.ctx_menu_info_view_bg_dark : R.color.ctx_menu_info_view_bg_light);
  view.findViewById(R.id.buttons_layout).setBackgroundResource(!getEditor().isLight() ? R.color.ctx_menu_info_view_bg_dark : R.color.ctx_menu_info_view_bg_light);
  view.findViewById(R.id.title_view).setBackgroundResource(!getEditor().isLight() ? R.color.bg_color_dark : R.color.bg_color_light);
  view.findViewById(R.id.description_info_view).setBackgroundResource(!getEditor().isLight() ? R.color.ctx_menu_info_view_bg_dark : R.color.ctx_menu_info_view_bg_light);
  TextView nameCaption=(TextView)view.findViewById(R.id.name_caption);
  AndroidUtils.setTextSecondaryColor(view.getContext(),nameCaption,!getEditor().isLight());
  nameCaption.setText(getNameCaption());
  TextView categoryCaption=(TextView)view.findViewById(R.id.category_caption);
  AndroidUtils.setTextSecondaryColor(view.getContext(),categoryCaption,!getEditor().isLight());
  categoryCaption.setText(getCategoryCaption());
  nameEdit=(EditText)view.findViewById(R.id.name_edit);
  AndroidUtils.setTextPrimaryColor(view.getContext(),nameEdit,!getEditor().isLight());
  AndroidUtils.setHintTextSecondaryColor(view.getContext(),nameEdit,!getEditor().isLight());
  nameEdit.setText(getNameInitValue());
  AutoCompleteTextViewEx categoryEdit=(AutoCompleteTextViewEx)view.findViewById(R.id.category_edit);
  AndroidUtils.setTextPrimaryColor(view.getContext(),categoryEdit,!getEditor().isLight());
  categoryEdit.setText(getCategoryInitValue());
  categoryEdit.setFocusable(false);
  categoryEdit.setOnTouchListener(new View.OnTouchListener(){
    @Override public boolean onTouch(    final View v,    MotionEvent event){
      if (event.getAction() == MotionEvent.ACTION_UP) {
        DialogFragment dialogFragment=SelectCategoryDialogFragment.createInstance(getEditor().getFragmentTag());
        dialogFragment.show(getChildFragmentManager(),SelectCategoryDialogFragment.TAG);
        return true;
      }
      return false;
    }
  }
);
  final EditText descriptionEdit=(EditText)view.findViewById(R.id.description_edit);
  AndroidUtils.setTextPrimaryColor(view.getContext(),descriptionEdit,!getEditor().isLight());
  AndroidUtils.setHintTextSecondaryColor(view.getContext(),descriptionEdit,!getEditor().isLight());
  if (getDescriptionInitValue() != null) {
    descriptionEdit.setText(getDescriptionInitValue());
  }
  if (Build.VERSION.SDK_INT >= 11) {
    view.addOnLayoutChangeListener(new View.OnLayoutChangeListener(){
      @Override public void onLayoutChange(      View v,      int left,      int top,      int right,      int bottom,      int oldLeft,      int oldTop,      int oldRight,      int oldBottom){
        if (descriptionEdit.isFocused()) {
          ScrollView scrollView=(ScrollView)view.findViewById(R.id.editor_scroll_view);
          scrollView.scrollTo(0,bottom);
        }
      }
    }
);
  }
 else {
    ViewTreeObserver vto=view.getViewTreeObserver();
    vto.addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener(){
      @Override public void onGlobalLayout(){
        if (descriptionEdit.isFocused()) {
          ScrollView scrollView=(ScrollView)view.findViewById(R.id.editor_scroll_view);
          scrollView.scrollTo(0,view.getBottom());
        }
      }
    }
);
  }
  ImageView nameImage=(ImageView)view.findViewById(R.id.name_image);
  nameImage.setImageDrawable(getNameIcon());
  ImageView categoryImage=(ImageView)view.findViewById(R.id.category_image);
  categoryImage.setImageDrawable(getCategoryIcon());
  ImageView descriptionImage=(ImageView)view.findViewById(R.id.description_image);
  descriptionImage.setImageDrawable(getRowIcon(R.drawable.ic_action_note_dark));
  if (getMyApplication().accessibilityEnabled()) {
    nameCaption.setFocusable(true);
    categoryCaption.setFocusable(true);
    nameEdit.setHint(R.string.access_hint_enter_name);
    categoryEdit.setHint(R.string.access_hint_enter_category);
    descriptionEdit.setHint(R.string.access_hint_enter_description);
  }
  return view;
}
