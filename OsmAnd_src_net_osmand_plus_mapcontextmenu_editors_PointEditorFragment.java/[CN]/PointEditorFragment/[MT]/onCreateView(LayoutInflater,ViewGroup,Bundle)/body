{
  getActivity().findViewById(R.id.MapHudButtonsOverlay).setVisibility(View.INVISIBLE);
  View view;
  if (getEditor().isLandscapeLayout()) {
    view=inflater.inflate(R.layout.point_editor_fragment_land,container,false);
  }
 else {
    view=inflater.inflate(R.layout.point_editor_fragment,container,false);
  }
  Toolbar toolbar=(Toolbar)view.findViewById(R.id.toolbar);
  toolbar.setTitle(getToolbarTitle());
  toolbar.setNavigationIcon(getMyApplication().getIconsCache().getIcon(R.drawable.abc_ic_ab_back_mtrl_am_alpha));
  toolbar.setTitleTextColor(getResources().getColor(getResIdFromAttribute(getMapActivity(),R.attr.pstsTextColor)));
  toolbar.setNavigationOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      dismiss();
    }
  }
);
  Button saveButton=(Button)toolbar.findViewById(R.id.save_button);
  saveButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      savePressed();
    }
  }
);
  ImageButton deleteButton=(ImageButton)toolbar.findViewById(R.id.delete_button);
  deleteButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      deletePressed();
    }
  }
);
  if (getEditor().isNew()) {
    deleteButton.setVisibility(View.GONE);
  }
 else {
    saveButton.setVisibility(View.GONE);
  }
  TextView headerCaption=(TextView)view.findViewById(R.id.header_caption);
  headerCaption.setText(getHeaderCaption());
  TextView nameCaption=(TextView)view.findViewById(R.id.name_caption);
  nameCaption.setText(getNameCaption());
  TextView categoryCaption=(TextView)view.findViewById(R.id.category_caption);
  categoryCaption.setText(getCategoryCaption());
  EditText nameEdit=(EditText)view.findViewById(R.id.name_edit);
  nameEdit.setText(getNameInitValue());
  AutoCompleteTextViewEx categoryEdit=(AutoCompleteTextViewEx)view.findViewById(R.id.category_edit);
  categoryEdit.setText(getCategoryInitValue());
  categoryEdit.setThreshold(1);
  final FavouritesDbHelper helper=getMyApplication().getFavorites();
  List<FavouritesDbHelper.FavoriteGroup> gs=helper.getFavoriteGroups();
  String[] list=new String[gs.size()];
  for (int i=0; i < list.length; i++) {
    list[i]=gs.get(i).name;
  }
  categoryEdit.setAdapter(new ArrayAdapter<>(getMapActivity(),R.layout.list_textview,list));
  categoryEdit.setOnTouchListener(new View.OnTouchListener(){
    @Override public boolean onTouch(    final View v,    MotionEvent event){
      final EditText editText=(EditText)v;
      final int DRAWABLE_RIGHT=2;
      if (event.getAction() == MotionEvent.ACTION_UP) {
        if (event.getX() >= (editText.getRight() - editText.getCompoundDrawables()[DRAWABLE_RIGHT].getBounds().width() - editText.getPaddingRight())) {
          DialogFragment dialogFragment=SelectCategoryDialogFragment.createInstance();
          dialogFragment.show(getChildFragmentManager(),"SelectCategoryDialogFragment");
          return true;
        }
      }
      return false;
    }
  }
);
  EditText descriptionEdit=(EditText)view.findViewById(R.id.description_edit);
  if (getDescriptionInitValue() != null) {
    descriptionEdit.setText(getDescriptionInitValue());
  }
  ImageView nameImage=(ImageView)view.findViewById(R.id.name_image);
  nameImage.setImageDrawable(getNameIcon());
  ImageView categoryImage=(ImageView)view.findViewById(R.id.category_image);
  categoryImage.setImageDrawable(getCategoryIcon());
  ImageView descriptionImage=(ImageView)view.findViewById(R.id.description_image);
  descriptionImage.setImageDrawable(getRowIcon(R.drawable.ic_action_note_dark));
  return view;
}
