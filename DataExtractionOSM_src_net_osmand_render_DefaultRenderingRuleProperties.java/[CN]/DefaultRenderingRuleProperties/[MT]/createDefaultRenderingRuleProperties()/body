{
  Map<String,RenderingRuleProperty> map=new LinkedHashMap<String,RenderingRuleProperty>();
  registerRule(map,RenderingRuleProperty.createInputStringProperty(TAG));
  registerRule(map,RenderingRuleProperty.createInputStringProperty(VALUE));
  registerRule(map,RenderingRuleProperty.createInputGreaterIntProperty(MINZOOM));
  registerRule(map,RenderingRuleProperty.createInputLessIntProperty(MAXZOOM));
  registerRule(map,RenderingRuleProperty.createInputBooleanProperty(NIGHT_MODE));
  registerRule(map,RenderingRuleProperty.createInputIntProperty(LAYER));
  registerRule(map,RenderingRuleProperty.createOutputIntProperty(ORDER));
  registerRule(map,RenderingRuleProperty.createInputStringProperty(ORDER));
  registerRule(map,RenderingRuleProperty.createOutputIntProperty(TEXT_WRAP_WIDTH));
  registerRule(map,RenderingRuleProperty.createOutputIntProperty(TEXT_DY));
  registerRule(map,RenderingRuleProperty.createOutputIntProperty(TEXT_HALO_RADIUS));
  registerRule(map,RenderingRuleProperty.createOutputIntProperty(TEXT_SIZE));
  registerRule(map,RenderingRuleProperty.createOutputIntProperty(TEXT_ORDER));
  registerRule(map,RenderingRuleProperty.createOutputIntProperty(TEXT_MIN_DISTANCE));
  registerRule(map,RenderingRuleProperty.createOutputColorProperty(TEXT_COLOR));
  registerRule(map,RenderingRuleProperty.createOutputBooleanProperty(TEXT_BOLD));
  registerRule(map,RenderingRuleProperty.createOutputBooleanProperty(TEXT_ON_PATH));
  registerRule(map,RenderingRuleProperty.createOutputStringProperty(ICON));
  registerRule(map,RenderingRuleProperty.createOutputColorProperty(COLOR));
  registerRule(map,RenderingRuleProperty.createOutputColorProperty(COLOR_2));
  registerRule(map,RenderingRuleProperty.createOutputColorProperty(COLOR_3));
  registerRule(map,RenderingRuleProperty.createOutputFloatProperty(STROKE_WIDTH));
  registerRule(map,RenderingRuleProperty.createOutputFloatProperty(STROKE_WIDTH_2));
  registerRule(map,RenderingRuleProperty.createOutputFloatProperty(STROKE_WIDTH_3));
  registerRule(map,RenderingRuleProperty.createOutputStringProperty(PATH_EFFECT));
  registerRule(map,RenderingRuleProperty.createOutputStringProperty(PATH_EFFECT_2));
  registerRule(map,RenderingRuleProperty.createOutputStringProperty(PATH_EFFECT_3));
  registerRule(map,RenderingRuleProperty.createOutputStringProperty(CAP));
  registerRule(map,RenderingRuleProperty.createOutputStringProperty(CAP_2));
  registerRule(map,RenderingRuleProperty.createOutputStringProperty(CAP_3));
  registerRule(map,RenderingRuleProperty.createOutputStringProperty(SHADER));
  registerRule(map,RenderingRuleProperty.createOutputColorProperty(SHADOW_COLOR));
  registerRule(map,RenderingRuleProperty.createOutputIntProperty(SHADOW_RADIUS));
  return map;
}
