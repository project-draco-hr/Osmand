{
  long time=System.currentTimeMillis();
  if (start != null && end != null) {
    if (log.isInfoEnabled()) {
      log.info("Start finding route from " + start + " to "+ end+ " using "+ type.getName());
    }
    try {
      RouteCalculationResult res;
      if (gpxRoute != null && !gpxRoute.isEmpty()) {
        float minDist=Integer.MAX_VALUE;
        int startI=0;
        int endI=gpxRoute.size();
        if (start != null) {
          for (int i=0; i < gpxRoute.size(); i++) {
            float d=gpxRoute.get(i).distanceTo(start);
            if (d < minDist) {
              startI=i;
              minDist=d;
            }
          }
        }
 else {
          start=gpxRoute.get(0);
        }
        Location l=new Location("temp");
        l.setLatitude(end.getLatitude());
        l.setLongitude(end.getLongitude());
        minDist=Integer.MAX_VALUE;
        for (int i=startI; i < gpxRoute.size(); i++) {
          float d=gpxRoute.get(i).distanceTo(l);
          if (d < minDist) {
            endI=i + 1;
            minDist=d;
          }
        }
        res=new RouteCalculationResult(new ArrayList<Location>(gpxRoute.subList(startI,endI)),null,start,end,null);
        addMissingTurnsToRoute(res,start,end,mode,ctx);
      }
 else       if (type == RouteService.YOURS) {
        res=findYOURSRoute(start,end,mode,fast);
        addMissingTurnsToRoute(res,start,end,mode,ctx);
      }
 else       if (type == RouteService.OSMAND) {
        res=findVectorMapsRoute(start,end,mode,fast,(OsmandApplication)ctx.getApplicationContext());
        addMissingTurnsToRoute(res,start,end,mode,ctx);
      }
 else {
        res=findCloudMadeRoute(start,end,mode,ctx,fast);
        addMissingTurnsToRoute(res,start,end,mode,ctx);
      }
      if (log.isInfoEnabled() && res.locations != null) {
        log.info("Finding route contained " + res.locations.size() + " points for "+ (System.currentTimeMillis() - time)+ " ms");
      }
      return res;
    }
 catch (    IOException e) {
      log.error("Failed to find route ",e);
    }
catch (    ParserConfigurationException e) {
      log.error("Failed to find route ",e);
    }
catch (    SAXException e) {
      log.error("Failed to find route ",e);
    }
  }
  return new RouteCalculationResult(null);
}
