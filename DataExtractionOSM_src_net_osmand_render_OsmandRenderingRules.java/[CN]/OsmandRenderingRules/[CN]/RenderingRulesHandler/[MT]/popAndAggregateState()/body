{
  FilterState pop=(FilterState)stack.pop();
  List<FilterState> res=null;
  for (int i=stack.size() - 1; i >= 0; i--) {
    Object o=stack.get(i);
    if (o instanceof FilterState) {
      if (res == null) {
        mergeStateInto((FilterState)o,pop);
      }
 else {
        for (        FilterState f : res) {
          mergeStateInto((FilterState)o,f);
        }
      }
    }
 else {
      List<FilterState> filters=((SwitchState)o).filters;
      if (res == null) {
        res=new ArrayList<FilterState>();
        res.add(pop);
      }
      int l=res.size();
      for (int t=0; t < filters.size() - 1; t++) {
        for (int j=0; j < l; j++) {
          FilterState n=new FilterState();
          mergeStateInto(res.get(j),n);
          res.add(n);
        }
      }
      for (int j=0; j < res.size(); j++) {
        mergeStateInto(filters.get(j % filters.size()),res.get(j));
      }
    }
  }
  if (res == null) {
    return Collections.singletonList(pop);
  }
 else {
    return res;
  }
}
