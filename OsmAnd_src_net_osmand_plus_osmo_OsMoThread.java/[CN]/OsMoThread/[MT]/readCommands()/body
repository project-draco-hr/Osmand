{
  boolean hasSomethingToRead=true;
  while (hasSomethingToRead) {
    pendingReadCommand.clear();
    int read=activeChannel.read(pendingReadCommand);
    if (!pendingReadCommand.hasRemaining()) {
      hasSomethingToRead=true;
    }
 else {
      hasSomethingToRead=false;
    }
    if (read == -1) {
      reconnect=true;
    }
 else     if (read > 0) {
      byte[] ar=pendingReadCommand.array();
      String res=new String(ar,0,read);
      readCommand+=res;
      int i;
      while ((i=readCommand.indexOf('\n')) != -1) {
        String cmd=readCommand.substring(0,i);
        readCommand=readCommand.substring(i + 1);
        if (sessionInfo != null && sessionInfo.clientDecCypher != null) {
          try {
            final byte[] inMsg=android.util.Base64.decode(cmd.getBytes(),android.util.Base64.DEFAULT);
            final byte[] byts=sessionInfo.clientDecCypher.doFinal(inMsg);
            cmd=new String(byts);
          }
 catch (          Exception e) {
            exc("Error decrypting",e);
          }
        }
        queueOfMessages.add(cmd.replace("\\n","\n"));
      }
    }
  }
  if (queueOfMessages.size() > 0) {
    processReadMessages();
  }
}
