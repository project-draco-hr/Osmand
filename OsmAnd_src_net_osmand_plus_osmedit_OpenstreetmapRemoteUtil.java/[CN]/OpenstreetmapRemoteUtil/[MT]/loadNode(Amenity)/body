{
  if (n.getId() % 2 == 1) {
    return null;
  }
  long nodeId=n.getId() >> 1;
  try {
    String res=sendRequest(getSiteApi() + "api/0.6/node/" + nodeId,"GET",null,ctx.getString(R.string.loading_poi_obj) + nodeId,false);
    if (res != null) {
      OsmBaseStorage st=new OsmBaseStorage();
      st.parseOSM(new ByteArrayInputStream(res.getBytes("UTF-8")),null,null,true);
      EntityId id=new Entity.EntityId(EntityType.NODE,nodeId);
      Node entity=(Node)st.getRegisteredEntities().get(id);
      entityInfo=st.getRegisteredEntityInfo().get(id);
      entityInfoId=id;
      if (entity != null && MapUtils.getDistance(entity.getLatLon(),n.getLocation()) < 50) {
        PoiType poiType=n.getType().getPoiTypeByKeyName(n.getSubType());
        if (poiType.getOsmValue().equals(entity.getTag(poiType.getOsmTag()))) {
          entity.removeTag(poiType.getOsmTag());
          entity.putTag(EditPoiData.POI_TYPE_TAG,poiType.getTranslation());
        }
 else {
        }
        return entity;
      }
      return null;
    }
  }
 catch (  Exception e) {
    log.error("Loading node failed " + nodeId,e);
    ctx.runInUIThread(new Runnable(){
      @Override public void run(){
        AccessibleToast.makeText(ctx,ctx.getResources().getString(R.string.shared_string_io_error),Toast.LENGTH_LONG).show();
      }
    }
);
  }
  return null;
}
