{
  int leftX=MapUtils.get31TileNumberX(dataBox.left);
  int rightX=MapUtils.get31TileNumberX(dataBox.right);
  int bottomY=MapUtils.get31TileNumberY(dataBox.bottom);
  int topY=MapUtils.get31TileNumberY(dataBox.top);
  long now=System.currentTimeMillis();
  for (  String mapName : files.keySet()) {
    if (!nativeFiles.contains(mapName)) {
      nativeFiles.add(mapName);
      if (!library.initMapFile(mapName)) {
        continue;
      }
      log.debug("Native resource " + mapName + " initialized");
    }
  }
  NativeSearchResult resultHandler=library.searchObjectsForRendering(leftX,rightX,topY,bottomY,zoom,renderingReq,PerformanceFlags.checkForDuplicateObjectIds,this,context.getString(R.string.switch_to_raster_map_to_see));
  if (checkWhetherInterrupted()) {
    resultHandler.deleteNativeResult();
    return false;
  }
  if (cNativeObjects != null) {
    cNativeObjects.deleteNativeResult();
  }
  cNativeObjects=resultHandler;
  cObjectsBox=dataBox;
  log.info(String.format("BLat=%s, TLat=%s, LLong=%s, RLong=%s, zoom=%s",dataBox.bottom,dataBox.top,dataBox.left,dataBox.right,zoom));
  log.info(String.format("Native search: %s ms ",System.currentTimeMillis() - now));
  return true;
}
