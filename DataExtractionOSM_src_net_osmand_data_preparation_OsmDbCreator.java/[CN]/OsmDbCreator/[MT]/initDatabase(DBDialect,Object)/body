{
  this.dialect=dialect;
  if (dialect == DBDialect.NOSQL) {
    database=(DBAccessor)databaseConn;
    batch=new DBWriteBatch();
    options=new WriteOptions();
  }
 else {
    this.dbConn=(Connection)databaseConn;
    Statement stat=dbConn.createStatement();
    dialect.deleteTableIfExists("node",stat);
    stat.executeUpdate("create table node (id bigint primary key, latitude double, longitude double, tags blob)");
    stat.executeUpdate("create index IdIndex ON node (id)");
    dialect.deleteTableIfExists("ways",stat);
    stat.executeUpdate("create table ways (id bigint, node bigint, ord smallint, tags blob, boundary smallint, primary key (id, ord))");
    stat.executeUpdate("create index IdWIndex ON ways (id)");
    dialect.deleteTableIfExists("relations",stat);
    stat.executeUpdate("create table relations (id bigint, member bigint, type smallint, role varchar(1024), ord smallint, tags blob, primary key (id, ord))");
    stat.executeUpdate("create index IdRIndex ON relations (id)");
    stat.close();
    prepNode=dbConn.prepareStatement("insert into node values (?, ?, ?, ?)");
    prepWays=dbConn.prepareStatement("insert into ways values (?, ?, ?, ?, ?)");
    prepRelations=dbConn.prepareStatement("insert into relations values (?, ?, ?, ?, ?, ?)");
    dbConn.setAutoCommit(false);
  }
}
