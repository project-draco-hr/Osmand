{
  for (  TransportIndex index : transportIndexes) {
    if (index.stopsFileLength == 0 || index.right < req.left || index.left > req.right || index.top > req.bottom || index.bottom < req.top) {
      continue;
    }
    codedIS.seek(index.stopsFileOffset);
    int oldLimit=codedIS.pushLimit(index.stopsFileLength);
    int offset=req.searchResults.size();
    transportAdapter.searchTransportTreeBounds(0,0,0,0,req);
    codedIS.popLimit(oldLimit);
    if (req.stringTable != null) {
      transportAdapter.initializeStringTable(index,req.stringTable);
      for (int i=offset; i < req.searchResults.size(); i++) {
        TransportStop st=req.searchResults.get(i);
        transportAdapter.initializeNames(req.stringTable,st);
      }
    }
  }
  if (req.numberOfVisitedObjects > 0) {
    log.debug("Search is done. Visit " + req.numberOfVisitedObjects + " objects. Read "+ req.numberOfAcceptedObjects+ " objects.");
    log.debug("Read " + req.numberOfReadSubtrees + " subtrees. Go through "+ req.numberOfAcceptedSubtrees+ " subtrees.");
  }
  return req.getSearchResults();
}
