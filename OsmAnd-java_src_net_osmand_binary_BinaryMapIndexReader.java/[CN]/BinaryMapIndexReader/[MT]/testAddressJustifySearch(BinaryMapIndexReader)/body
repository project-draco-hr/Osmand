{
  final String streetName="Logger";
  final double lat=52.28212d;
  final double lon=4.86269d;
  final List<Street> streetsList=new ArrayList<Street>();
  SearchRequest<MapObject> req=buildAddressByNameRequest(new ResultMatcher<MapObject>(){
    @Override public boolean publish(    MapObject object){
      if (object instanceof Street && object.getName().equalsIgnoreCase(streetName)) {
        if (MapUtils.getDistance(object.getLocation(),lat,lon) < 20000) {
          streetsList.add((Street)object);
          return true;
        }
        return false;
      }
      return false;
    }
    @Override public boolean isCancelled(){
      return false;
    }
  }
,streetName);
  reader.searchAddressDataByName(req);
  TreeMap<MapObject,Street> resMap=new TreeMap<MapObject,Street>(new Comparator<MapObject>(){
    @Override public int compare(    MapObject o1,    MapObject o2){
      LatLon l1=o1.getLocation();
      LatLon l2=o2.getLocation();
      if (l1 == null || l2 == null) {
        return l2 == l1 ? 0 : (l1 == null ? -1 : 1);
      }
      return Double.compare(MapUtils.getDistance(l1,lat,lon),MapUtils.getDistance(l2,lat,lon));
    }
  }
);
  for (  Street s : streetsList) {
    resMap.put(s,s);
    reader.preloadBuildings(s,null);
    for (    Building b : s.getBuildings()) {
      if (MapUtils.getDistance(b.getLocation(),lat,lon) < 100) {
        resMap.put(b,s);
      }
    }
  }
  for (  MapObject e : resMap.keySet()) {
    Street s=resMap.get(e);
    if (e instanceof Building && MapUtils.getDistance(e.getLocation(),lat,lon) < 40) {
      Building b=(Building)e;
      System.out.println(b.getName() + "   " + s);
    }
 else     if (e instanceof Street) {
      System.out.println(s + "   " + ((Street)s).getCity());
    }
  }
}
