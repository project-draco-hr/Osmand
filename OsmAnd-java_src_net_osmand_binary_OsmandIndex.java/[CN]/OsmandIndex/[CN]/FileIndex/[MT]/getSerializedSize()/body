{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (hasSize()) {
    size+=com.google.protobuf.CodedOutputStream.computeInt64Size(1,getSize());
  }
  if (hasDateModified()) {
    size+=com.google.protobuf.CodedOutputStream.computeInt64Size(2,getDateModified());
  }
  if (hasFileName()) {
    size+=com.google.protobuf.CodedOutputStream.computeStringSize(3,getFileName());
  }
  if (hasVersion()) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(4,getVersion());
  }
  for (  net.osmand.binary.OsmandIndex.AddressPart element : getAddressIndexList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(8,element);
  }
  for (  net.osmand.binary.OsmandIndex.TransportPart element : getTransportIndexList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(9,element);
  }
  for (  net.osmand.binary.OsmandIndex.PoiPart element : getPoiIndexList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(10,element);
  }
  for (  net.osmand.binary.OsmandIndex.MapPart element : getMapIndexList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(11,element);
  }
  for (  net.osmand.binary.OsmandIndex.RoutingPart element : getRoutingIndexList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(12,element);
  }
  memoizedSerializedSize=size;
  return size;
}
