{
  boolean leftSide=settings.LEFT_SIDE_NAVIGATION.get();
  RouteCalculationResult res=provider.calculateRouteImpl(start,end,mode,service,context,gpxRoute,previousRoute,fastRoute,leftSide,this);
  if (interrupted) {
    return;
  }
synchronized (RoutingHelper.this) {
    if (res.isCalculated()) {
      setNewRoute(res,start);
    }
 else {
      evalWaitInterval=evalWaitInterval * 3 / 2;
      evalWaitInterval=Math.min(evalWaitInterval,120000);
    }
    currentRunningJob=null;
  }
  if (res.isCalculated()) {
    showMessage(context.getString(R.string.new_route_calculated_dist) + ": " + OsmAndFormatter.getFormattedDistance(res.getWholeDistance(),context));
  }
 else   if (service != RouteService.OSMAND && !settings.isInternetConnectionAvailable()) {
    showMessage(context.getString(R.string.error_calculating_route) + ":\n" + context.getString(R.string.internet_connection_required_for_online_route),Toast.LENGTH_LONG);
  }
 else {
    if (res.getErrorMessage() != null) {
      showMessage(context.getString(R.string.error_calculating_route) + ":\n" + res.getErrorMessage(),Toast.LENGTH_LONG);
    }
 else {
      showMessage(context.getString(R.string.empty_route_calculated),Toast.LENGTH_LONG);
    }
  }
  lastTimeEvaluatedRoute=System.currentTimeMillis();
}
