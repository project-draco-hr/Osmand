{
  if (start == null || end == null) {
    return;
  }
  RouteService serviceToUse=settings.ROUTER_SERVICE.get();
  if (serviceToUse == RouteService.OSMAND && !settings.USE_OSMAND_ROUTING_SERVICE_ALWAYS.get()) {
    double distance=MapUtils.getDistance(end,start.getLatitude(),start.getLongitude());
    if (distance > DISTANCE_TO_USE_OSMAND_ROUTER) {
      if (System.currentTimeMillis() - lastTimeEvaluatedRoute > evalWaitInterval) {
        showMessage(context.getString(R.string.osmand_routing_experimental),Toast.LENGTH_LONG);
      }
      serviceToUse=RouteService.CLOUDMADE;
    }
  }
  final RouteService service=serviceToUse;
  if (currentRunningJob == null) {
    if (System.currentTimeMillis() - lastTimeEvaluatedRoute > evalWaitInterval) {
      final boolean fastRouteMode=settings.FAST_ROUTE_MODE.get();
synchronized (this) {
        currentRunningJob=new Thread(new Runnable(){
          @Override public void run(){
            RouteCalculationResult res=provider.calculateRouteImpl(start,end,mode,service,context,gpxRoute,fastRouteMode);
synchronized (RoutingHelper.this) {
              if (res.isCalculated()) {
                setNewRoute(res);
                evalWaitInterval=3000;
              }
 else {
                evalWaitInterval=evalWaitInterval * 4 / 3;
                if (evalWaitInterval > 120000) {
                  evalWaitInterval=120000;
                }
              }
              currentRunningJob=null;
            }
            if (res.isCalculated()) {
              int[] dist=res.getListDistance();
              int l=dist != null && dist.length > 0 ? dist[0] : 0;
              showMessage(context.getString(R.string.new_route_calculated_dist) + ": " + OsmAndFormatter.getFormattedDistance(l,context));
            }
 else             if (service != RouteService.OSMAND && !settings.isInternetConnectionAvailable()) {
              showMessage(context.getString(R.string.error_calculating_route) + ":\n" + context.getString(R.string.internet_connection_required_for_online_route),Toast.LENGTH_LONG);
            }
 else {
              if (res.getErrorMessage() != null) {
                showMessage(context.getString(R.string.error_calculating_route) + ":\n" + res.getErrorMessage(),Toast.LENGTH_LONG);
              }
 else               if (res.getLocations() == null) {
                showMessage(context.getString(R.string.error_calculating_route_occured),Toast.LENGTH_LONG);
              }
 else {
                showMessage(context.getString(R.string.empty_route_calculated),Toast.LENGTH_LONG);
              }
            }
            lastTimeEvaluatedRoute=System.currentTimeMillis();
          }
        }
,"Calculating route");
        currentRunningJob.start();
      }
    }
  }
}
