{
  if (finalLocation == null || currentLocation == null) {
    makeUturnWhenPossible=false;
    return null;
  }
  boolean calculateRoute=false;
synchronized (this) {
    Location locationProjection=currentLocation;
    if (route.isEmpty()) {
      calculateRoute=true;
    }
 else {
      boolean finished=updateCurrentRouteStatus(currentLocation);
      if (finished) {
        return null;
      }
      List<Location> routeNodes=route.locations;
      int currentRoute=route.currentRoute;
      if (currentRoute > 0) {
        double dist=getOrthogonalDistance(currentLocation,routeNodes.get(currentRoute - 1),routeNodes.get(currentRoute));
        if (dist > 2 * POSITION_TOLERANCE) {
          log.info("Recalculate route, because correlation  : " + dist);
          calculateRoute=true;
        }
        double projectDist=mode == ApplicationMode.CAR ? POSITION_TOLERANCE : POSITION_TOLERANCE / 2;
        if (dist < projectDist) {
          Location nextLocation=routeNodes.get(currentRoute);
          LatLon project=getProject(currentLocation,routeNodes.get(currentRoute - 1),routeNodes.get(currentRoute));
          locationProjection.setLatitude(project.getLatitude());
          locationProjection.setLongitude(project.getLongitude());
          if (locationProjection.hasBearing()) {
            float bearingTo=locationProjection.bearingTo(nextLocation);
            locationProjection.setBearing(bearingTo);
          }
        }
      }
      Location next=route.getNextRouteLocation();
      boolean wrongMovementDirection=checkWrongMovementDirection(currentLocation,next);
      if (wrongMovementDirection && currentLocation.distanceTo(routeNodes.get(currentRoute)) > 2 * POSITION_TOLERANCE) {
        log.info("Recalculate route, because wrong movement direction: " + currentLocation.distanceTo(routeNodes.get(currentRoute)));
        calculateRoute=true;
      }
      boolean uTurnIsNeeded=identifyUTurnIsNeeded(currentLocation);
      if (calculateRoute == false || uTurnIsNeeded == true) {
        voiceRouter.updateStatus(currentLocation,uTurnIsNeeded);
      }
    }
    lastFixedLocation=locationProjection;
  }
  if (calculateRoute) {
    recalculateRouteInBackground(lastFixedLocation,finalLocation,currentGPXRoute);
  }
  return lastFixedLocation;
}
