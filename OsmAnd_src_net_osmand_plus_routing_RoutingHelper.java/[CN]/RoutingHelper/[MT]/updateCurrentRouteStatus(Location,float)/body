{
  List<Location> routeNodes=route.getImmutableAllLocations();
  int currentRoute=route.currentRoute;
  while (currentRoute + 1 < routeNodes.size()) {
    double dist=currentLocation.distanceTo(routeNodes.get(currentRoute));
    if (currentRoute > 0) {
      dist=getOrthogonalDistance(currentLocation,routeNodes.get(currentRoute - 1),routeNodes.get(currentRoute));
    }
    boolean processed=false;
    boolean longDistance=dist >= 250;
    int newCurrentRoute=lookAheadFindMinOrthogonalDistance(currentLocation,routeNodes,currentRoute,longDistance ? 15 : 8);
    double newDist=getOrthogonalDistance(currentLocation,routeNodes.get(newCurrentRoute),routeNodes.get(newCurrentRoute + 1));
    if (longDistance) {
      if (newDist < dist) {
        if (log.isDebugEnabled()) {
          log.debug("Processed by distance : (new) " + newDist + " (old) "+ dist);
        }
        processed=true;
      }
    }
 else     if (newDist < dist || newDist < 10) {
      if (dist > posTolerance) {
        processed=true;
        if (log.isDebugEnabled()) {
          log.debug("Processed by distance : " + newDist + " "+ dist);
        }
      }
 else {
        if (currentLocation.hasBearing() || lastFixedLocation != null) {
          float bearingToRoute=currentLocation.bearingTo(routeNodes.get(currentRoute));
          float bearingRouteNext=routeNodes.get(newCurrentRoute).bearingTo(routeNodes.get(newCurrentRoute + 1));
          float bearingMotion=currentLocation.hasBearing() ? currentLocation.getBearing() : lastFixedLocation.bearingTo(currentLocation);
          double diff=Math.abs(MapUtils.degreesDiff(bearingMotion,bearingToRoute));
          double diffToNext=Math.abs(MapUtils.degreesDiff(bearingMotion,bearingRouteNext));
          if (diff > diffToNext) {
            if (log.isDebugEnabled()) {
              log.debug("Processed point bearing deltas : " + diff + " "+ diffToNext);
            }
            processed=true;
          }
        }
      }
    }
    if (processed) {
      route.updateCurrentRoute(newCurrentRoute + 1);
      currentRoute=newCurrentRoute + 1;
    }
 else {
      break;
    }
  }
  if (route.getIntermediatePointsToPass() > 0 && route.getDistanceToNextIntermediate(lastFixedLocation) < POSITION_TOLERANCE * 2 * settings.ARRIVAL_DISTANCE_FACTOR.get() && !isRoutePlanningMode) {
    showMessage(app.getString(R.string.arrived_at_intermediate_point));
    route.passIntermediatePoint();
    TargetPointsHelper targets=app.getTargetPointsHelper();
    String name="";
    if (intermediatePoints != null && !intermediatePoints.isEmpty()) {
      LatLon rm=intermediatePoints.remove(0);
      List<TargetPoint> ll=targets.getIntermediatePointsNavigation();
      int ind=-1;
      for (int i=0; i < ll.size(); i++) {
        if (ll.get(i).point != null && MapUtils.getDistance(ll.get(i).point,rm) < 5) {
          name=ll.get(i).getOnlyName();
          ind=i;
          break;
        }
      }
      if (ind >= 0) {
        targets.removeWayPoint(false,ind);
      }
    }
    if (isFollowingMode) {
      voiceRouter.arrivedIntermediatePoint(name);
    }
    while (intermediatePoints != null && route.getIntermediatePointsToPass() < intermediatePoints.size()) {
      intermediatePoints.remove(0);
    }
  }
  Location lastPoint=routeNodes.get(routeNodes.size() - 1);
  if (currentRoute > routeNodes.size() - 3 && currentLocation.distanceTo(lastPoint) < (((float)settings.getApplicationMode().getArrivalDistance()) * settings.ARRIVAL_DISTANCE_FACTOR.get()) && !isRoutePlanningMode) {
    TargetPointsHelper targets=app.getTargetPointsHelper();
    TargetPoint tp=targets.getPointToNavigate();
    String description=tp == null ? "" : tp.getOnlyName();
    if (isFollowingMode) {
      voiceRouter.arrivedDestinationPoint(description);
    }
    boolean onDestinationReached=OsmandPlugin.onDestinationReached();
    onDestinationReached&=app.getAppCustomization().onDestinationReached();
    if (onDestinationReached) {
      clearCurrentRoute(null,null);
      setRoutePlanningMode(false);
      app.runInUIThread(new Runnable(){
        @Override public void run(){
          settings.LAST_ROUTING_APPLICATION_MODE=settings.APPLICATION_MODE.get();
          settings.APPLICATION_MODE.set(settings.DEFAULT_APPLICATION_MODE.get());
        }
      }
);
      finishCurrentRoute();
      return true;
    }
  }
  return false;
}
