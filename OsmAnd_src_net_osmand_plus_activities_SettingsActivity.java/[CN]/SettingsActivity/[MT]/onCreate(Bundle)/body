{
  CustomTitleBar titleBar=new CustomTitleBar(this,R.string.settings_activity,R.drawable.tab_settings_screen_icon,R.style.CustomTitleTheme_Preference);
  super.onCreate(savedInstanceState);
  addPreferencesFromResource(R.xml.settings_pref);
  titleBar.afterSetContentView();
  String[] entries;
  String[] entrieValues;
  PreferenceScreen screen=getPreferenceScreen();
  osmandSettings=getMyApplication().getSettings();
  OsmandPlugin.onSettingsActivityCreate(this,screen);
  registerBooleanPreference(osmandSettings.SHOW_VIEW_ANGLE,screen);
  registerBooleanPreference(osmandSettings.USE_ENGLISH_NAMES,screen);
  registerBooleanPreference(osmandSettings.AUTO_ZOOM_MAP,screen);
  registerBooleanPreference(osmandSettings.FAST_ROUTE_MODE,screen);
  registerBooleanPreference(osmandSettings.USE_COMPASS_IN_NAVIGATION,screen);
  registerBooleanPreference(osmandSettings.LEFT_SIDE_NAVIGATION,screen);
  registerBooleanPreference(osmandSettings.SHOW_ALTITUDE_INFO,screen);
  CheckBoxPreference nativeCheckbox=registerBooleanPreference(osmandSettings.NATIVE_RENDERING,screen);
  if ((NativeOsmandLibrary.isLoaded() && !NativeOsmandLibrary.isSupported()) || osmandSettings.NATIVE_RENDERING_FAILED.get()) {
    nativeCheckbox.setEnabled(false);
  }
  registerListPreference(osmandSettings.ROTATE_MAP,screen,new String[]{getString(R.string.rotate_map_none_opt),getString(R.string.rotate_map_bearing_opt),getString(R.string.rotate_map_compass_opt)},new Integer[]{OsmandSettings.ROTATE_MAP_NONE,OsmandSettings.ROTATE_MAP_BEARING,OsmandSettings.ROTATE_MAP_COMPASS});
  registerListPreference(osmandSettings.MAP_SCREEN_ORIENTATION,screen,new String[]{getString(R.string.map_orientation_portrait),getString(R.string.map_orientation_landscape),getString(R.string.map_orientation_default)},new Integer[]{ActivityInfo.SCREEN_ORIENTATION_PORTRAIT,ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE,ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED});
  entries=new String[DayNightMode.values().length];
  for (int i=0; i < entries.length; i++) {
    entries[i]=DayNightMode.values()[i].toHumanString(this);
  }
  registerListPreference(osmandSettings.DAYNIGHT_MODE,screen,entries,DayNightMode.values());
  MetricsConstants[] mvls=new MetricsConstants[]{MetricsConstants.KILOMETERS_AND_METERS,MetricsConstants.MILES_AND_FOOTS};
  entries=new String[mvls.length];
  for (int i=0; i < entries.length; i++) {
    entries[i]=mvls[i].toHumanString(this);
  }
  registerListPreference(osmandSettings.METRIC_SYSTEM,screen,entries,mvls);
  entrieValues=new String[]{"","en","cs","nl","fr","ka","de","hu","it","jp","ko","lv","mr","no","pl","pt","ro","ru","sk","es","vi"};
  entries=new String[]{getString(R.string.system_locale),"English","Czech","Dutch","French","Georgian","German","Hungarian","Italian","Japanese","Korean","Latvian","Marathi","Norwegian","Polish","Portuguese","Romanian","Russian","Slovak","Spanish","Vietnamese"};
  registerListPreference(osmandSettings.PREFERRED_LOCALE,screen,entries,entrieValues);
  Integer[] intValues=new Integer[]{0,5,10,15,20,25,30,45,60,90};
  entries=new String[intValues.length];
  entries[0]=getString(R.string.auto_follow_route_never);
  for (int i=1; i < intValues.length; i++) {
    entries[i]=(int)intValues[i] + " " + getString(R.string.int_seconds);
  }
  registerListPreference(osmandSettings.AUTO_FOLLOW_ROUTE,screen,entries,intValues);
  Float[] floatValues=new Float[]{0.6f,0.8f,1.0f,1.2f,1.5f};
  entries=new String[floatValues.length];
  for (int i=0; i < floatValues.length; i++) {
    entries[i]=(int)(floatValues[i] * 100) + " %";
  }
  registerListPreference(osmandSettings.MAP_TEXT_SIZE,screen,entries,floatValues);
  entries=new String[RouteService.values().length];
  for (int i=0; i < entries.length; i++) {
    entries[i]=RouteService.values()[i].getName();
  }
  registerListPreference(osmandSettings.ROUTER_SERVICE,screen,entries,RouteService.values());
  entries=new String[ApplicationMode.values().length];
  for (int i=0; i < entries.length; i++) {
    entries[i]=ApplicationMode.values()[i].toHumanString(this);
  }
  registerListPreference(osmandSettings.APPLICATION_MODE,screen,entries,ApplicationMode.values());
  Collection<String> rendererNames=getMyApplication().getRendererRegistry().getRendererNames();
  entries=(String[])rendererNames.toArray(new String[rendererNames.size()]);
  registerListPreference(osmandSettings.RENDERER,screen,entries,entries);
  createCustomRenderingProperties(false);
  applicationModePreference=(ListPreference)screen.findPreference(osmandSettings.APPLICATION_MODE.getId());
  applicationModePreference.setOnPreferenceChangeListener(this);
  dayNightModePreference=(ListPreference)screen.findPreference(osmandSettings.DAYNIGHT_MODE.getId());
  dayNightModePreference.setOnPreferenceChangeListener(this);
  routerServicePreference=(ListPreference)screen.findPreference(osmandSettings.ROUTER_SERVICE.getId());
  routerServicePreference.setOnPreferenceChangeListener(this);
  Preference localIndexes=(Preference)screen.findPreference(OsmandSettings.LOCAL_INDEXES);
  localIndexes.setOnPreferenceClickListener(this);
  applicationDir=(EditTextPreference)screen.findPreference(OsmandSettings.EXTERNAL_STORAGE_DIR);
  applicationDir.setOnPreferenceChangeListener(this);
  bidforfix=(Preference)screen.findPreference("bidforfix");
  bidforfix.setOnPreferenceClickListener(this);
  plugins=(Preference)screen.findPreference("plugins");
  plugins.setOnPreferenceClickListener(this);
  Intent intent=getIntent();
  if (intent != null && intent.getIntExtra(INTENT_KEY_SETTINGS_SCREEN,0) != 0) {
    int s=intent.getIntExtra(INTENT_KEY_SETTINGS_SCREEN,0);
    String pref=null;
    if (s == SCREEN_GENERAL_SETTINGS) {
      pref=SCREEN_ID_GENERAL_SETTINGS;
    }
 else     if (s == SCREEN_NAVIGATION_SETTINGS) {
      pref=SCREEN_ID_NAVIGATION_SETTINGS;
    }
 else     if (s == SCREEN_MONITORING_SETTINGS) {
      pref=SCREEN_ID_MONITORING_SETTINGS;
    }
    if (pref != null) {
      Preference toOpen=screen.findPreference(pref);
      if (toOpen instanceof PreferenceScreen) {
        setPreferenceScreen((PreferenceScreen)toOpen);
      }
    }
  }
}
