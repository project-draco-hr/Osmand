{
  CustomTitleBar titleBar=new CustomTitleBar(this,R.string.settings_activity,R.drawable.tab_settings_screen_icon);
  setTheme(R.style.CustomTitleTheme_Preference);
  super.onCreate(savedInstanceState);
  addPreferencesFromResource(R.xml.settings_pref);
  titleBar.afterSetContentView();
  String[] entries;
  String[] entrieValues;
  PreferenceScreen screen=getPreferenceScreen();
  osmandSettings=getMyApplication().getSettings();
  PreferenceCategory cat=(PreferenceCategory)screen.findPreference("global_app_settings");
  if (!Version.isBlackberry(this)) {
    CheckBoxPreference nativeCheckbox=createCheckBoxPreference(osmandSettings.SAFE_MODE,R.string.safe_mode,R.string.safe_mode_description);
    if ((NativeOsmandLibrary.isLoaded() && !NativeOsmandLibrary.isSupported()) || osmandSettings.NATIVE_RENDERING_FAILED.get()) {
      nativeCheckbox.setEnabled(false);
      nativeCheckbox.setChecked(true);
    }
    cat.addPreference(nativeCheckbox);
    applicationDir=new EditTextPreference(this);
    applicationDir.setTitle(R.string.application_dir);
    applicationDir.setKey("external_storage_dir");
    applicationDir.setDialogTitle(R.string.application_dir);
    applicationDir.setOnPreferenceChangeListener(this);
    cat.addPreference(applicationDir);
  }
  OsmandPlugin.onSettingsActivityCreate(this,screen);
  registerBooleanPreference(osmandSettings.USE_ENGLISH_NAMES,screen);
  registerBooleanPreference(osmandSettings.AUTO_ZOOM_MAP,screen);
  registerBooleanPreference(osmandSettings.FAST_ROUTE_MODE,screen);
  registerBooleanPreference(osmandSettings.SNAP_TO_ROAD,screen);
  registerBooleanPreference(osmandSettings.USE_COMPASS_IN_NAVIGATION,screen);
  registerBooleanPreference(osmandSettings.LEFT_SIDE_NAVIGATION,screen);
  registerListPreference(osmandSettings.MAP_SCREEN_ORIENTATION,screen,new String[]{getString(R.string.map_orientation_portrait),getString(R.string.map_orientation_landscape),getString(R.string.map_orientation_default)},new Integer[]{ActivityInfo.SCREEN_ORIENTATION_PORTRAIT,ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE,ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED});
  MetricsConstants[] mvls=new MetricsConstants[]{MetricsConstants.KILOMETERS_AND_METERS,MetricsConstants.MILES_AND_FOOTS,MetricsConstants.MILES_AND_YARDS};
  entries=new String[mvls.length];
  for (int i=0; i < entries.length; i++) {
    entries[i]=mvls[i].toHumanString(this);
  }
  registerListPreference(osmandSettings.METRIC_SYSTEM,screen,entries,mvls);
  entrieValues=new String[]{"","en","af","hy","eu","bs","bg","ca","cs","nl","fi","fr","ka","de","el","he","hi","hu","id","it","ja","ko","lv","lt","mr","no","pl","pt","ro","ru","sk","sl","es","sv","uk","vi"};
  entries=new String[]{getString(R.string.system_locale),"English","Afrikaans","Armenian","Basque","Bosnian","Bulgarian","Catalan","Czech","Dutch","Finnish","French","Georgian","German","Greek","Hebrew","Hindi","Hungarian","Indonesian","Italian","Japanese","Korean","Latvian","Lithuanian","Marathi","Norwegian","Polish","Portuguese","Romanian","Russian","Slovak","Slovenian","Spanish","Swedish","Ukrainian","Vietnamese"};
  registerListPreference(osmandSettings.PREFERRED_LOCALE,screen,entries,entrieValues);
  Integer[] intValues=new Integer[]{0,5,10,15,20,25,30,45,60,90};
  entries=new String[intValues.length];
  entries[0]=getString(R.string.auto_follow_route_never);
  for (int i=1; i < intValues.length; i++) {
    entries[i]=(int)intValues[i] + " " + getString(R.string.int_seconds);
  }
  registerListPreference(osmandSettings.AUTO_FOLLOW_ROUTE,screen,entries,intValues);
  entries=new String[RouteService.values().length];
  for (int i=0; i < entries.length; i++) {
    entries[i]=RouteService.values()[i].getName();
  }
  registerListPreference(osmandSettings.ROUTER_SERVICE,screen,entries,RouteService.values());
  routerServicePreference=(ListPreference)screen.findPreference(osmandSettings.ROUTER_SERVICE.getId());
  routerServicePreference.setOnPreferenceChangeListener(this);
  Preference localIndexes=(Preference)screen.findPreference(OsmandSettings.LOCAL_INDEXES);
  localIndexes.setOnPreferenceClickListener(this);
  bidforfix=(Preference)screen.findPreference("bidforfix");
  bidforfix.setOnPreferenceClickListener(this);
  plugins=(Preference)screen.findPreference("plugins");
  plugins.setOnPreferenceClickListener(this);
  avoidRouting=(Preference)screen.findPreference("avoid_in_routing");
  avoidRouting.setOnPreferenceClickListener(this);
  showAlarms=(Preference)screen.findPreference("show_routing_alarms");
  showAlarms.setOnPreferenceClickListener(this);
  Intent intent=getIntent();
  if (intent != null && intent.getIntExtra(INTENT_KEY_SETTINGS_SCREEN,0) != 0) {
    int s=intent.getIntExtra(INTENT_KEY_SETTINGS_SCREEN,0);
    String pref=null;
    if (s == SCREEN_GENERAL_SETTINGS) {
      pref=SCREEN_ID_GENERAL_SETTINGS;
    }
 else     if (s == SCREEN_NAVIGATION_SETTINGS) {
      pref=SCREEN_ID_NAVIGATION_SETTINGS;
    }
    if (pref != null) {
      Preference toOpen=screen.findPreference(pref);
      if (toOpen instanceof PreferenceScreen) {
        setPreferenceScreen((PreferenceScreen)toOpen);
      }
    }
  }
}
