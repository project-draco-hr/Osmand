{
  String f;
  if (parseSmallFile) {
    f=pathToOsmFile;
  }
 else {
    f=pathToOsmBz2File;
  }
  long st=System.currentTimeMillis();
  Region country;
  if (parseOSM) {
    country=readCountry(f,new ConsoleProgressImplementation());
  }
 else {
    country=new Region(null);
    country.setStorage(new OsmBaseStorage());
  }
  OsmExtractionUI ui=new OsmExtractionUI(country);
  ui.createUI();
  List<Long> interestedObjects=new ArrayList<Long>();
  MapUtils.addIdsToList(waysManager.getAllObjects(),interestedObjects);
  if (writeTestOsmFile != null) {
    OSMStorageWriter writer=new OSMStorageWriter(country.getStorage().getRegisteredEntities());
    OutputStream output=new FileOutputStream(writeTestOsmFile);
    if (writeTestOsmFile.endsWith(".bz2")) {
      output.write('B');
      output.write('Z');
      output=new CBZip2OutputStream(output);
    }
    writer.saveStorage(output,interestedObjects,false);
    output.close();
  }
  System.out.println();
  System.out.println("USED Memory " + (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) / 1e6);
  System.out.println("TIME : " + (System.currentTimeMillis() - st));
}
