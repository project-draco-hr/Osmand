{
  super.onDraw(canvas);
  if (pathForTurn != null) {
    turnImminent=RoutingHelper.turnImminent();
    if (turnImminent == false) {
      paintRouteDirection.setColor(Color.rgb(250,222,35));
    }
 else {
      paintRouteDirection.setColor(Color.rgb(255,35,0));
    }
    canvas.translate(0,3 * scaleCoefficient);
    canvas.drawPath(pathForTurn,paintRouteDirection);
    canvas.drawPath(pathForTurn,paintBlack);
    if (exitOut != null) {
      drawShadowText(canvas,exitOut,(getWWidth()) / 2 - 7 * scaleCoefficient,getWHeight() / 2 - textPaint.getTextSize() / 2 + 3 * scaleCoefficient,textPaint);
    }
    String text=OsmAndFormatter.getFormattedDistance(nextTurnDirection,getContext());
    String subtext=null;
    makeUturnWhenPossible=RoutingHelper.makeUturnWhenPossible();
    if (makeUturnWhenPossible == true) {
      text="ASAP";
    }
    int ls=text.lastIndexOf(' ');
    float st=0;
    if (ls != -1) {
      subtext=text.substring(ls + 1);
      text=text.substring(0,ls);
      st=textPaint.measureText(subtext);
    }
    float mt=textPaint.measureText(text);
    float startX=Math.max((getWWidth() - st - mt) / 2,2 * scaleCoefficient);
    drawShadowText(canvas,text,startX,getWHeight() - 5 * scaleCoefficient,textPaint);
    if (subtext != null) {
      drawShadowText(canvas,subtext,startX + 2 * scaleCoefficient + mt,getWHeight() - 5 * scaleCoefficient,subtextPaint);
    }
  }
}
