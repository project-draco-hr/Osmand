{
  super.onDraw(canvas);
  if (pathForTurn != null) {
    if (turnImminent > 0) {
      paintRouteDirection.setColor(getResources().getColor(R.color.nav_arrow));
    }
 else     if (turnImminent == 0) {
      paintRouteDirection.setColor(getResources().getColor(R.color.nav_arrow_imminent));
    }
 else {
      paintRouteDirection.setColor(getResources().getColor(R.color.nav_arrow_distant));
    }
    canvas.translate(0,3 * scaleCoefficient);
    canvas.drawPath(pathForTurn,paintRouteDirection);
    canvas.drawPath(pathForTurn,paintBlack);
    if (exitOut != null && !horisontalMini && !makeUturnWhenPossible) {
      drawShadowText(canvas,exitOut,width / 2 - 7 * scaleCoefficient,height / 2 + textPaint.getTextSize() / 2 - 3 * scaleCoefficient,textPaint);
    }
    String text=OsmAndFormatter.getFormattedDistance(nextTurnDirection,getContext());
    String subtext=null;
    if (makeUturnWhenPossible == true) {
      text=getResources().getString(R.string.asap);
    }
    int ls=text.lastIndexOf(' ');
    float st=0;
    if (ls != -1) {
      subtext=text.substring(ls + 1);
      text=text.substring(0,ls);
      st=textPaint.measureText(subtext);
    }
    float mt=textPaint.measureText(text);
    if (!horisontalMini) {
      float startX=Math.max((getWWidth() - st - mt) / 2,2 * scaleCoefficient);
      drawShadowText(canvas,text,startX,getWHeight() - 3 * scaleCoefficient,textPaint);
      if (subtext != null) {
        drawShadowText(canvas,subtext,startX + 2 * scaleCoefficient + mt,getWHeight() - 4 * scaleCoefficient,subtextPaint);
      }
    }
 else {
      drawShadowText(canvas,text,72 * scaleCoefficient / miniCoeff + 2 * scaleCoefficient,height / 2 + 7 * scaleCoefficient,textPaint);
      if (subtext != null) {
        drawShadowText(canvas,subtext,72 * scaleCoefficient / miniCoeff + mt + 2 * scaleCoefficient,height / 2 + 7 * scaleCoefficient,subtextPaint);
      }
    }
  }
}
