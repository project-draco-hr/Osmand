{
  final List<Object> objects=getListObjects();
  List<Object> activeObjects=getActiveObjects(objects);
  final StableArrayAdapter listAdapter=new StableArrayAdapter(getMyApplication(),R.layout.waypoint_reached,R.id.title,objects,activeObjects){
    @Override public void buildDividers(){
      dividers=getCustomDividers(getObjects());
    }
    @Override public View getView(    final int position,    View convertView,    ViewGroup parent){
      View v=convertView;
      Object obj=getItem(position);
      boolean labelView=(obj instanceof Integer);
      boolean topDividerView=(obj instanceof Boolean) && ((Boolean)obj);
      boolean bottomDividerView=(obj instanceof Boolean) && !((Boolean)obj);
      if (labelView) {
        v=createItemForCategory((Integer)obj);
        AndroidUtils.setListItemBackground(MapMarkersActivity.this,v,nightMode);
      }
 else       if (topDividerView) {
        v=getLayoutInflater().inflate(R.layout.card_top_divider,null);
      }
 else       if (bottomDividerView) {
        v=getLayoutInflater().inflate(R.layout.card_bottom_divider,null);
      }
 else       if (obj instanceof MapMarker) {
        MapMarker marker=(MapMarker)obj;
        v=updateMapMarkerItemView(v,marker);
        AndroidUtils.setListItemBackground(MapMarkersActivity.this,v,nightMode);
      }
      return v;
    }
  }
;
  for (  Object p : objects) {
    if (p instanceof MapMarker) {
      final MapMarker marker=(MapMarker)p;
      if (marker.getOriginalPointDescription() != null && marker.getOriginalPointDescription().isSearchingAddress(this)) {
        GeocodingLookupService.AddressLookupRequest lookupRequest=new GeocodingLookupService.AddressLookupRequest(marker.point,new GeocodingLookupService.OnAddressLookupResult(){
          @Override public void geocodingDone(          String address){
            reloadListAdapter();
          }
        }
,null);
        getMyApplication().getGeocodingLookupService().lookupAddress(lookupRequest);
      }
    }
  }
  return listAdapter;
}
