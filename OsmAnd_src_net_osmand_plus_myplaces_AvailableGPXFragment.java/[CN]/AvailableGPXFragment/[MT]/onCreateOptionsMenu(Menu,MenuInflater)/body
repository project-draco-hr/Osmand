{
  menu.clear();
  MenuItem mi=createMenuItem(menu,SEARCH_ID,R.string.search_poi_filter,R.drawable.ic_action_search_dark,R.drawable.ic_action_search_dark,MenuItemCompat.SHOW_AS_ACTION_ALWAYS | MenuItemCompat.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW);
  SearchView searchView=new SearchView(getActivity());
  FavoritesActivity.updateSearchView(getActivity(),searchView);
  MenuItemCompat.setActionView(mi,searchView);
  searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener(){
    @Override public boolean onQueryTextSubmit(    String query){
      allGpxAdapter.getFilter().filter(query);
      return true;
    }
    @Override public boolean onQueryTextChange(    String newText){
      allGpxAdapter.getFilter().filter(newText);
      return true;
    }
  }
);
  MenuItemCompat.setOnActionExpandListener(mi,new MenuItemCompat.OnActionExpandListener(){
    @Override public boolean onMenuItemActionExpand(    MenuItem item){
      return true;
    }
    @Override public boolean onMenuItemActionCollapse(    MenuItem item){
      new Handler().postDelayed(new Runnable(){
        public void run(){
          hideProgressBar();
        }
      }
,100);
      return true;
    }
  }
);
  if (AndroidUiHelper.isOrientationPortrait(getActivity())) {
    menu=((FavoritesActivity)getActivity()).getClearToolbar(true).getMenu();
  }
 else {
    ((FavoritesActivity)getActivity()).getClearToolbar(false);
  }
  optionsMenuAdapter=new ContextMenuAdapter();
  ItemClickListener listener=new ContextMenuAdapter.ItemClickListener(){
    @Override public boolean onContextMenuClick(    ArrayAdapter<?> adapter,    final int itemId,    int pos,    boolean isChecked){
      if (itemId == R.string.local_index_mi_reload) {
        asyncLoader=new LoadGpxTask();
        asyncLoader.execute(getActivity());
      }
 else       if (itemId == R.string.shared_string_show_on_map) {
        openShowOnMapMode();
      }
 else       if (itemId == R.string.shared_string_delete) {
        openSelectionMode(itemId,R.drawable.ic_action_delete_dark,R.drawable.ic_action_delete_dark,new DialogInterface.OnClickListener(){
          @Override public void onClick(          DialogInterface dialog,          int which){
            doAction(itemId);
          }
        }
);
      }
      return true;
    }
  }
;
  optionsMenuAdapter.addItem(new ContextMenuItem.ItemBuilder().setTitleId(R.string.shared_string_show_on_map,getActivity()).setIcon(R.drawable.ic_show_on_map).setListener(listener).createItem());
  optionsMenuAdapter.addItem(new ContextMenuItem.ItemBuilder().setTitleId(R.string.shared_string_delete,getActivity()).setIcon(R.drawable.ic_action_delete_dark).setListener(listener).createItem());
  optionsMenuAdapter.addItem(new ContextMenuItem.ItemBuilder().setTitleId(R.string.local_index_mi_reload,getActivity()).setIcon(R.drawable.ic_action_refresh_dark).setListener(listener).createItem());
  OsmandPlugin.onOptionsMenuActivity(getActivity(),this,optionsMenuAdapter);
  for (int j=0; j < optionsMenuAdapter.length(); j++) {
    final MenuItem item;
    item=menu.add(0,optionsMenuAdapter.getElementId(j),j + 1,optionsMenuAdapter.getItemName(j));
    MenuItemCompat.setShowAsAction(item,MenuItemCompat.SHOW_AS_ACTION_ALWAYS);
    if (AndroidUiHelper.isOrientationPortrait(getActivity())) {
      item.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener(){
        @Override public boolean onMenuItemClick(        MenuItem menuItem){
          onOptionsItemSelected(item);
          return true;
        }
      }
);
    }
    OsmandApplication app=getMyApplication();
    if (optionsMenuAdapter.getImage(app,j,isLightActionBar()) != null) {
      item.setIcon(optionsMenuAdapter.getImage(app,j,isLightActionBar()));
    }
  }
}
