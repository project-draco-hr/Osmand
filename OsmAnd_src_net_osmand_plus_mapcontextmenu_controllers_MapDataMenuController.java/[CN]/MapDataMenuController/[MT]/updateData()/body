{
  if (indexItem == null) {
    otherIndexItems=new LinkedList<>(downloadThread.getIndexes().getIndexItems(mapObject.getWorldRegion()));
    Iterator<IndexItem> it=otherIndexItems.iterator();
    while (it.hasNext()) {
      IndexItem i=it.next();
      if (i.getType() == DownloadActivityType.NORMAL_FILE) {
        indexItem=i;
        it.remove();
        break;
      }
    }
  }
  leftDownloadButtonController.visible=true;
  leftDownloadButtonController.leftIconId=R.drawable.ic_action_import;
  if (backuped) {
    leftDownloadButtonController.caption=getMapActivity().getString(R.string.local_index_mi_restore);
  }
 else   if (indexItem != null) {
    if ((indexItem.getType() == DownloadActivityType.SRTM_COUNTRY_FILE || indexItem.getType() == DownloadActivityType.HILLSHADE_FILE) && srtmDisabled) {
      leftDownloadButtonController.caption=getMapActivity().getString(R.string.get_plugin);
      leftDownloadButtonController.leftIconId=0;
    }
 else     if (indexItem.isOutdated()) {
      leftDownloadButtonController.caption=getMapActivity().getString(R.string.shared_string_update);
    }
 else     if (!downloaded) {
      leftDownloadButtonController.caption=getMapActivity().getString(R.string.shared_string_download);
    }
 else {
      leftDownloadButtonController.visible=false;
    }
  }
 else {
    leftDownloadButtonController.visible=false;
  }
  rightDownloadButtonController.visible=downloaded;
  topRightTitleButtonController.visible=(otherIndexItems != null && otherIndexItems.size() > 0) || (otherLocalIndexInfos != null && otherLocalIndexInfos.size() > 0);
  boolean downloadIndexes=getMapActivity().getMyApplication().getSettings().isInternetConnectionAvailable() && !downloadThread.getIndexes().isDownloadedFromInternet && !downloadThread.getIndexes().downloadFromInternetFailed;
  boolean isDownloading=indexItem != null && downloadThread.isDownloading(indexItem);
  if (isDownloading) {
    titleProgressController.setMapDownloadMode();
    if (downloadThread.getCurrentDownloadingItem() == indexItem) {
      titleProgressController.indeterminate=false;
      titleProgressController.progress=downloadThread.getCurrentDownloadingItemProgress();
    }
 else {
      titleProgressController.indeterminate=true;
      titleProgressController.progress=0;
    }
    double mb=indexItem.getArchiveSizeMB();
    String v;
    if (titleProgressController.progress != -1) {
      v=getMapActivity().getString(R.string.value_downloaded_of_max,mb * titleProgressController.progress / 100,mb);
    }
 else {
      v=getMapActivity().getString(R.string.file_size_in_mb,mb);
    }
    if (indexItem.getType() == DownloadActivityType.ROADS_FILE) {
      titleProgressController.caption=indexItem.getType().getString(getMapActivity()) + " ??? " + v;
    }
 else {
      titleProgressController.caption=v;
    }
    titleProgressController.visible=true;
  }
 else   if (downloadIndexes) {
    titleProgressController.setIndexesDownloadMode();
    titleProgressController.visible=true;
  }
 else {
    titleProgressController.visible=false;
  }
}
