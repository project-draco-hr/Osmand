{
  for (  SearchWord sw : phrase.getWords()) {
    if (sw.getResult() != null && sw.getResult().file != null) {
      phrase.selectFile(sw.getResult().file);
    }
  }
  phrase.sortFiles();
  ArrayList<SearchCoreAPI> lst=new ArrayList<>(apis);
  Collections.sort(lst,new Comparator<SearchCoreAPI>(){
    @Override public int compare(    SearchCoreAPI o1,    SearchCoreAPI o2){
      return Algorithms.compare(o1.getSearchPriority(phrase),o2.getSearchPriority(phrase));
    }
  }
);
  for (  SearchCoreAPI api : lst) {
    if (matcher.isCancelled()) {
      break;
    }
    if (api.getSearchPriority(phrase) == -1) {
      continue;
    }
    try {
      api.search(phrase,matcher);
      matcher.apiSearchFinished(api,phrase);
    }
 catch (    Throwable e) {
      e.printStackTrace();
      LOG.error(e.getMessage(),e);
    }
  }
}
