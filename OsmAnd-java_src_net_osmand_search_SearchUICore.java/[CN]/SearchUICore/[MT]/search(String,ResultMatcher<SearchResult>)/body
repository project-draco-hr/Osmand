{
  final int request=requestNumber.incrementAndGet();
  final SearchPhrase phrase=this.phrase.generateNewPhrase(text,searchSettings);
  this.phrase=phrase;
  SearchResultCollection quickRes=new SearchResultCollection(phrase);
  filterCurrentResults(quickRes.searchResults,phrase);
  LOG.info("> Search phrase " + phrase + " "+ quickRes.searchResults.size());
  singleThreadedExecutor.submit(new Runnable(){
    @Override public void run(){
      try {
        SearchResultMatcher rm=new SearchResultMatcher(matcher,request,requestNumber,totalLimit);
        if (TIMEOUT_BETWEEN_CHARS > 0) {
          Thread.sleep(TIMEOUT_BETWEEN_CHARS);
        }
        if (rm.isCancelled()) {
          return;
        }
        searchInBackground(phrase,rm);
        if (!rm.isCancelled()) {
          SearchResultCollection collection=new SearchResultCollection(phrase);
          collection.addSearchResults(rm.getRequestResults(),true,true);
          LOG.info(">> Search phrase " + phrase + " "+ rm.getRequestResults().size());
          currentSearchResult=collection;
          if (onResultsComplete != null) {
            onResultsComplete.run();
          }
        }
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
    }
  }
);
  return quickRes;
}
