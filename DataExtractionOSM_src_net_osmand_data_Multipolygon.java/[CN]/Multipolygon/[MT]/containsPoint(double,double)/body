{
  updateCacheOfRings();
  if (maxLat + 1 < latitude || minLat - 1 > latitude || maxLon + 1 < longitude || minLon - 1 > longitude) {
    return false;
  }
  Ring containedInOuter=null;
  SortedSet<Ring> outers=new TreeSet<Ring>(getOuterRings());
  for (  Ring outer : outers) {
    if (outer.containsPoint(latitude,longitude)) {
      containedInOuter=outer;
      break;
    }
  }
  if (containedInOuter == null) {
    return false;
  }
  SortedSet<Ring> inners=new TreeSet<Ring>(getInnerRings());
  Ring containedInInner=null;
  for (  Ring inner : inners) {
    if (inner.containsPoint(latitude,longitude)) {
      containedInInner=inner;
      break;
    }
  }
  if (containedInInner == null)   return true;
  return !containedInInner.isIn(containedInOuter);
}
