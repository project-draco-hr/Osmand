{
  updateCacheOfRings();
  if (maxLat + 0.3 < latitude || minLat - 0.3 > latitude || maxLon + 0.3 < longitude || minLon - 0.3 > longitude) {
    return false;
  }
  Ring containedInOuter=null;
  for (  Ring outer : outerRings) {
    if (outer.containsPoint(latitude,longitude)) {
      containedInOuter=outer;
      break;
    }
  }
  if (containedInOuter == null) {
    return false;
  }
  Ring containedInInner=null;
  for (  Ring inner : innerRings) {
    if (inner.containsPoint(latitude,longitude)) {
      containedInInner=inner;
      break;
    }
  }
  if (containedInInner == null)   return true;
  if (outerRings.size() == 1) {
    return false;
  }
  Set<Ring> s=cacheContainedInnerInOuter.get(containedInInner);
  if (s == null) {
    throw new IllegalStateException();
  }
  return !s.contains(containedInOuter);
}
