{
  String ref=null;
  if (name.charAt(0) == MapRenderingTypes.REF_CHAR) {
    ref=name.substring(1);
    name="";
    for (int k=0; k < ref.length(); k++) {
      if (ref.charAt(k) == MapRenderingTypes.REF_CHAR) {
        if (k < ref.length() - 1) {
          name=ref.substring(k + 1);
        }
        ref=ref.substring(0,k);
        break;
      }
    }
  }
  if (ref != null && ref.trim().length() > 0) {
    render.setInitialTagValueZoom(pair.tag,pair.value,rc.zoom);
    render.setIntFilter(render.ALL.R_TEXT_LENGTH,ref.length());
    render.setBooleanFilter(render.ALL.R_REF,true);
    if (render.search(RenderingRulesStorage.TEXT_RULES)) {
      if (render.getIntPropertyValue(render.ALL.R_TEXT_SIZE) > 0) {
        TextDrawInfo text=new TextDrawInfo(ref);
        text.fillProperties(render,xText,yText);
        rc.textToDraw.add(text);
      }
    }
  }
  render.setInitialTagValueZoom(pair.tag,pair.value,rc.zoom);
  render.setIntFilter(render.ALL.R_TEXT_LENGTH,name.length());
  render.setBooleanFilter(render.ALL.R_REF,false);
  if (render.search(RenderingRulesStorage.TEXT_RULES)) {
    if (render.getIntPropertyValue(render.ALL.R_TEXT_SIZE) > 0) {
      TextDrawInfo info=new TextDrawInfo(name);
      info.fillProperties(render,xText,yText);
      rc.textToDraw.add(info);
    }
  }
}
