{
  Collections.sort(rc.iconsToDraw,new Comparator<IconDrawInfo>(){
    @Override public int compare(    IconDrawInfo object1,    IconDrawInfo object2){
      return object1.iconOrder - object2.iconOrder;
    }
  }
);
  QuadRect bounds=new QuadRect(0,0,rc.width,rc.height);
  bounds.inset(-bounds.width() / 4,-bounds.height() / 4);
  QuadTree<RectF> boundIntersections=new QuadTree<RectF>(bounds,4,0.6f);
  List<RectF> result=new ArrayList<RectF>();
  for (  IconDrawInfo icon : rc.iconsToDraw) {
    if (icon.resId != null) {
      Bitmap ico=RenderingIcons.getIcon(context,icon.resId,true);
      if (ico != null) {
        if (icon.y >= 0 && icon.y < rc.height && icon.x >= 0 && icon.x < rc.width) {
          int visbleWidth=icon.iconSize >= 0 ? (int)icon.iconSize : ico.getWidth();
          int visbleHeight=icon.iconSize >= 0 ? (int)icon.iconSize : ico.getHeight();
          boolean intersects=false;
          float coeff=rc.getDensityValue(rc.screenDensityRatio * rc.textScale);
          RectF rf=calculateRect(rc,icon,ico.getWidth(),ico.getHeight());
          RectF visibleRect=null;
          if (visbleHeight > 0 && visbleWidth > 0) {
            visibleRect=calculateRect(rc,icon,visbleWidth,visbleHeight);
            boundIntersections.queryInBox(new QuadRect(visibleRect.left,visibleRect.top,visibleRect.right,visibleRect.bottom),result);
            for (            RectF r : result) {
              if (r.intersects(visibleRect.left,visibleRect.top,visibleRect.right,visibleRect.bottom)) {
                intersects=true;
                break;
              }
            }
          }
          if (!intersects) {
            Bitmap shield=icon.shieldId == null ? null : RenderingIcons.getIcon(context,icon.shieldId,true);
            if (shield != null) {
              RectF shieldRf=calculateRect(rc,icon,shield.getWidth(),shield.getHeight());
              if (coeff != 1f) {
                Rect src=new Rect(0,0,shield.getWidth(),shield.getHeight());
                drawBitmap(cv,shield,shieldRf,src);
              }
 else {
                drawBitmap(cv,shield,shieldRf);
              }
            }
            if (coeff != 1f) {
              Rect src=new Rect(0,0,ico.getWidth(),ico.getHeight());
              drawBitmap(cv,RenderingIcons.getIcon(context,icon.resId_1,true),rf,src);
              drawBitmap(cv,ico,rf,src);
              drawBitmap(cv,RenderingIcons.getIcon(context,icon.resId2,true),rf,src);
              drawBitmap(cv,RenderingIcons.getIcon(context,icon.resId3,true),rf,src);
              drawBitmap(cv,RenderingIcons.getIcon(context,icon.resId4,true),rf,src);
              drawBitmap(cv,RenderingIcons.getIcon(context,icon.resId5,true),rf,src);
            }
 else {
              drawBitmap(cv,RenderingIcons.getIcon(context,icon.resId_1,true),rf);
              drawBitmap(cv,ico,rf);
              drawBitmap(cv,RenderingIcons.getIcon(context,icon.resId2,true),rf);
              drawBitmap(cv,RenderingIcons.getIcon(context,icon.resId3,true),rf);
              drawBitmap(cv,RenderingIcons.getIcon(context,icon.resId4,true),rf);
              drawBitmap(cv,RenderingIcons.getIcon(context,icon.resId5,true),rf);
            }
            if (visibleRect != null) {
              visibleRect.inset(-visibleRect.width() / 4,-visibleRect.height() / 4);
              boundIntersections.insert(visibleRect,new QuadRect(visibleRect.left,visibleRect.top,visibleRect.right,visibleRect.bottom));
            }
          }
        }
      }
    }
    if (rc.interrupted) {
      return;
    }
  }
}
