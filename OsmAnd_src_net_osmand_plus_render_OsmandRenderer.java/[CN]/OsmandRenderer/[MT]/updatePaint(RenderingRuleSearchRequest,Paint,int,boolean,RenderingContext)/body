{
  RenderingRuleProperty rColor;
  RenderingRuleProperty rStrokeW;
  RenderingRuleProperty rCap;
  RenderingRuleProperty rPathEff;
  if (ind == 0) {
    rColor=req.ALL.R_COLOR;
    rStrokeW=req.ALL.R_STROKE_WIDTH;
    rCap=req.ALL.R_CAP;
    rPathEff=req.ALL.R_PATH_EFFECT;
  }
 else   if (ind == 1) {
    rColor=req.ALL.R_COLOR_2;
    rStrokeW=req.ALL.R_STROKE_WIDTH_2;
    rCap=req.ALL.R_CAP_2;
    rPathEff=req.ALL.R_PATH_EFFECT_2;
  }
 else {
    rColor=req.ALL.R_COLOR_3;
    rStrokeW=req.ALL.R_STROKE_WIDTH_3;
    rCap=req.ALL.R_CAP_3;
    rPathEff=req.ALL.R_PATH_EFFECT_3;
  }
  if (area) {
    if (!req.isSpecified(rColor) && !req.isSpecified(req.ALL.R_SHADER)) {
      return false;
    }
    p.setStyle(Style.FILL_AND_STROKE);
    p.setStrokeWidth(0);
  }
 else {
    if (!req.isSpecified(rStrokeW)) {
      return false;
    }
    p.setStyle(Style.STROKE);
    p.setStrokeWidth(req.getFloatPropertyValue(rStrokeW));
    String cap=req.getStringPropertyValue(rCap);
    if (!Algoritms.isEmpty(cap)) {
      p.setStrokeCap(Cap.valueOf(cap.toUpperCase()));
    }
 else {
      p.setStrokeCap(Cap.BUTT);
    }
    String pathEffect=req.getStringPropertyValue(rPathEff);
    if (!Algoritms.isEmpty(pathEffect)) {
      p.setPathEffect(getDashEffect(pathEffect));
    }
 else {
      p.setPathEffect(null);
    }
  }
  p.setColor(req.getIntPropertyValue(rColor));
  if (ind == 0) {
    String resId=req.getStringPropertyValue(req.ALL.R_SHADER);
    if (resId != null) {
      p.setColor(Color.BLACK);
      p.setShader(getShader(resId));
    }
 else {
      p.setShader(null);
    }
    if (rc.shadowRenderingMode != 1) {
      paint.clearShadowLayer();
    }
 else {
      int shadowColor=req.getIntPropertyValue(req.ALL.R_SHADOW_COLOR);
      int shadowLayer=req.getIntPropertyValue(req.ALL.R_SHADOW_RADIUS);
      if (shadowColor == 0) {
        shadowLayer=0;
      }
      p.setShadowLayer(shadowLayer,0,0,shadowColor);
    }
  }
 else {
    p.setShader(null);
    p.clearShadowLayer();
  }
  return true;
}
