{
  List<RectF> boundsNotPathIntersect=new ArrayList<RectF>();
  List<RectF> boundsPathIntersect=new ArrayList<RectF>();
  int size=rc.textToDraw.size();
  Comparator<RectF> c=new Comparator<RectF>(){
    @Override public int compare(    RectF object1,    RectF object2){
      return Float.compare(object1.left,object2.left);
    }
  }
;
  Collections.sort(rc.textToDraw,new Comparator<TextDrawInfo>(){
    @Override public int compare(    TextDrawInfo object1,    TextDrawInfo object2){
      return object1.textOrder - object2.textOrder;
    }
  }
);
  nextText:   for (int i=0; i < size; i++) {
    TextDrawInfo text=rc.textToDraw.get(i);
    if (text.text != null) {
      int d=text.text.indexOf(MapRenderingTypes.DELIM_CHAR);
      if (d > 0) {
        text.text=text.text.substring(0,d);
      }
      if (useEnglishNames) {
        text.text=Junidecode.unidecode(text.text);
      }
      float textSize=getDensityValue(rc,text.textSize);
      paintText.setTextSize(textSize);
      paintText.setFakeBoldText(text.bold);
      paintText.setColor(text.textColor);
      text.centerY+=(-paintText.ascent());
      boolean intersects=findTextIntersection(rc,boundsNotPathIntersect,boundsPathIntersect,c,text);
      if (intersects) {
        continue nextText;
      }
      if (text.drawOnPath != null) {
        if (text.textShadow > 0) {
          paintText.setColor(Color.WHITE);
          paintText.setStyle(Style.STROKE);
          paintText.setStrokeWidth(2 + text.textShadow);
          cv.drawTextOnPath(text.text,text.drawOnPath,0,text.vOffset,paintText);
          paintText.setStyle(Style.FILL);
          paintText.setStrokeWidth(2);
          paintText.setColor(text.textColor);
        }
        cv.drawTextOnPath(text.text,text.drawOnPath,0,text.vOffset,paintText);
      }
 else {
        if (text.shieldRes != 0) {
          if (cachedIcons.get(text.shieldRes) == null) {
            cachedIcons.put(text.shieldRes,BitmapFactory.decodeResource(context.getResources(),text.shieldRes));
          }
          Bitmap ico=cachedIcons.get(text.shieldRes);
          if (ico != null) {
            cv.drawBitmap(ico,text.centerX - ico.getWidth() / 2 - 0.5f,text.centerY - ico.getHeight() / 2 - getDensityValue(rc,4.5f),paintIcon);
          }
        }
        drawWrappedText(cv,text,textSize);
      }
    }
  }
}
