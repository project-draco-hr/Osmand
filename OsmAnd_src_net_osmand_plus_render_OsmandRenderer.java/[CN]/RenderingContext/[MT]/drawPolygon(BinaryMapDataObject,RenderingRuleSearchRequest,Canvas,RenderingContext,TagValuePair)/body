{
  if (render == null || pair == null) {
    return;
  }
  float xText=0;
  float yText=0;
  int zoom=rc.zoom;
  Path path=null;
  render.setInitialTagValueZoom(pair.tag,pair.value,zoom,obj);
  boolean rendered=render.search(RenderingRulesStorage.POLYGON_RULES);
  if (!rendered || !updatePaint(render,paint,0,true,rc)) {
    return;
  }
  rc.visible++;
  int len=obj.getPointsLength();
  for (int i=0; i < obj.getPointsLength(); i++) {
    PointF p=calcPoint(obj,i,rc);
    xText+=p.x;
    yText+=p.y;
    if (path == null) {
      path=new Path();
      path.moveTo(p.x,p.y);
    }
 else {
      path.lineTo(p.x,p.y);
    }
  }
  int[][] polygonInnerCoordinates=obj.getPolygonInnerCoordinates();
  if (polygonInnerCoordinates != null && path != null) {
    path.setFillType(FillType.EVEN_ODD);
    for (int j=0; j < polygonInnerCoordinates.length; j++) {
      for (int i=0; i < polygonInnerCoordinates[j].length; i+=2) {
        PointF p=calcPoint(polygonInnerCoordinates[j][i],polygonInnerCoordinates[j][i + 1],rc);
        if (i == 0) {
          path.moveTo(p.x,p.y);
        }
 else {
          path.lineTo(p.x,p.y);
        }
      }
    }
  }
  if (path != null && len > 0) {
    canvas.drawPath(path,paint);
    if (updatePaint(render,paint,1,false,rc)) {
      canvas.drawPath(path,paint);
    }
    textRenderer.renderText(obj,render,rc,pair,xText / len,yText / len,null,null);
  }
}
