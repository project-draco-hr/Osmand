{
  String locale=app.getSettings().MAP_PREFERRED_LOCALE.get();
  boolean transliterate=app.getSettings().MAP_TRANSLITERATE_NAMES.get();
  searchHelper=app.getSearchUICore();
  searchUICore=searchHelper.getCore();
  if (newSearch) {
    setResultCollection(null);
    if (!phraseDefined) {
      searchUICore.resetPhrase();
    }
    phraseDefined=false;
  }
  location=app.getLocationProvider().getLastKnownLocation();
  LatLon searchLatLon;
  if (centerLatLon == null) {
    LatLon clt=mapActivity.getMapView().getCurrentRotatedTileBox().getCenterLatLon();
    searchLatLon=clt;
    searchEditText.setHint(R.string.search_poi_category_hint);
    if (location != null) {
      double d=MapUtils.getDistance(clt,location.getLatitude(),location.getLongitude());
      if (d < DISTANCE_THRESHOLD) {
        searchLatLon=new LatLon(location.getLatitude(),location.getLongitude());
      }
 else {
        useMapCenter=true;
      }
    }
 else {
      useMapCenter=true;
    }
  }
 else {
    searchLatLon=centerLatLon;
    useMapCenter=true;
  }
  SearchSettings settings=searchUICore.getSearchSettings().setOriginalLocation(new LatLon(searchLatLon.getLatitude(),searchLatLon.getLongitude()));
  settings=settings.setLang(locale,transliterate);
  searchUICore.updateSettings(settings);
  searchUICore.setOnSearchStart(new Runnable(){
    @Override public void run(){
      cancelPrev=false;
    }
  }
);
  searchUICore.setOnResultsComplete(new Runnable(){
    @Override public void run(){
      app.runInUIThread(new Runnable(){
        @Override public void run(){
          searching=false;
          if (!paused && !cancelPrev) {
            hideProgressBar();
            if (searchUICore.isSearchMoreAvailable(searchUICore.getPhrase())) {
              addMoreButton();
            }
          }
        }
      }
);
    }
  }
);
}
