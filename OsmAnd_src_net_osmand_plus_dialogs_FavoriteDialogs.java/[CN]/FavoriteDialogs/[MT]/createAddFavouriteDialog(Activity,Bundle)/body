{
  Builder builder=new AlertDialog.Builder(activity);
  builder.setTitle(R.string.favourites_context_menu_edit);
  final View v=activity.getLayoutInflater().inflate(R.layout.favorite_edit_dialog,null,false);
  final FavouritesDbHelper helper=((OsmandApplication)activity.getApplication()).getFavorites();
  builder.setView(v);
  final EditText editText=(EditText)v.findViewById(R.id.Name);
  final EditText description=(EditText)v.findViewById(R.id.description);
  final AutoCompleteTextView cat=(AutoCompleteTextView)v.findViewById(R.id.Category);
  List<FavoriteGroup> gs=helper.getFavoriteGroups();
  String[] list=new String[gs.size()];
  for (int i=0; i < list.length; i++) {
    list[i]=gs.get(i).name;
  }
  cat.setAdapter(new ArrayAdapter<String>(activity,R.layout.list_textview,list));
  builder.setNegativeButton(R.string.shared_string_cancel,null);
  builder.setNeutralButton(R.string.update_existing,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      Dialog dlg=createReplaceFavouriteDialog(activity,args);
      if (dlg != null) {
        dlg.show();
      }
    }
  }
);
  builder.setPositiveButton(R.string.shared_string_add,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      final FavouritePoint point=(FavouritePoint)args.getSerializable(KEY_FAVORITE);
      OsmandApplication app=(OsmandApplication)activity.getApplication();
      String categoryStr=cat.getText().toString().trim();
      final FavouritesDbHelper helper=app.getFavorites();
      app.getSettings().LAST_FAV_CATEGORY_ENTERED.set(categoryStr);
      point.setName(editText.getText().toString().trim());
      point.setDescription(description.getText().toString().trim());
      point.setCategory(categoryStr);
      Builder bld=FavouritesDbHelper.checkDuplicates(point,helper,activity);
      if (bld != null) {
        bld.setPositiveButton(R.string.shared_string_ok,new DialogInterface.OnClickListener(){
          @Override public void onClick(          DialogInterface dialog,          int which){
            addFavorite(activity,point,helper);
          }
        }
);
        bld.show();
      }
 else {
        addFavorite(activity,point,helper);
      }
    }
    protected void addFavorite(    final Activity activity,    FavouritePoint point,    final FavouritesDbHelper helper){
      boolean added=helper.addFavourite(point);
      if (added) {
        AccessibleToast.makeText(activity,MessageFormat.format(activity.getString(R.string.add_favorite_dialog_favourite_added_template),point.getName()),Toast.LENGTH_SHORT).show();
      }
      if (activity instanceof MapActivity) {
        ((MapActivity)activity).getMapView().refreshMap(true);
      }
    }
  }
);
  return builder.create();
}
