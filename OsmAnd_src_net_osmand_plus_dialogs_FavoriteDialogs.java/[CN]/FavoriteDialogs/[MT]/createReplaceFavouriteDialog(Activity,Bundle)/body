{
  final FavouritesDbHelper helper=((OsmandApplication)activity.getApplication()).getFavorites();
  final List<FavouritePoint> points=new ArrayList<FavouritePoint>(helper.getFavouritePoints());
  final FavouritesAdapter favouritesAdapter=new FavouritesAdapter(activity,((OsmandApplication)activity.getApplication()).getFavorites().getFavouritePoints(),false);
  final Dialog[] dlgHolder=new Dialog[1];
  OnItemClickListener click=new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      FavouritePoint fp=favouritesAdapter.getItem(position);
      if (dlgHolder != null && dlgHolder.length > 0 && dlgHolder[0] != null) {
        dlgHolder[0].dismiss();
      }
      FavouritePoint point=(FavouritePoint)args.getSerializable(KEY_FAVORITE);
      if (helper.editFavourite(fp,point.getLatitude(),point.getLongitude())) {
        if (activity instanceof MapActivity) {
          ((MapActivity)activity).getContextMenu().show(new LatLon(point.getLatitude(),point.getLongitude()),fp.getPointDescription(),fp);
        }
      }
      if (activity instanceof MapActivity) {
        ((MapActivity)activity).getMapView().refreshMap();
      }
    }
  }
;
  if (activity instanceof MapActivity) {
    favouritesAdapter.updateLocation(((MapActivity)activity).getMapLocation());
  }
  final String[] names=new String[points.size()];
  if (points.size() == 0) {
    AccessibleToast.makeText(activity,activity.getString(R.string.fav_points_not_exist),Toast.LENGTH_SHORT).show();
    return null;
  }
  return showFavoritesDialog(activity,favouritesAdapter,click,null,dlgHolder,true);
}
