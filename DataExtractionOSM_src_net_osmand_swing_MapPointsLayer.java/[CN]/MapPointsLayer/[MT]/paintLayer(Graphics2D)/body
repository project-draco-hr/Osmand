{
  g.setColor(color);
  if (whiteFont == null) {
    whiteFont=g.getFont().deriveFont(15).deriveFont(Font.BOLD);
  }
  g.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
  g.setRenderingHint(RenderingHints.KEY_RENDERING,RenderingHints.VALUE_RENDER_QUALITY);
  for (  Point p : pointsToDraw.keySet()) {
    g.drawOval(p.x,p.y,size,size);
    g.fillOval(p.x,p.y,size,size);
    if (tagToShow != null && pointsToDraw.get(p) != null) {
      g.drawString(pointsToDraw.get(p),p.x,p.y);
    }
  }
  int[] xPoints=new int[4];
  int[] yPoints=new int[4];
  for (  LineObject e : linesToDraw) {
    Line2D p=e.line;
    Way w=e.w;
    g.setColor(color);
    String name=null;
    boolean white=false;
    if (w != null) {
      if (e.middle) {
        name=w.getTag("name");
      }
      white="white".equalsIgnoreCase(w.getTag("color"));
      if (white) {
        g.setColor(Color.gray);
      }
    }
    AffineTransform transform=new AffineTransform();
    transform.translate(p.getX1(),p.getY1());
    transform.rotate(p.getX2() - p.getX1(),p.getY2() - p.getY1());
    xPoints[1]=xPoints[0]=0;
    xPoints[2]=xPoints[3]=(int)Math.sqrt((p.getX2() - p.getX1()) * (p.getX2() - p.getX1()) + (p.getY2() - p.getY1()) * (p.getY2() - p.getY1())) + 1;
    yPoints[3]=yPoints[0]=0;
    yPoints[2]=yPoints[1]=2;
    for (int i=0; i < 4; i++) {
      Point2D po=transform.transform(new Point(xPoints[i],yPoints[i]),null);
      xPoints[i]=(int)po.getX();
      yPoints[i]=(int)po.getY();
    }
    g.drawPolygon(xPoints,yPoints,4);
    g.fillPolygon(xPoints,yPoints,4);
    if (name != null && map.getZoom() >= 16) {
      Font prevFont=g.getFont();
      Color prevColor=g.getColor();
      AffineTransform prev=g.getTransform();
      double flt=Math.atan2(p.getX2() - p.getX1(),p.getY2() - p.getY1());
      AffineTransform ps=new AffineTransform(prev);
      ps.translate((p.getX2() + p.getX1()) / 2,(int)(p.getY2() + p.getY1()) / 2);
      if (flt < Math.PI && flt > 0) {
        ps.rotate(p.getX2() - p.getX1(),p.getY2() - p.getY1());
      }
 else {
        ps.rotate(-(p.getX2() - p.getX1()),-(p.getY2() - p.getY1()));
      }
      g.setTransform(ps);
      g.setFont(whiteFont);
      g.setColor(Color.white);
      float c=1.3f;
      g.scale(c,c);
      g.drawString(name,(int)(-15),(int)(-10 / c));
      g.scale(1 / c,1 / c);
      if (white) {
        g.setColor(Color.lightGray);
      }
 else {
        g.setColor(Color.DARK_GRAY);
      }
      g.drawString(name,-15,-10);
      g.setColor(prevColor);
      g.setTransform(prev);
      g.setFont(prevFont);
    }
  }
}
