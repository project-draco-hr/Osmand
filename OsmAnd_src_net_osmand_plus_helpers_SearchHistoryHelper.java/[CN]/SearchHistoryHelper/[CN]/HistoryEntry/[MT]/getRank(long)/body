{
  double baseTimeDiff=((time - lastAccessedTime) / 1000) + 1;
  double timeDiff=0;
  double vl=1;
  double rnk=rankFunction(vl,baseTimeDiff + timeDiff);
  for (int k=0; k < intervals.length; k++) {
    double ntimeDiff=intervals[k] * 60 * 1000;
    double nvl=intervalValues[k];
    if (ntimeDiff < timeDiff || nvl <= vl) {
      continue;
    }
    rnk+=rankFunction(nvl - vl,baseTimeDiff + (ntimeDiff - timeDiff) / 2 + timeDiff);
    vl=nvl - vl;
    timeDiff=ntimeDiff;
  }
  return rnk;
}
