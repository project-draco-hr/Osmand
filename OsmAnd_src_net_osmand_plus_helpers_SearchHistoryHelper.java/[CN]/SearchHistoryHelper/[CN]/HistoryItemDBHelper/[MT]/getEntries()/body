{
  List<HistoryEntry> entries=new ArrayList<HistoryEntry>();
  SQLiteConnection db=openConnection(true);
  if (db != null) {
    try {
      SQLiteCursor query=db.rawQuery("SELECT " + HISTORY_COL_NAME + ", "+ HISTORY_COL_LAT+ ","+ HISTORY_COL_LON+ ", "+ HISTORY_COL_TIME+ ", "+ HISTORY_COL_FREQ_INTERVALS+ ", "+ HISTORY_COL_FREQ_VALUES+ " FROM "+ HISTORY_TABLE_NAME,null);
      Map<String,HistoryEntry> st=new TreeMap<String,HistoryEntry>();
      if (query.moveToFirst()) {
        boolean reinsert=false;
        do {
          String name=query.getString(0);
          HistoryEntry e=new HistoryEntry(query.getDouble(1),query.getDouble(2),PointDescription.deserializeFromString(name));
          long time=query.getLong(3);
          e.setLastAccessTime(time);
          e.setFrequency(query.getString(4),query.getString(5));
          if (st.containsKey(name) || st.containsKey(e.getSerializedName()) || !Algorithms.objectEquals(name,e.getSerializedName())) {
            reinsert=true;
          }
          entries.add(e);
          st.put(e.getSerializedName(),e);
          System.out.println(e.getSerializedName() + " (" + name+ ") "+ new Date(e.getLastAccessTime())+ " "+ e.getIntervalsValues()+ " "+ e.getIntervals());
        }
 while (query.moveToNext());
        if (reinsert) {
          System.err.println("Reinsert all values");
          db.execSQL("DELETE FROM " + HISTORY_TABLE_NAME);
          entries.clear();
          entries.addAll(st.values());
          for (          HistoryEntry he : entries) {
            insert(he,db);
          }
        }
      }
      query.close();
    }
  finally {
      db.close();
    }
  }
  return entries;
}
