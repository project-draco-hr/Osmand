{
  View v=convertView;
  if (v == null) {
    LayoutInflater inflater=getActivity().getLayoutInflater();
    v=inflater.inflate(R.layout.dash_gpx_track_item,parent,false);
  }
  final GpxInfo gpxInfo=getItem(position);
  TextView viewName=((TextView)v.findViewById(R.id.name));
  viewName.setText(gpxInfo.getName());
  v.findViewById(R.id.show_on_map).setVisibility(View.GONE);
  v.findViewById(R.id.stop).setVisibility(View.GONE);
  v.findViewById(R.id.divider).setVisibility(View.GONE);
  if (gpxInfo.gpx != null) {
    String description=GpxUiHelper.getDescription(getMyApplication(),gpxInfo.gpx,gpxInfo.file,true);
    int startindex=description.indexOf(">");
    int endindex=description.indexOf("</font>");
    String distnace=description.substring(startindex + 1,endindex);
    ((TextView)v.findViewById(R.id.distance)).setText(distnace);
  }
  final CompoundButton check=(CompoundButton)v.findViewById(R.id.check_item);
  check.setVisibility(View.VISIBLE);
  if (selectedGpxHelper.getSelectedFileByName(gpxInfo.getFileName()) != null) {
    check.setChecked(true);
  }
 else {
    check.setChecked(false);
  }
  check.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (gpxInfo.gpx == null) {
        loadGpxAsync(gpxInfo,check.isChecked());
      }
 else {
        selectedGpxHelper.selectGpxFile(gpxInfo.gpx,check.isChecked(),true);
      }
      allGpxAdapter.notifyDataSetChanged();
    }
  }
);
  return v;
}
