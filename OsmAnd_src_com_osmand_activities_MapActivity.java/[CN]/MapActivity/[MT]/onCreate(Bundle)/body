{
  super.onCreate(savedInstanceState);
  requestWindowFeature(Window.FEATURE_NO_TITLE);
  setContentView(R.layout.main);
  mapView=(OsmandMapTileView)findViewById(R.id.MapView);
  mapView.setTrackBallDelegate(new OsmandMapTileView.OnTrackBallListener(){
    @Override public boolean onTrackBallEvent(    MotionEvent e){
      showAndHideMapPosition();
      return MapActivity.this.onTrackballEvent(e);
    }
    @Override public boolean onTrackBallPressed(){
      contextMenuPoint(mapView.getLatitude(),mapView.getLongitude(),true);
      return true;
    }
  }
);
  MapTileDownloader.getInstance().addDownloaderCallback(new IMapDownloaderCallback(){
    @Override public void tileDownloaded(    DownloadRequest request){
      if (request != null && !request.error && request.fileToSave != null) {
        ResourceManager mgr=ResourceManager.getResourceManager();
        String tile=mgr.calculateTileId(mapView.getMap(),request.xTile,request.yTile,request.zoom);
        mgr.tileDownloaded(tile);
      }
      mapView.tileDownloaded(request);
    }
  }
);
  mapView.setMapLocationListener(this);
  routingHelper=RoutingHelper.getInstance(this);
  routeLayer=new RouteLayer(routingHelper);
  mapView.addLayer(routeLayer);
  osmBugsLayer=new OsmBugsLayer(this);
  poiMapLayer=new POIMapLayer();
  transportStopsLayer=new TransportStopsLayer();
  navigationLayer=new PointNavigationLayer();
  mapView.addLayer(navigationLayer);
  locationLayer=new PointLocationLayer();
  mapView.addLayer(locationLayer);
  mapInfoLayer=new MapInfoLayer(this,routeLayer);
  mapView.addLayer(mapInfoLayer);
  savingTrackHelper=new SavingTrackHelper(this);
  LatLon pointToNavigate=OsmandSettings.getPointToNavigate(this);
  if (!Algoritms.objectEquals(routingHelper.getFinalLocation(),pointToNavigate)) {
    routingHelper.setFollowingMode(false);
    routingHelper.setFinalAndCurrentLocation(pointToNavigate,null);
  }
  navigationLayer.setPointToNavigate(pointToNavigate);
  SharedPreferences prefs=getSharedPreferences(OsmandSettings.SHARED_PREFERENCES_NAME,MODE_WORLD_READABLE);
  if (prefs == null || !prefs.contains(OsmandSettings.LAST_KNOWN_MAP_LAT)) {
    LocationManager service=(LocationManager)getSystemService(LOCATION_SERVICE);
    Location location=service.getLastKnownLocation(LocationManager.GPS_PROVIDER);
    if (location == null) {
      location=service.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);
    }
    if (location != null) {
      mapView.setLatLon(location.getLatitude(),location.getLongitude());
      mapView.setZoom(14);
    }
  }
  ZoomControls zoomControls=(ZoomControls)findViewById(R.id.ZoomControls);
  zoomControls.setOnZoomInClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      mapView.getAnimatedDraggingThread().stopAnimatingSync();
      mapView.getAnimatedDraggingThread().startZooming(mapView.getZoom(),mapView.getZoom() + 1);
      showAndHideMapPosition();
      if (OsmandSettings.isAutoZoomEnabled(MapActivity.this)) {
        locationChanged(mapView.getLatitude(),mapView.getLongitude(),null);
      }
    }
  }
);
  zoomControls.setOnZoomOutClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      mapView.getAnimatedDraggingThread().stopAnimatingSync();
      mapView.getAnimatedDraggingThread().startZooming(mapView.getZoom(),mapView.getZoom() - 1);
      showAndHideMapPosition();
      if (OsmandSettings.isAutoZoomEnabled(MapActivity.this)) {
        locationChanged(mapView.getLatitude(),mapView.getLongitude(),null);
      }
    }
  }
);
  backToLocation=(ImageButton)findViewById(R.id.BackToLocation);
  backToLocation.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      backToLocation.setVisibility(View.INVISIBLE);
      if (!isMapLinkedToLocation()) {
        OsmandSettings.setSyncMapToGpsLocation(MapActivity.this,true);
        if (locationLayer.getLastKnownLocation() != null) {
          Location lastKnownLocation=locationLayer.getLastKnownLocation();
          AnimateDraggingMapThread thread=mapView.getAnimatedDraggingThread();
          int fZoom=mapView.getZoom() < 15 ? 15 : mapView.getZoom();
          thread.startMoving(mapView.getLatitude(),mapView.getLongitude(),lastKnownLocation.getLatitude(),lastKnownLocation.getLongitude(),mapView.getZoom(),fZoom,mapView.getSourceTileSize(),mapView.getRotate(),false);
        }
      }
    }
  }
);
  backToMenu=(ImageButton)findViewById(R.id.BackToMenu);
  backToMenu.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      Intent newIntent=new Intent(MapActivity.this,MainMenuActivity.class);
      newIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
      startActivity(newIntent);
    }
  }
);
  mapView.setOnLongClickListener(new OsmandMapTileView.OnLongClickListener(){
    @Override public boolean onLongPressEvent(    PointF point){
      LatLon l=mapView.getLatLonFromScreenPoint(point.x,point.y);
      contextMenuPoint(l.getLatitude(),l.getLongitude(),false);
      return true;
    }
  }
);
}
