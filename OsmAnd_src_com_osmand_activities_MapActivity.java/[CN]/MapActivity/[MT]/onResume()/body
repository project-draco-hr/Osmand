{
  super.onResume();
  if (OsmandSettings.getMapOrientation(this) != getRequestedOrientation()) {
    setRequestedOrientation(OsmandSettings.getMapOrientation(this));
  }
  routingHelper=RoutingHelper.getInstance(this);
  if (mapView.getMap() != OsmandSettings.getMapTileSource(this)) {
    mapView.setMap(OsmandSettings.getMapTileSource(this));
  }
  if (!OsmandSettings.isRotateMapToBearing(this)) {
    mapView.setRotate(0);
  }
  if (!OsmandSettings.isShowingViewAngle(this)) {
    locationLayer.setHeading(null);
  }
  locationLayer.setAppMode(OsmandSettings.getApplicationMode(this));
  routingHelper.setAppMode(OsmandSettings.getApplicationMode(this));
  poiMapLayer.setFilter(OsmandSettings.getPoiFilterForMap(this));
  mapView.setMapPosition(OsmandSettings.getPositionOnMap(this));
  backToLocation.setVisibility(View.INVISIBLE);
  if (mapView.getLayers().contains(transportStopsLayer) != OsmandSettings.isShowingTransportOverMap(this)) {
    if (OsmandSettings.isShowingTransportOverMap(this)) {
      mapView.addLayer(transportStopsLayer,routeLayer);
    }
 else {
      mapView.removeLayer(transportStopsLayer);
    }
  }
  if (mapView.getLayers().contains(poiMapLayer) != OsmandSettings.isShowingPoiOverMap(this)) {
    if (OsmandSettings.isShowingPoiOverMap(this)) {
      mapView.addLayer(poiMapLayer,routeLayer);
    }
 else {
      mapView.removeLayer(poiMapLayer);
    }
  }
  if (mapView.getLayers().contains(osmBugsLayer) != OsmandSettings.isShowingOsmBugs(this)) {
    if (OsmandSettings.isShowingOsmBugs(this)) {
      mapView.addLayer(osmBugsLayer,routeLayer);
    }
 else {
      mapView.removeLayer(osmBugsLayer);
    }
  }
  LocationManager service=(LocationManager)getSystemService(LOCATION_SERVICE);
  service.requestLocationUpdates(LocationManager.GPS_PROVIDER,GPS_TIMEOUT_REQUEST,GPS_DIST_REQUEST,gpsListener);
  currentLocationProvider=LocationManager.GPS_PROVIDER;
  if (!useOnlyGPS()) {
    service.requestLocationUpdates(LocationManager.NETWORK_PROVIDER,GPS_TIMEOUT_REQUEST,GPS_DIST_REQUEST,networkListener);
    currentLocationProvider=LocationManager.NETWORK_PROVIDER;
  }
  LocationProvider prov=service.getProvider(currentLocationProvider);
  providerSupportsBearing=prov == null ? false : prov.supportsBearing() && !isRunningOnEmulator();
  providerSupportsSpeed=prov == null ? false : prov.supportsSpeed() && !isRunningOnEmulator();
  if (wakeLock == null) {
    PowerManager powerManager=(PowerManager)getSystemService(POWER_SERVICE);
    wakeLock=powerManager.newWakeLock(PowerManager.SCREEN_BRIGHT_WAKE_LOCK,"com.osmand.map");
    wakeLock.acquire();
  }
  SharedPreferences prefs=getSharedPreferences(OsmandSettings.SHARED_PREFERENCES_NAME,MODE_WORLD_READABLE);
  if (prefs != null && prefs.contains(OsmandSettings.LAST_KNOWN_MAP_LAT)) {
    LatLon l=OsmandSettings.getLastKnownMapLocation(this);
    mapView.setLatLon(l.getLatitude(),l.getLongitude());
    mapView.setZoom(OsmandSettings.getLastKnownMapZoom(this));
    LatLon latLon=OsmandSettings.getAndClearMapLocationToShow(this);
    LatLon cur=new LatLon(mapView.getLatitude(),mapView.getLongitude());
    if (latLon != null && !latLon.equals(cur)) {
      mapView.getAnimatedDraggingThread().startMoving(cur.getLatitude(),cur.getLongitude(),latLon.getLatitude(),latLon.getLongitude(),mapView.getZoom(),OsmandSettings.getMapZoomToShow(this),mapView.getSourceTileSize(),mapView.getRotate(),true);
    }
  }
  OsmandSettings.setMapActivityEnabled(this,true);
  checkExternalStorage();
  showAndHideMapPosition();
}
