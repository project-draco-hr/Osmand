{
  View row=convertView;
  if (row == null) {
    LayoutInflater inflater=getLayoutInflater();
    row=inflater.inflate(R.layout.osmo_group_item,parent,false);
  }
  adjustIndicator(groupPosition,isExpanded,row);
  TextView label=(TextView)row.findViewById(R.id.category_name);
  final OsMoGroup model=getGroup(groupPosition);
  if (selectedObject == model) {
    row.setBackgroundColor(getResources().getColor(R.color.row_selection_color));
  }
 else {
    row.setBackgroundColor(Color.TRANSPARENT);
  }
  label.setText(model.getVisibleName(OsMoGroupsActivity.this));
  if (model.isMainGroup() || model.isActive()) {
    label.setTypeface(Typeface.DEFAULT,Typeface.NORMAL);
  }
 else {
    label.setTypeface(Typeface.DEFAULT,Typeface.ITALIC);
  }
  ImageView v=(ImageView)row.findViewById(R.id.settings);
  if (model.isMainGroup()) {
    v.setVisibility(View.GONE);
  }
 else {
    if (getMyApplication().getSettings().isLightContent()) {
      v.setImageResource(R.drawable.ic_action_settings_light);
    }
 else {
      v.setImageResource(R.drawable.ic_action_settings_dark);
    }
    v.setVisibility(View.VISIBLE);
    v.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        if (model != selectedObject) {
          enterSelectionMode(model);
        }
 else {
          quitSelectionMode();
        }
      }
    }
);
  }
  CompoundButton ci=(CompoundButton)row.findViewById(R.id.check_item);
  if (model.isMainGroup()) {
    ci.setVisibility(View.GONE);
  }
 else {
    ci.setVisibility(View.VISIBLE);
    ci.setOnCheckedChangeListener(null);
    ci.setChecked(model.isEnabled() && model.isActive());
    ci.setOnCheckedChangeListener(new OnCheckedChangeListener(){
      @Override public void onCheckedChanged(      CompoundButton buttonView,      boolean isChecked){
        if (isChecked) {
          String operation=osMoPlugin.getGroups().connectGroup(model);
          startLongRunningOperation(operation);
        }
 else {
          String operation=osMoPlugin.getGroups().disconnectGroup(model);
          startLongRunningOperation(operation);
        }
      }
    }
);
  }
  return row;
}
