{
  header=getLayoutInflater().inflate(R.layout.osmo_groups_list_header,null);
  getExpandableListView().addHeaderView(header);
  ImageView iv=(ImageView)header.findViewById(R.id.share_my_location);
  iv.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      shareSession();
    }
  }
);
  updateTrackerButton();
  CompoundButton srvc=(CompoundButton)header.findViewById(R.id.enable_service);
  srvc.setChecked(osMoPlugin.getService().isEnabled());
  srvc.setText(R.string.osmo_start_service);
  srvc.setOnCheckedChangeListener(new OnCheckedChangeListener(){
    @Override public void onCheckedChanged(    CompoundButton buttonView,    boolean isChecked){
      if (isChecked) {
        osMoPlugin.getService().connect(true);
      }
 else {
        osMoPlugin.getTracker().disableTracker();
        osMoPlugin.getService().disconnect();
        if (app.getNavigationService() != null) {
          app.getNavigationService().stopIfNeeded(app,NavigationService.USED_BY_LIVE);
        }
        if (getExpandableListView().getFooterViewsCount() > 0) {
          getExpandableListView().removeFooterView(footer);
        }
      }
      setSupportProgressBarIndeterminateVisibility(true);
      header.postDelayed(new Runnable(){
        @Override public void run(){
          updateStatus();
          if (osMoPlugin.getService().isConnected()) {
            adapter.synchronizeGroups();
          }
 else {
            adapter.clear();
          }
          setSupportProgressBarIndeterminateVisibility(false);
        }
      }
,3000);
    }
  }
);
  TextView mtd=(TextView)header.findViewById(R.id.motd);
  SessionInfo si=osMoPlugin.getService().getCurrentSessionInfo();
  boolean visible=si != null && si.motd != null && si.motd.length() > 0;
  mtd.setVisibility(visible ? View.VISIBLE : View.GONE);
  if (visible) {
    mtd.setText(si.motd);
    mtd.setLinksClickable(true);
    mtd.setMovementMethod(LinkMovementMethod.getInstance());
  }
}
