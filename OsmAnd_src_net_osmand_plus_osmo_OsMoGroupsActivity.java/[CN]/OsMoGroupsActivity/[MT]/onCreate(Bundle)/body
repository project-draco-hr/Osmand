{
  requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
  getSherlock().setUiOptions(ActivityInfo.UIOPTION_SPLIT_ACTION_BAR_WHEN_NARROW);
  super.onCreate(icicle);
  setContentView(R.layout.osmo_groups_list);
  getSupportActionBar().setTitle(R.string.osmo_activity);
  setSupportProgressBarIndeterminateVisibility(false);
  osMoPlugin=OsmandPlugin.getEnabledPlugin(OsMoPlugin.class);
  adapter=new OsMoGroupsAdapter(osMoPlugin.getGroups(),osMoPlugin.getTracker());
  getExpandableListView().setAdapter(adapter);
  app=(OsmandApplication)getApplication();
  uiHandler=new Handler();
  directionPath=createDirectionPath();
  CompoundButton trackr=(CompoundButton)findViewById(R.id.enable_tracker);
  trackr.setChecked(osMoPlugin.getTracker().isEnabledTracker());
  trackr.setOnCheckedChangeListener(new OnCheckedChangeListener(){
    @Override public void onCheckedChanged(    CompoundButton buttonView,    boolean isChecked){
      if (isChecked) {
        osMoPlugin.getTracker().enableTracker();
        app.startNavigationService(NavigationService.USED_BY_LIVE);
        app.getSettings().SERVICE_OFF_INTERVAL.set(0);
      }
 else {
        osMoPlugin.getTracker().disableTracker();
        if (app.getNavigationService() != null) {
          app.getNavigationService().stopIfNeeded(app,NavigationService.USED_BY_LIVE);
        }
      }
      updateStatus();
    }
  }
);
  TextView mtd=(TextView)findViewById(R.id.motd);
  SessionInfo si=osMoPlugin.getService().getCurrentSessionInfo();
  boolean visible=si != null && si.motd != null && si.motd.length() > 0;
  mtd.setVisibility(visible ? View.VISIBLE : View.GONE);
  if (visible) {
    mtd.setText(si.motd);
  }
  white=new Paint();
  white.setStyle(Style.FILL_AND_STROKE);
  white.setColor(getResources().getColor(R.color.color_unknown));
  white.setAntiAlias(true);
  updateStatus();
  getExpandableListView().setOnGroupClickListener(new OnGroupClickListener(){
    @Override public boolean onGroupClick(    ExpandableListView parent,    View v,    int groupPosition,    long id){
      OsMoGroup gr=adapter.getGroup(groupPosition);
      if (gr.isMainGroup()) {
        if (parent.isGroupExpanded(groupPosition)) {
          parent.collapseGroup(groupPosition);
        }
 else {
          parent.expandGroup(groupPosition);
        }
      }
 else {
        if (selectedObject == gr) {
          quitSelectionMode();
          if (parent.isGroupExpanded(groupPosition)) {
            parent.collapseGroup(groupPosition);
          }
 else {
            parent.expandGroup(groupPosition);
          }
        }
 else {
          enterSelectionMode(gr);
        }
      }
      if (groupPosition == 0) {
        return true;
      }
      return false;
    }
  }
);
}
