{
  if (osMoPlugin.getService().getRegisteredUserName() == null && check) {
    signin();
    return;
  }
  Builder builder=new AlertDialog.Builder(this);
  builder.setTitle(R.string.osmo_create_group);
  final View v=getLayoutInflater().inflate(R.layout.osmo_create_group,getExpandableListView(),false);
  final EditText policy=(EditText)v.findViewById(R.id.Policy);
  final EditText description=(EditText)v.findViewById(R.id.Description);
  final EditText name=(EditText)v.findViewById(R.id.Name);
  final CheckBox onlyByInvite=(CheckBox)v.findViewById(R.id.OnlyByInvite);
  final TextView warnCreateDesc=(TextView)v.findViewById(R.id.osmo_group_create_dinfo);
  View.OnClickListener click=new View.OnClickListener(){
    @Override public void onClick(    View v){
      int vls=warnCreateDesc.getVisibility();
      warnCreateDesc.setVisibility(vls == View.VISIBLE ? View.GONE : View.VISIBLE);
    }
  }
;
  ImageButton info=(ImageButton)v.findViewById(R.id.info);
  info.setImageDrawable(app.getIconsCache().getContentIcon(R.drawable.ic_action_info_dark));
  info.setOnClickListener(click);
  warnCreateDesc.setOnClickListener(click);
  builder.setView(v);
  builder.setNegativeButton(R.string.shared_string_cancel,null);
  builder.setPositiveButton(R.string.shared_string_ok,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      if (!checkOperationIsNotRunning()) {
        return;
      }
      joinGroup=true;
      String op=osMoPlugin.getGroups().createGroup(name.getText().toString(),onlyByInvite.isChecked(),description.getText().toString(),policy.getText().toString());
      startLongRunningOperation(op);
    }
  }
);
  builder.create().show();
  AndroidUtils.softKeyboardDelayed(name);
}
