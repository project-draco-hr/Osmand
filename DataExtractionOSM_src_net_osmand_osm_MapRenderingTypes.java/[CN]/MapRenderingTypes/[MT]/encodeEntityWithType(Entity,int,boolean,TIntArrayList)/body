{
  Map<String,MapRulType> rules=getEncodingRuleTypes();
  types.clear();
  if ("coastline".equals(e.getTag(OSMTagKey.NATURAL))) {
    multipolygon=false;
  }
  boolean point=e instanceof Node;
  boolean polygon=multipolygon || "yes".equals(e.getTag("area"));
  if (!point && !polygon) {
    boolean highway=e.getTag("highway") != null;
    if (!highway) {
      List<Long> ids=((Way)e).getNodeIds();
      if (ids.size() > 1) {
        polygon=((long)ids.get(0) == (long)ids.get(ids.size() - 1));
      }
    }
  }
  Collection<String> tagKeySet=e.getTagKeySet();
  int type=-1;
  for (  String tag : tagKeySet) {
    String val=e.getTag(tag);
    MapRulType rType=rules.get(constructRuleKey(tag,val));
    if (rType == null) {
      rType=rules.get(constructRuleKey(tag,null));
    }
    if (rType != null) {
      if (rType.minzoom > zoom) {
        continue;
      }
      boolean accept;
      if (point) {
        accept=rType.point;
      }
 else       if (polygon) {
        accept=rType.point || rType.polygon;
      }
 else {
        accept=rType.polyline;
      }
      if (accept) {
        rType.freq++;
        types.add(rType.id);
        type=point ? POINT_TYPE : (polygon ? POLYGON_TYPE : POLYLINE_TYPE);
      }
    }
  }
  return type;
}
