{
  AmenityType t=getAmenityType(type,subtype);
  if (t != null) {
    if (!amenityTagValToType.containsKey(tag)) {
      amenityTagValToType.put(tag,new LinkedHashMap<String,AmenityType>());
    }
    amenityTagValToType.get(tag).put(val,t);
    String prefix=getAmenityPrefix(type,subtype);
    if (prefix != null) {
      if (!amenityTagValToPrefix.containsKey(tag)) {
        amenityTagValToPrefix.put(tag,new LinkedHashMap<String,String>());
      }
      amenityTagValToPrefix.get(tag).put(val,prefix);
    }
    if (val != null) {
      if (!amenityTypeNameToTagVal.containsKey(t)) {
        amenityTypeNameToTagVal.put(t,new LinkedHashMap<String,String>());
      }
      String name=val;
      if (prefix != null) {
        name=prefix + name;
      }
      Map<String,String> map=amenityTypeNameToTagVal.get(t);
      if (map.containsKey(val)) {
        if (type == 17 && subtype == 23) {
        }
 else         if (type == 2 && subtype == 21) {
        }
 else {
        }
      }
 else {
        if (prefix != null) {
          map.put(name,tag + " " + val);
        }
 else {
          map.put(name,tag);
        }
      }
    }
  }
 else {
  }
}
