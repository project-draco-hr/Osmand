{
  ((OsmandApplication)getApplication()).applyTheme(this);
  super.onCreate(savedInstanceState);
  getToolbar().setTitle(R.string.debugging_and_development);
  PreferenceScreen cat=getPreferenceScreen();
  CheckBoxPreference dbg=createCheckBoxPreference(settings.DEBUG_RENDERING_INFO,R.string.trace_rendering,R.string.trace_rendering_descr);
  cat.addPreference(dbg);
  cat.addPreference(createCheckBoxPreference(settings.DISABLE_COMPLEX_ROUTING,R.string.disable_complex_routing,R.string.disable_complex_routing_descr));
  cat.addPreference(createCheckBoxPreference(settings.USE_FAST_RECALCULATION,R.string.use_fast_recalculation,R.string.use_fast_recalculation_desc));
  cat.addPreference(createCheckBoxPreference(settings.USE_MAGNETIC_FIELD_SENSOR_COMPASS,R.string.use_magnetic_sensor,R.string.use_magnetic_sensor_descr));
  cat.addPreference(createCheckBoxPreference(settings.BETA_TESTING_LIVE_UPDATES,"Live updates","Beta testing for live updates"));
  Preference pref=new Preference(this);
  pref.setTitle(R.string.test_voice_prompts);
  pref.setSummary(R.string.play_commands_of_currently_selected_voice);
  pref.setKey("test_voice_commands");
  pref.setOnPreferenceClickListener(new OnPreferenceClickListener(){
    @Override public boolean onPreferenceClick(    Preference preference){
      startActivity(new Intent(SettingsDevelopmentActivity.this,TestVoiceActivity.class));
      return true;
    }
  }
);
  cat.addPreference(pref);
  pref=new Preference(this);
  pref.setTitle(R.string.app_modes_choose);
  pref.setSummary(R.string.app_modes_choose_descr);
  pref.setKey("available_application_modes");
  pref.setOnPreferenceClickListener(new OnPreferenceClickListener(){
    @Override public boolean onPreferenceClick(    Preference preference){
      availableProfileDialog();
      return true;
    }
  }
);
  cat.addPreference(pref);
  pref=new Preference(this);
  pref.setTitle(R.string.global_app_allocated_memory);
  long javaAvailMem=(Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) / (1024 * 1024l);
  long javaTotal=Runtime.getRuntime().totalMemory() / (1024 * 1024l);
  long dalvikSize=android.os.Debug.getNativeHeapAllocatedSize() / (1024 * 1024l);
  pref.setSummary(getString(R.string.global_app_allocated_memory_descr,javaAvailMem,javaTotal,dalvikSize));
  pref.setSelectable(false);
  cat.addPreference(pref);
  MemoryInfo mem=new Debug.MemoryInfo();
  Debug.getMemoryInfo(mem);
  pref=new Preference(this);
  pref.setTitle(R.string.native_app_allocated_memory);
  pref.setSummary(getString(R.string.native_app_allocated_memory_descr,mem.nativePrivateDirty / 1024,mem.dalvikPrivateDirty / 1024,mem.otherPrivateDirty / 1024,mem.nativePss / 1024,mem.dalvikPss / 1024,mem.otherPss / 1024));
  pref.setSelectable(false);
  cat.addPreference(pref);
  final Preference agpspref=new Preference(this);
  agpspref.setTitle(R.string.agps_info);
  if (settings.AGPS_DATA_LAST_TIME_DOWNLOADED.get() != 0L) {
    SimpleDateFormat prt=new SimpleDateFormat("yyyy-MM-dd  HH:mm");
    agpspref.setSummary(getString(R.string.agps_data_last_downloaded,prt.format(settings.AGPS_DATA_LAST_TIME_DOWNLOADED.get())));
  }
 else {
    agpspref.setSummary(getString(R.string.agps_data_last_downloaded,"--"));
  }
  agpspref.setSelectable(true);
  agpspref.setOnPreferenceClickListener(new OnPreferenceClickListener(){
    @Override public boolean onPreferenceClick(    Preference preference){
      if (getMyApplication().getSettings().isInternetConnectionAvailable(true)) {
        getMyApplication().getLocationProvider().redownloadAGPS();
        SimpleDateFormat prt=new SimpleDateFormat("yyyy-MM-dd  HH:mm");
        agpspref.setSummary(getString(R.string.agps_data_last_downloaded,prt.format(settings.AGPS_DATA_LAST_TIME_DOWNLOADED.get())));
      }
      return true;
    }
  }
);
  cat.addPreference(agpspref);
  SunriseSunset sunriseSunset=getMyApplication().getDaynightHelper().getSunriseSunset();
  pref=new Preference(this);
  pref.setTitle(R.string.day_night_info);
  if (sunriseSunset != null) {
    SimpleDateFormat prt=new SimpleDateFormat("yyyy-MM-dd  HH:mm");
    pref.setSummary(getString(R.string.day_night_info_description,prt.format(sunriseSunset.getSunrise()),prt.format(sunriseSunset.getSunset())));
  }
 else {
    pref.setSummary(getString(R.string.day_night_info_description,"null","null"));
  }
  pref.setSelectable(false);
  cat.addPreference(pref);
}
