{
  StringBuilder filter=new StringBuilder();
  int zoom=view.getZoom();
  RotatedTileBox queriedBox=data.getQueriedBox();
  final List<BinaryMapDataObject> currentObjects=data.results;
  if (osmandRegions.isInitialized() && queriedBox != null) {
    if (zoom >= ZOOM_TO_SHOW_MAP_NAMES && Math.abs(queriedBox.getZoom() - zoom) <= ZOOM_THRESHOLD && currentObjects != null) {
      btnName.setLength(0);
      btnName.append(view.getResources().getString(R.string.shared_string_download));
      filter.setLength(0);
      Set<String> set=new TreeSet<String>();
      int cx=queriedBox.getCenter31X();
      int cy=queriedBox.getCenter31Y();
      if ((currentObjects != null && currentObjects.size() > 0)) {
        for (int i=0; i < currentObjects.size(); i++) {
          final BinaryMapDataObject o=currentObjects.get(i);
          if (!osmandRegions.contain(o,cx,cy)) {
            continue;
          }
          if (checkIfObjectDownloaded(o)) {
            return null;
          }
          String name=osmandRegions.getLocaleName(o);
          if (!set.add(name)) {
            continue;
          }
          if (set.size() > 1) {
            btnName.append(" ").append(view.getResources().getString(R.string.shared_string_or)).append(" ");
            filter.append(", ");
          }
 else {
            btnName.append(" ");
          }
          filter.append(name);
          if (osmandRegions.getPrefix(o) != null) {
            name=Algorithms.capitalizeFirstLetterAndLowercase(osmandRegions.getPrefix(o)) + " " + name;
          }
          btnName.append(name);
        }
      }
    }
  }
  if (filter.length() == 0) {
    return null;
  }
  return filter.toString();
}
