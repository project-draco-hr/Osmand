{
  int zoom=tb.getZoom();
  if (zoom >= ZOOM_TO_SHOW_BORDERS_ST && zoom < ZOOM_TO_SHOW_BORDERS && osmandRegions.isInitialized()) {
    LatLon pointLatLon=tb.getLatLonFromPixel(point.x,point.y);
    int point31x=MapUtils.get31TileNumberX(pointLatLon.getLongitude());
    int point31y=MapUtils.get31TileNumberY(pointLatLon.getLatitude());
    int left=MapUtils.get31TileNumberX(tb.getLeftTopLatLon().getLongitude());
    int right=MapUtils.get31TileNumberX(tb.getRightBottomLatLon().getLongitude());
    int top=MapUtils.get31TileNumberY(tb.getLeftTopLatLon().getLatitude());
    int bottom=MapUtils.get31TileNumberY(tb.getRightBottomLatLon().getLatitude());
    List<BinaryMapDataObject> result;
    try {
      result=osmandRegions.queryBbox(left,right,top,bottom);
    }
 catch (    IOException e) {
      return;
    }
    Iterator<BinaryMapDataObject> it=result.iterator();
    while (it.hasNext()) {
      BinaryMapDataObject o=it.next();
      if (!osmandRegions.isDownloadOfType(o,OsmandRegions.MAP_TYPE) || !osmandRegions.contain(o,point31x,point31y)) {
        it.remove();
      }
    }
    if (result.size() > 0) {
      String fullName=osmandRegions.getFullName(result.get(0));
      WorldRegion region=osmandRegions.getRegionData(fullName);
      regions.add(region);
    }
  }
}
