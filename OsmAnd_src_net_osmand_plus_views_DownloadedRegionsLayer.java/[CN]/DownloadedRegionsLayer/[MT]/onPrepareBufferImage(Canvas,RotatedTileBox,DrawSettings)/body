{
  final int zoom=tileBox.getZoom();
  if (zoom < ZOOM_TO_SHOW_BORDERS_ST) {
    return;
  }
  final List<BinaryMapDataObject> currentObjects=data.results;
  final List<BinaryMapDataObject> selectedObjects=this.selectedObjects;
  if (zoom >= ZOOM_TO_SHOW_BORDERS_ST && zoom < ZOOM_TO_SHOW_BORDERS && osmandRegions.isInitialized() && (currentObjects != null || selectedObjects != null)) {
    if (currentObjects != null) {
      path.reset();
      for (      BinaryMapDataObject o : currentObjects) {
        String downloadName=osmandRegions.getDownloadName(o);
        boolean downloaded=checkIfObjectDownloaded(downloadName);
        if (!downloaded) {
          continue;
        }
        double lat=MapUtils.get31LatitudeY(o.getPoint31YTile(0));
        double lon=MapUtils.get31LongitudeX(o.getPoint31XTile(0));
        path.moveTo(tileBox.getPixXFromLonNoRot(lon),tileBox.getPixYFromLatNoRot(lat));
        for (int j=1; j < o.getPointsLength(); j++) {
          lat=MapUtils.get31LatitudeY(o.getPoint31YTile(j));
          lon=MapUtils.get31LongitudeX(o.getPoint31XTile(j));
          path.lineTo(tileBox.getPixXFromLonNoRot(lon),tileBox.getPixYFromLatNoRot(lat));
        }
      }
      canvas.drawPath(path,paint);
    }
    if (selectedObjects != null) {
      pathSelected.reset();
      for (      BinaryMapDataObject o : selectedObjects) {
        double lat=MapUtils.get31LatitudeY(o.getPoint31YTile(0));
        double lon=MapUtils.get31LongitudeX(o.getPoint31XTile(0));
        pathSelected.moveTo(tileBox.getPixXFromLonNoRot(lon),tileBox.getPixYFromLatNoRot(lat));
        for (int j=1; j < o.getPointsLength(); j++) {
          lat=MapUtils.get31LatitudeY(o.getPoint31YTile(j));
          lon=MapUtils.get31LongitudeX(o.getPoint31XTile(j));
          pathSelected.lineTo(tileBox.getPixXFromLonNoRot(lon),tileBox.getPixYFromLatNoRot(lat));
        }
      }
      canvas.drawPath(pathSelected,paintSelected);
    }
  }
}
