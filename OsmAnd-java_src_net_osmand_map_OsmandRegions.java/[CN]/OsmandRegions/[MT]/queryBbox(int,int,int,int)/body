{
  final List<BinaryMapDataObject> result=new ArrayList<BinaryMapDataObject>();
  BinaryMapIndexReader.SearchRequest<BinaryMapDataObject> sr=BinaryMapIndexReader.buildSearchRequest(lx,rx,ty,by,5,new BinaryMapIndexReader.SearchFilter(){
    @Override public boolean accept(    TIntArrayList types,    BinaryMapIndexReader.MapIndex index){
      return true;
    }
  }
,new ResultMatcher<BinaryMapDataObject>(){
    @Override public boolean publish(    BinaryMapDataObject object){
      if (object.getPointsLength() < 1) {
        return false;
      }
      initTypes(object);
      result.add(object);
      return false;
    }
    @Override public boolean isCancelled(){
      return false;
    }
  }
);
  sr.log=false;
  if (reader != null) {
    reader.searchMapIndex(sr);
  }
  return result;
}
