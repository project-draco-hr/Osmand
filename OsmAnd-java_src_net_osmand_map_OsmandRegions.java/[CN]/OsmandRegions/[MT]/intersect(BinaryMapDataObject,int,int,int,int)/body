{
  if (contain(bo,lx,ty)) {
    return true;
  }
  if (bo.getPointsLength() == 0) {
    return false;
  }
  if (bo.getPoint31XTile(0) >= lx && bo.getPoint31XTile(0) <= rx && bo.getPoint31YTile(0) >= ty && bo.getPoint31YTile(0) <= by) {
    return true;
  }
  for (int i=1; i < bo.getPointsLength(); i++) {
    int px=bo.getPoint31XTile(i - 1);
    int x=bo.getPoint31XTile(i);
    int py=bo.getPoint31YTile(i - 1);
    int y=bo.getPoint31YTile(i);
    if (x < lx && px < lx) {
      continue;
    }
 else     if (x > rx && px > rx) {
      continue;
    }
 else     if (y > by && py > by) {
      continue;
    }
 else     if (y < ty && py < ty) {
      continue;
    }
    long in=MapAlgorithms.calculateIntersection(px,py,x,y,lx,rx,by,ty);
    if (in != -1) {
      return true;
    }
  }
  return false;
}
