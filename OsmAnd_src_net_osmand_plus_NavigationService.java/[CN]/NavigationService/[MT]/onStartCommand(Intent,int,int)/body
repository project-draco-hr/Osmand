{
  handler=new Handler();
  final OsmandApplication app=(OsmandApplication)getApplication();
  settings=app.getSettings();
  usedBy=intent.getIntExtra(USAGE_INTENT,0);
  serviceOffInterval=intent.getIntExtra(USAGE_OFF_INTERVAL,0);
  if ((usedBy & USED_BY_NAVIGATION) != 0) {
    serviceOffInterval=0;
  }
  serviceOffProvider=LocationManager.GPS_PROVIDER;
  serviceError=serviceOffInterval / 5;
  serviceError=Math.min(serviceError,12 * 60 * 1000);
  serviceError=Math.max(serviceError,30 * 1000);
  serviceError=Math.min(serviceError,serviceOffInterval);
  locationProvider=app.getLocationProvider();
  app.setNavigationService(this);
  if (isContinuous()) {
    LocationManager locationManager=(LocationManager)getSystemService(LOCATION_SERVICE);
    try {
      locationManager.requestLocationUpdates(serviceOffProvider,0,0,NavigationService.this);
    }
 catch (    SecurityException e) {
      Toast.makeText(this,R.string.no_location_permission,Toast.LENGTH_LONG).show();
      Log.d(PlatformUtil.TAG,"Location service permission not granted");
    }
catch (    IllegalArgumentException e) {
      Toast.makeText(this,R.string.gps_not_available,Toast.LENGTH_LONG).show();
      Log.d(PlatformUtil.TAG,"GPS location provider not available");
    }
  }
 else {
    AlarmManager alarmManager=(AlarmManager)getSystemService(ALARM_SERVICE);
    pendingIntent=PendingIntent.getBroadcast(this,0,new Intent(this,OnNavigationServiceAlarmReceiver.class),PendingIntent.FLAG_UPDATE_CURRENT);
    alarmManager.setRepeating(AlarmManager.ELAPSED_REALTIME_WAKEUP,SystemClock.elapsedRealtime() + 500,serviceOffInterval,pendingIntent);
  }
  Builder ntf=app.getNotificationHelper().buildNotificationInStatusBar();
  if (ntf != null) {
    startForeground(NotificationHelper.NOTIFICATION_SERVICE_ID,ntf.build());
  }
  return START_REDELIVER_INTENT;
}
