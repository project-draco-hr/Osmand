{
  handler=new Handler();
  ClientContext cl=((OsmandApplication)getApplication());
  settings=cl.getSettings();
  startedForNavigation=intent.getBooleanExtra(NAVIGATION_START_SERVICE_PARAM,false);
  if (startedForNavigation) {
    serviceOffInterval=0;
  }
 else {
    serviceOffInterval=settings.SERVICE_OFF_INTERVAL.get();
  }
  serviceOffProvider=LocationManager.GPS_PROVIDER;
  serviceError=serviceOffInterval / 5;
  serviceError=Math.min(serviceError,12 * 60 * 1000);
  serviceError=Math.max(serviceError,30 * 1000);
  serviceError=Math.min(serviceError,serviceOffInterval);
  savingTrackHelper=((OsmandApplication)getApplication()).getSavingTrackHelper();
  liveMonitoringHelper=((OsmandApplication)getApplication()).getLiveMonitoringHelper();
  routingHelper=((OsmandApplication)getApplication()).getRoutingHelper();
  ((OsmandApplication)getApplication()).setNavigationService(this);
  if (isContinuous()) {
    LocationManager locationManager=(LocationManager)getSystemService(LOCATION_SERVICE);
    try {
      locationManager.requestLocationUpdates(serviceOffProvider,0,0,NavigationService.this);
    }
 catch (    IllegalArgumentException e) {
      Toast.makeText(this,R.string.gps_not_available,Toast.LENGTH_LONG).show();
      Log.d(LogUtil.TAG,"GPS location provider not available");
    }
  }
 else {
    AlarmManager alarmManager=(AlarmManager)getSystemService(ALARM_SERVICE);
    pendingIntent=PendingIntent.getBroadcast(this,0,new Intent(this,OnNavigationServiceAlarmReceiver.class),PendingIntent.FLAG_UPDATE_CURRENT);
    alarmManager.setRepeating(AlarmManager.ELAPSED_REALTIME_WAKEUP,SystemClock.elapsedRealtime() + 500,serviceOffInterval,pendingIntent);
  }
  broadcastReceiver=new BroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
      NavigationService.this.stopSelf();
    }
  }
;
  registerReceiver(broadcastReceiver,new IntentFilter(OSMAND_STOP_SERVICE_ACTION));
  Intent notificationIntent=new Intent(OSMAND_STOP_SERVICE_ACTION);
  Notification notification=new Notification(R.drawable.bgs_icon,"",System.currentTimeMillis());
  notification.flags=Notification.FLAG_NO_CLEAR;
  notification.setLatestEventInfo(this,Version.getAppName(cl),getString(R.string.service_stop_background_service),PendingIntent.getBroadcast(this,0,notificationIntent,PendingIntent.FLAG_UPDATE_CURRENT));
  NotificationManager mNotificationManager=(NotificationManager)getSystemService(NOTIFICATION_SERVICE);
  mNotificationManager.notify(NOTIFICATION_SERVICE_ID,notification);
  return START_REDELIVER_INTENT;
}
