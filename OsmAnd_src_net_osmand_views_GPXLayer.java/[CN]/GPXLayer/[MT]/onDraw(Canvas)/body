{
  path.reset();
  if (points.isEmpty()) {
    return;
  }
  int w=view.getWidth();
  int h=view.getHeight();
  boundsRect=new Rect(-w / 2,-h / 2,3 * w / 2,3 * h / 2);
  view.calculateTileRectangle(boundsRect,view.getCenterPointX(),view.getCenterPointY(),view.getXTile(),view.getYTile(),tileRect);
  double topLatitude=MapUtils.getLatitudeFromTile(view.getZoom(),tileRect.top);
  double leftLongitude=MapUtils.getLongitudeFromTile(view.getZoom(),tileRect.left);
  double bottomLatitude=MapUtils.getLatitudeFromTile(view.getZoom(),tileRect.bottom);
  double rightLongitude=MapUtils.getLongitudeFromTile(view.getZoom(),tileRect.right);
  int startIndex=-1;
  int endIndex=-1;
  for (int i=0; i < points.size(); i++) {
    Location ls=points.get(i);
    if (leftLongitude <= ls.getLongitude() && ls.getLongitude() <= rightLongitude && bottomLatitude <= ls.getLatitude() && ls.getLatitude() <= topLatitude) {
      if (startIndex == -1) {
        startIndex=i > 0 ? i - 1 : i;
      }
    }
 else     if (startIndex > 0) {
      endIndex=i;
      break;
    }
  }
  if (startIndex == -1) {
    return;
  }
 else   if (endIndex == -1) {
    endIndex=points.size() - 1;
  }
  int px=view.getMapXForPoint(points.get(startIndex).getLongitude());
  int py=view.getMapYForPoint(points.get(startIndex).getLatitude());
  path.moveTo(px,py);
  for (int i=startIndex + 1; i <= endIndex; i++) {
    Location o=points.get(i);
    int x=view.getMapXForPoint(o.getLongitude());
    int y=view.getMapYForPoint(o.getLatitude());
    path.lineTo(x,y);
  }
  canvas.drawPath(path,paint);
}
