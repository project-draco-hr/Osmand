{
  super.onCreate(savedInstanceState);
  getSupportActionBar().setTitle(R.string.accessibility_preferences);
  PreferenceScreen grp=getPreferenceScreen();
  String[] entries=new String[AccessibilityMode.values().length];
  for (int i=0; i < entries.length; i++) {
    entries[i]=AccessibilityMode.values()[i].toHumanString(getMyApplication());
  }
  accessibilityModePreference=createListPreference(settings.ACCESSIBILITY_MODE,entries,AccessibilityMode.values(),R.string.accessibility_mode,R.string.accessibility_mode_descr);
  accessibilityModePreference.setOnPreferenceChangeListener(new OnPreferenceChangeListener(){
    private final OnPreferenceChangeListener committer=accessibilityModePreference.getOnPreferenceChangeListener();
    @Override public boolean onPreferenceChange(    Preference preference,    Object newValue){
      if (committer != null)       committer.onPreferenceChange(preference,newValue);
      updateAllSettings();
      return true;
    }
  }
);
  addSpeechRateSetting(grp);
  grp.addPreference(accessibilityModePreference);
  PreferenceCategory cat=new PreferenceCategory(this);
  cat.setKey("accessibility_options");
  cat.setTitle(R.string.accessibility_options);
  cat.setEnabled(getMyApplication().accessibilityEnabled());
  grp.addPreference(cat);
  entries=new String[RelativeDirectionStyle.values().length];
  for (int i=0; i < entries.length; i++) {
    entries[i]=RelativeDirectionStyle.values()[i].toHumanString(getMyApplication());
  }
  directionStylePreference=createListPreference(settings.DIRECTION_STYLE,entries,RelativeDirectionStyle.values(),R.string.settings_direction_style,R.string.settings_direction_style_descr);
  directionStylePreference.setOnPreferenceChangeListener(new OnPreferenceChangeListener(){
    private final OnPreferenceChangeListener committer=directionStylePreference.getOnPreferenceChangeListener();
    @Override public boolean onPreferenceChange(    Preference preference,    Object newValue){
      if (committer != null)       committer.onPreferenceChange(preference,newValue);
      updateAllSettings();
      return true;
    }
  }
);
  cat.addPreference(directionStylePreference);
  cat.addPreference(createCheckBoxPreference(settings.ZOOM_BY_TRACKBALL,R.string.zoom_by_trackball,R.string.zoom_by_trackball_descr));
  cat.addPreference(createCheckBoxPreference(settings.USE_SHORT_OBJECT_NAMES,R.string.use_short_object_names,R.string.use_short_object_names_descr));
  if (Build.VERSION.SDK_INT < 14) {
    cat.addPreference(createCheckBoxPreference(settings.SCROLL_MAP_BY_GESTURES,R.string.scroll_map_by_gestures,R.string.scroll_map_by_gestures_descr));
    cat.addPreference(createCheckBoxPreference(settings.ACCESSIBILITY_EXTENSIONS,R.string.accessibility_extensions,R.string.accessibility_extensions));
  }
}
