{
  View mainView=getView();
  if (plugin == null) {
    mainView.setVisibility(View.GONE);
    return;
  }
  List<AudioVideoNotesPlugin.Recording> notes=new ArrayList<AudioVideoNotesPlugin.Recording>(plugin.getAllRecordings());
  if (notes.size() == 0) {
    mainView.setVisibility(View.GONE);
    return;
  }
 else {
    mainView.setVisibility(View.VISIBLE);
  }
  LinearLayout notesLayout=(LinearLayout)mainView.findViewById(R.id.notes);
  notesLayout.removeAllViews();
  if (notes.size() > 3) {
    while (notes.size() != 3) {
      notes.remove(3);
    }
  }
  AudioVideoIcons icons=new AudioVideoIcons(getActivity());
  for (  final AudioVideoNotesPlugin.Recording recording : notes) {
    LayoutInflater inflater=getActivity().getLayoutInflater();
    View view=inflater.inflate(R.layout.note,null,false);
    Drawable icon=getNoteView(recording,view,getActivity(),icons);
    icon.setColorFilter(getResources().getColor(R.color.color_distance),PorterDuff.Mode.MULTIPLY);
    view.setBackgroundColor(Color.TRANSPARENT);
    view.findViewById(R.id.play).setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        plugin.playRecording(getActivity(),recording);
      }
    }
);
    view.findViewById(R.id.options).setVisibility(View.GONE);
    view.findViewById(R.id.divider).setVisibility(View.VISIBLE);
    view.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        getMyApplication().getSettings().setMapLocationToShow(recording.getLatitude(),recording.getLongitude(),15,new PointDescription(recording.getSearchHistoryType(),recording.getName(getActivity())),true,recording);
        MapActivity.launchMapActivityMoveToTop(getActivity());
      }
    }
);
    notesLayout.addView(view);
  }
}
