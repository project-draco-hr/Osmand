{
  final Location ll=new Location("");
  ll.setLatitude(loc.getLatitude());
  ll.setLongitude(loc.getLongitude());
  app.getLocationProvider().getRouteSegment(ll,new ResultMatcher<RouteDataObject>(){
    @Override public boolean publish(    RouteDataObject object){
      if (object == null) {
        if (activity != null) {
          Toast.makeText(activity,R.string.error_avoid_specific_road,Toast.LENGTH_LONG).show();
        }
        if (callback != null) {
          callback.onAddImpassableRoad(false,null);
        }
      }
 else {
        addImpassableRoadInternal(object,ll,showDialog,activity,loc);
        if (callback != null) {
          callback.onAddImpassableRoad(true,object);
        }
      }
      return true;
    }
    @Override public boolean isCancelled(){
      return callback != null && callback.isCancelled();
    }
  }
);
  if (!skipWritingSettings) {
    app.getSettings().addImpassableRoad(loc.getLatitude(),loc.getLongitude());
  }
}
