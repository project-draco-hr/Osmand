{
  if (currentRunningJob == null) {
    if (System.currentTimeMillis() - lastTimeEvaluatedRoute > evalWaitInterval) {
synchronized (this) {
        currentRunningJob=new Thread(new Runnable(){
          @Override public void run(){
            RouteCalculationResult res=provider.calculateRouteImpl(start,end,mode);
synchronized (RoutingHelper.this) {
              if (res.isCalculated()) {
                setNewRoute(res);
                evalWaitInterval=3000;
              }
 else {
                evalWaitInterval=evalWaitInterval * 4 / 3;
                if (evalWaitInterval > 120000) {
                  evalWaitInterval=120000;
                }
              }
              currentRunningJob=null;
            }
            if (activity != null) {
              if (res.isCalculated()) {
                int[] dist=res.getListDistance();
                int l=dist != null && dist.length > 0 ? dist[0] : 0;
                showMessage(activity.getString(R.string.new_route_calculated_dist) + MapUtils.getFormattedDistance(l));
                activity.getMapView().refreshMap();
              }
 else {
                if (res.getErrorMessage() != null) {
                  showMessage(activity.getString(R.string.error_calculating_route) + res.getErrorMessage());
                }
 else                 if (res.getLocations() == null) {
                  showMessage(activity.getString(R.string.error_calculating_route_occured));
                }
 else {
                  showMessage(activity.getString(R.string.empty_route_calculated));
                }
              }
            }
            lastTimeEvaluatedRoute=System.currentTimeMillis();
          }
        }
,"Calculating route");
        currentRunningJob.start();
      }
    }
  }
}
