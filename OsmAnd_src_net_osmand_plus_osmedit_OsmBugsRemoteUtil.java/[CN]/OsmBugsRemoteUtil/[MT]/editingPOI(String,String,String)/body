{
  OsmBugResult r=new OsmBugResult();
  try {
    HttpURLConnection connection=NetworkUtils.getHttpURLConnection(url);
    log.info("Editing poi " + url);
    connection.setConnectTimeout(15000);
    connection.setRequestMethod(requestMethod);
    connection.setRequestProperty("User-Agent",Version.getFullVersion(app));
    if (true) {
      String token=settings.USER_NAME.get() + ":" + settings.USER_PASSWORD.get();
      connection.addRequestProperty("Authorization","Basic " + Base64.encode(token.getBytes("UTF-8")));
    }
    connection.setDoInput(true);
    if (requestMethod.equals("PUT") || requestMethod.equals("POST") || requestMethod.equals("DELETE")) {
    }
    connection.connect();
    String msg=connection.getResponseMessage();
    boolean ok=connection.getResponseCode() == HttpURLConnection.HTTP_OK;
    log.info(msg);
    StringBuilder responseBody=Algorithms.readFromInputStream(connection.getInputStream());
    log.info("Response : " + responseBody);
    connection.disconnect();
    if (!ok) {
      r.warning=msg + "\n" + responseBody;
    }
  }
 catch (  NullPointerException e) {
    String msg=app.getString(R.string.auth_failed);
    log.error(msg,e);
    r.warning=app.getString(R.string.auth_failed) + "";
  }
catch (  MalformedURLException e) {
    log.error(userOperation + " " + app.getString(R.string.failed_op),e);
    r.warning=e.getMessage() + "";
  }
catch (  IOException e) {
    log.error(userOperation + " " + app.getString(R.string.failed_op),e);
    r.warning=e.getMessage() + " link unavailable";
  }
  return r;
}
