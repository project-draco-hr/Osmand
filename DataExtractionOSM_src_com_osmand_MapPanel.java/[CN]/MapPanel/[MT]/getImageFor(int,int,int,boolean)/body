{
  if (map == null) {
    return null;
  }
  String file=getFileForImage(x,y,zoom,map.getTileFormat());
  if (cache.get(file) == null) {
    File en=new File(tilesLocation,file);
    if (cache.size() > 1000) {
      ArrayList<String> list=new ArrayList<String>(cache.keySet());
      for (int i=0; i < list.size(); i+=2) {
        cache.remove(list.get(i));
      }
    }
    if (!downloader.isFileCurrentlyDownloaded(en)) {
      if (en.exists()) {
        long time=System.currentTimeMillis();
        try {
          cache.put(file,ImageIO.read(en));
          if (log.isDebugEnabled()) {
            log.debug("Loaded file : " + file + " "+ -(time - System.currentTimeMillis())+ " ms");
          }
        }
 catch (        IIOException e) {
          log.error("Eror reading png " + x + " "+ y+ " zoom : "+ zoom,e);
        }
      }
      if (loadIfNeeded && cache.get(file) == null) {
        String urlToLoad=map.getUrlToLoad(x,y,zoom);
        if (urlToLoad != null) {
          downloader.requestToDownload(urlToLoad,new DownloadRequest(en,x,y,zoom));
        }
      }
    }
  }
  return cache.get(file);
}
