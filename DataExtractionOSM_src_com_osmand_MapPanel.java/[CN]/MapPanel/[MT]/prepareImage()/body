{
  try {
    if (images != null) {
      for (int i=0; i < images.length; i++) {
        for (int j=0; j < images[i].length; j++) {
        }
      }
    }
    double xTileLeft=getXTile() - getSize().width / (2d * tileSize);
    double xTileRight=getXTile() + getSize().width / (2d * tileSize);
    double yTileUp=getYTile() - getSize().height / (2d * tileSize);
    double yTileDown=getYTile() + getSize().height / (2d * tileSize);
    xStartingImage=-(int)((xTileLeft - Math.floor(xTileLeft)) * tileSize);
    yStartingImage=-(int)((yTileUp - Math.floor(yTileUp)) * tileSize);
    int tileXCount=((int)xTileRight - (int)xTileLeft + 1);
    int tileYCount=((int)yTileDown - (int)yTileUp + 1);
    images=new BufferedImage[tileXCount][tileYCount];
    for (int i=0; i < images.length; i++) {
      for (int j=0; j < images[i].length; j++) {
        images[i][j]=getImageFor((int)xTileLeft + i,(int)yTileUp + j);
      }
    }
    if (points != null) {
      double latDown=MapUtils.getLatitudeFromTile(zoom,yTileDown);
      double longDown=MapUtils.getLongitudeFromTile(zoom,xTileRight);
      double latUp=MapUtils.getLatitudeFromTile(zoom,yTileUp);
      double longUp=MapUtils.getLongitudeFromTile(zoom,xTileLeft);
      List<LatLon> objects=points.getObjects(latUp,longUp,latDown,longDown);
      pointsToDraw.clear();
      for (      LatLon n : objects) {
        int pixX=MapUtils.getPixelShiftX(zoom,n.getLongitude(),this.longitude,tileSize) + getWidth() / 2;
        int pixY=MapUtils.getPixelShiftY(zoom,n.getLatitude(),this.latitude,tileSize) + getHeight() / 2;
        if (pixX >= 0 && pixY >= 0) {
          pointsToDraw.add(new Point(pixX,pixY));
        }
      }
    }
    repaint();
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
}
