{
  InputStream is=null;
  if (externalRenderers.containsKey(name)) {
    is=new FileInputStream(externalRenderers.get(name));
  }
 else   if (internalRenderers.containsKey(name)) {
    is=RenderingRulesStorage.class.getResourceAsStream(internalRenderers.get(name));
  }
 else {
    throw new IllegalArgumentException("Not found " + name);
  }
  RenderingRulesStorage b=new RenderingRulesStorage();
  b.parseRulesFromXmlInputStream(is);
  loadedRenderers.add(name);
  if (!Algoritms.isEmpty(b.getDepends())) {
    if (loadedRenderers.contains(b.getDepends())) {
      log.warn("Circular dependencies found " + name);
    }
 else {
      RenderingRulesStorage dep=getRenderer(b.getDepends(),loadedRenderers);
      if (dep == null) {
        log.warn("Dependent renderer not found : " + name);
      }
    }
  }
  renderers.put(name,b);
  return b;
}
