{
  InputStream is=null;
  if (externalRenderers.containsKey(name)) {
    is=new FileInputStream(externalRenderers.get(name));
  }
 else   if (internalRenderers.containsKey(name)) {
    is=RenderingRulesStorage.class.getResourceAsStream(internalRenderers.get(name));
  }
 else {
    throw new IllegalArgumentException("Not found " + name);
  }
  RenderingRulesStorage main=new RenderingRulesStorage();
  main.parseRulesFromXmlInputStream(is);
  loadedRenderers.add(name);
  if (!Algoritms.isEmpty(main.getDepends())) {
    if (loadedRenderers.contains(main.getDepends())) {
      log.warn("Circular dependencies found " + name);
    }
 else {
      RenderingRulesStorage dep=getRenderer(main.getDepends(),loadedRenderers);
      if (dep == null) {
        log.warn("Dependent renderer not found : " + name);
      }
      main.setDependsStorage(dep);
    }
  }
  renderers.put(name,main);
  return main;
}
