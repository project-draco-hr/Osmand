{
  if (tiles16z.size() > 0) {
    int z=16;
    int x=tiles16z.get(0) >> z;
    int y=tiles16z.get(0) & ((1 << z) - 1);
    List<AmenityIndexRepository> repos=new ArrayList<AmenityIndexRepository>();
    double topLatitude=MapUtils.getLatitudeFromTile(z,y);
    double bottomLatitude=MapUtils.getLatitudeFromTile(z,y + 1);
    double leftLongitude=MapUtils.getLongitudeFromTile(z,x);
    double rightLongitude=MapUtils.getLongitudeFromTile(z,x + 1);
    for (int k=1; k < tiles16z.size(); k++) {
      topLatitude=Math.max(topLatitude,MapUtils.getLatitudeFromTile(z,y));
      bottomLatitude=Math.min(bottomLatitude,MapUtils.getLatitudeFromTile(z,y + 1));
      leftLongitude=Math.min(leftLongitude,MapUtils.getLongitudeFromTile(z,x));
      rightLongitude=Math.max(rightLongitude,MapUtils.getLongitudeFromTile(z,x + 1));
    }
    for (    AmenityIndexRepository index : amenityRepositories) {
      if (index.checkContains(topLatitude,leftLongitude,bottomLatitude,rightLongitude)) {
        repos.add(index);
      }
    }
    if (!repos.isEmpty()) {
      for (      AmenityIndexRepository r : repos) {
      }
    }
  }
}
