{
  final List<Amenity> amenities=new ArrayList<Amenity>();
  if (filter instanceof NameFinderPoiFilter || filter instanceof SearchByNameFilter) {
    List<Amenity> tempResults=filter instanceof NameFinderPoiFilter ? ((NameFinderPoiFilter)filter).getSearchedAmenities() : ((SearchByNameFilter)filter).getSearchedAmenities();
    for (    Amenity a : tempResults) {
      LatLon l=a.getLocation();
      if (l != null && l.getLatitude() <= topLatitude && l.getLatitude() >= bottomLatitude && l.getLongitude() >= leftLongitude && l.getLongitude() <= rightLongitude) {
        if (matcher.publish(a)) {
          amenities.add(a);
        }
      }
    }
  }
 else {
    final String filterByName=filter.getFilterByName();
    for (    AmenityIndexRepository index : amenityRepositories) {
      if (index.checkContains(topLatitude,leftLongitude,bottomLatitude,rightLongitude)) {
        index.searchAmenities(MapUtils.get31TileNumberY(topLatitude),MapUtils.get31TileNumberX(leftLongitude),MapUtils.get31TileNumberY(bottomLatitude),MapUtils.get31TileNumberX(rightLongitude),-1,filter,amenities,new ResultMatcher<Amenity>(){
          @Override public boolean publish(          Amenity object){
            if (checkNameFilter(object,filterByName)) {
              return matcher.publish(object);
            }
            return false;
          }
          @Override public boolean isCancelled(){
            return matcher.isCancelled();
          }
        }
);
      }
    }
  }
  return amenities;
}
