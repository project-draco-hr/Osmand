{
  List<Amenity> amenities=new ArrayList<Amenity>();
  List<AmenityIndexRepositoryBinary> list=new ArrayList<AmenityIndexRepositoryBinary>();
  for (  AmenityIndexRepository index : amenityRepositories.values()) {
    if (index instanceof AmenityIndexRepositoryBinary) {
      if (index.checkContains(topLatitude,leftLongitude,bottomLatitude,rightLongitude)) {
        if (index.checkContains(lat,lon)) {
          list.add(0,(AmenityIndexRepositoryBinary)index);
        }
 else {
          list.add((AmenityIndexRepositoryBinary)index);
        }
      }
    }
  }
  int left=MapUtils.get31TileNumberX(leftLongitude);
  int top=MapUtils.get31TileNumberY(topLatitude);
  int right=MapUtils.get31TileNumberX(rightLongitude);
  int bottom=MapUtils.get31TileNumberY(bottomLatitude);
  for (  AmenityIndexRepositoryBinary index : list) {
    if (matcher != null && matcher.isCancelled()) {
      break;
    }
    List<Amenity> result=index.searchAmenitiesByName(MapUtils.get31TileNumberX(lon),MapUtils.get31TileNumberY(lat),left,top,right,bottom,searchQuery,matcher);
    amenities.addAll(result);
  }
  return amenities;
}
