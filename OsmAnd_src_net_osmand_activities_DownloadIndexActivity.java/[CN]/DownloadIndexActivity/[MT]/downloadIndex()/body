{
  try {
    log.debug("Start loading list of index files");
    TreeMap<String,String> indexFiles=new TreeMap<String,String>(new Comparator<String>(){
      private static final long serialVersionUID=1L;
      @Override public int compare(      String object1,      String object2){
        if (object1.endsWith(IndexConstants.VOICE_INDEX_EXT_ZIP)) {
          if (object2.endsWith(IndexConstants.VOICE_INDEX_EXT_ZIP)) {
            return object1.compareTo(object2);
          }
 else {
            return -1;
          }
        }
 else         if (object2.endsWith(IndexConstants.VOICE_INDEX_EXT_ZIP)) {
          return 1;
        }
        return object1.compareTo(object2);
      }
    }
);
    DownloaderIndexFromGoogleCode.getIndexFiles(indexFiles,ADDRESS_TABLE_VERSION + ADDRESS_INDEX_EXT,ADDRESS_TABLE_VERSION + ADDRESS_INDEX_EXT_ZIP,POI_TABLE_VERSION + POI_INDEX_EXT,POI_TABLE_VERSION + POI_INDEX_EXT_ZIP,TRANSPORT_TABLE_VERSION + TRANSPORT_INDEX_EXT,TRANSPORT_TABLE_VERSION + TRANSPORT_INDEX_EXT_ZIP,BINARY_MAP_VERSION + BINARY_MAP_INDEX_EXT,BINARY_MAP_VERSION + BINARY_MAP_INDEX_EXT_ZIP,VOICE_VERSION + VOICE_INDEX_EXT_ZIP);
    if (indexFiles != null && !indexFiles.isEmpty()) {
      return indexFiles;
    }
 else {
      return null;
    }
  }
 catch (  RuntimeException e) {
    log.error("Error while loading indexes from repository",e);
    return null;
  }
}
