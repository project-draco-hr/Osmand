{
  String key=e.getKey();
  String value=e.getValue();
  File parent=null;
  String toSavePostfix=null;
  String toCheckPostfix=null;
  boolean unzipDir=false;
  File externalStorageDirectory=Environment.getExternalStorageDirectory();
  if (key.endsWith(ADDRESS_INDEX_EXT)) {
    parent=new File(externalStorageDirectory,ResourceManager.ADDRESS_PATH);
    toSavePostfix=ADDRESS_INDEX_EXT;
    toCheckPostfix=ADDRESS_INDEX_EXT;
  }
 else   if (key.endsWith(IndexConstants.ADDRESS_INDEX_EXT_ZIP)) {
    parent=new File(externalStorageDirectory,ResourceManager.ADDRESS_PATH);
    toSavePostfix=ADDRESS_INDEX_EXT_ZIP;
    toCheckPostfix=ADDRESS_INDEX_EXT;
  }
 else   if (key.endsWith(IndexConstants.POI_INDEX_EXT)) {
    parent=new File(externalStorageDirectory,ResourceManager.POI_PATH);
    toSavePostfix=POI_INDEX_EXT;
    toCheckPostfix=POI_INDEX_EXT;
  }
 else   if (key.endsWith(IndexConstants.POI_INDEX_EXT_ZIP)) {
    parent=new File(externalStorageDirectory,ResourceManager.POI_PATH);
    toSavePostfix=POI_INDEX_EXT_ZIP;
    toCheckPostfix=POI_INDEX_EXT;
  }
 else   if (key.endsWith(IndexConstants.TRANSPORT_INDEX_EXT)) {
    parent=new File(externalStorageDirectory,ResourceManager.TRANSPORT_PATH);
    toSavePostfix=TRANSPORT_INDEX_EXT;
    toCheckPostfix=TRANSPORT_INDEX_EXT;
  }
 else   if (key.endsWith(IndexConstants.TRANSPORT_INDEX_EXT_ZIP)) {
    parent=new File(externalStorageDirectory,ResourceManager.TRANSPORT_PATH);
    toSavePostfix=TRANSPORT_INDEX_EXT_ZIP;
    toCheckPostfix=TRANSPORT_INDEX_EXT;
  }
 else   if (key.endsWith(IndexConstants.BINARY_MAP_INDEX_EXT)) {
    parent=new File(externalStorageDirectory,ResourceManager.APP_DIR);
    toSavePostfix=BINARY_MAP_INDEX_EXT;
    toCheckPostfix=BINARY_MAP_INDEX_EXT;
  }
 else   if (key.endsWith(IndexConstants.BINARY_MAP_INDEX_EXT_ZIP)) {
    parent=new File(externalStorageDirectory,ResourceManager.APP_DIR);
    toSavePostfix=BINARY_MAP_INDEX_EXT_ZIP;
    toCheckPostfix=BINARY_MAP_INDEX_EXT;
  }
 else   if (key.endsWith(IndexConstants.VOICE_INDEX_EXT_ZIP)) {
    parent=new File(externalStorageDirectory,ResourceManager.VOICE_PATH);
    toSavePostfix=VOICE_INDEX_EXT_ZIP;
    toCheckPostfix="";
    unzipDir=true;
  }
  if (parent != null) {
    parent.mkdirs();
  }
  final DownloadEntry entry;
  if (parent == null || !parent.exists()) {
    Toast.makeText(DownloadIndexActivity.this,getString(R.string.sd_dir_not_accessible),Toast.LENGTH_LONG).show();
    entry=null;
  }
 else {
    entry=new DownloadEntry();
    int ls=key.lastIndexOf('_');
    entry.baseName=key.substring(0,ls);
    String extractDateAndSize=extractDateAndSize(value);
    entry.fileToSave=new File(parent,entry.baseName + toSavePostfix);
    entry.unzip=unzipDir;
    if (extractDateAndSize.length() > 10) {
      SimpleDateFormat format=new SimpleDateFormat("dd.MM.yyyy");
      try {
        Date d=format.parse(extractDateAndSize.substring(1,11));
        entry.dateModified=d.getTime();
      }
 catch (      ParseException e1) {
      }
    }
    int i=extractDateAndSize.lastIndexOf("MB");
    if (i > 12) {
      String size=extractDateAndSize.substring(14,i - 1);
      try {
        entry.sizeMB=Double.parseDouble(size);
      }
 catch (      NumberFormatException e1) {
      }
    }
    entry.fileToUnzip=new File(parent,entry.baseName + toCheckPostfix);
  }
  return entry;
}
