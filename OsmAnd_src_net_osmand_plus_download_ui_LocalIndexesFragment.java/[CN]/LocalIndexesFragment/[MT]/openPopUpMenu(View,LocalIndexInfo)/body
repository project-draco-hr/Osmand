{
  IconsCache iconsCache=getMyApplication().getIconsCache();
  final PopupMenu optionsMenu=new PopupMenu(getActivity(),v);
  DirectionsDialogs.setupPopUpMenuIcon(optionsMenu);
  final boolean restore=info.isBackupedData();
  MenuItem item;
  if ((info.getType() == LocalIndexType.MAP_DATA) || (info.getType() == LocalIndexType.DEACTIVATED)) {
    item=optionsMenu.getMenu().add(restore ? R.string.local_index_mi_restore : R.string.local_index_mi_backup).setIcon(iconsCache.getContentIcon(R.drawable.ic_type_archive));
    item.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener(){
      @Override public boolean onMenuItemClick(      MenuItem item){
        performBasicOperation(restore ? R.string.local_index_mi_restore : R.string.local_index_mi_backup,info);
        return true;
      }
    }
);
  }
  item=optionsMenu.getMenu().add(R.string.shared_string_rename).setIcon(iconsCache.getContentIcon(R.drawable.ic_action_edit_dark));
  item.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener(){
    @Override public boolean onMenuItemClick(    MenuItem item){
      performBasicOperation(R.string.shared_string_rename,info);
      return true;
    }
  }
);
  final IndexItem update=filesToUpdate.get(info.getFileName());
  if (update != null) {
    item=optionsMenu.getMenu().add(R.string.shared_string_download).setIcon(iconsCache.getContentIcon(R.drawable.ic_action_import));
    item.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener(){
      @Override public boolean onMenuItemClick(      MenuItem item){
        getDownloadActivity().startDownload(update);
        return true;
      }
    }
);
  }
  item=optionsMenu.getMenu().add(R.string.shared_string_delete).setIcon(iconsCache.getContentIcon(R.drawable.ic_action_delete_dark));
  item.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener(){
    @Override public boolean onMenuItemClick(    MenuItem item){
      performBasicOperation(R.string.shared_string_delete,info);
      return true;
    }
  }
);
  if (info.getType() == LocalIndexType.MAP_DATA && getMyApplication().getSettings().BETA_TESTING_LIVE_UPDATES.get()) {
    item=optionsMenu.getMenu().add("Live updates").setIcon(iconsCache.getContentIcon(R.drawable.ic_action_refresh_dark));
    item.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener(){
      @Override public boolean onMenuItemClick(      MenuItem item){
        runLiveUpdate(info);
        return true;
      }
    }
);
  }
  optionsMenu.show();
}
