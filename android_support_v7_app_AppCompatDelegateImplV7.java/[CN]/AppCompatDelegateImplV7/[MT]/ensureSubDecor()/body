{
  if (!mSubDecorInstalled) {
    final LayoutInflater inflater=LayoutInflater.from(mContext);
    if (!mWindowNoTitle) {
      if (mIsFloating) {
        mSubDecor=(ViewGroup)inflater.inflate(R.layout.abc_dialog_title_material,null);
      }
 else       if (mHasActionBar) {
        TypedValue outValue=new TypedValue();
        mContext.getTheme().resolveAttribute(R.attr.actionBarTheme,outValue,true);
        Context themedContext;
        if (outValue.resourceId != 0) {
          themedContext=new ContextThemeWrapper(mContext,outValue.resourceId);
        }
 else {
          themedContext=mContext;
        }
        mSubDecor=(ViewGroup)LayoutInflater.from(themedContext).inflate(R.layout.abc_screen_toolbar,null);
        mDecorContentParent=(DecorContentParent)mSubDecor.findViewById(R.id.decor_content_parent);
        mDecorContentParent.setWindowCallback(getWindowCallback());
        if (mOverlayActionBar) {
          mDecorContentParent.initFeature(FEATURE_ACTION_BAR_OVERLAY);
        }
        if (mFeatureProgress) {
          mDecorContentParent.initFeature(Window.FEATURE_PROGRESS);
        }
        if (mFeatureIndeterminateProgress) {
          mDecorContentParent.initFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
        }
      }
    }
 else {
      if (mOverlayActionMode) {
        mSubDecor=(ViewGroup)inflater.inflate(R.layout.abc_screen_simple_overlay_action_mode,null);
      }
 else {
        mSubDecor=(ViewGroup)inflater.inflate(R.layout.abc_screen_simple,null);
      }
      if (Build.VERSION.SDK_INT >= 21) {
        ViewCompat.setOnApplyWindowInsetsListener(mSubDecor,new OnApplyWindowInsetsListener(){
          @Override public WindowInsetsCompat onApplyWindowInsets(          View v,          WindowInsetsCompat insets){
            final int top=insets.getSystemWindowInsetTop();
            final int newTop=updateStatusGuard(top);
            if (top != newTop) {
              insets=insets.replaceSystemWindowInsets(insets.getSystemWindowInsetLeft(),newTop,insets.getSystemWindowInsetRight(),insets.getSystemWindowInsetBottom());
            }
            return ViewCompat.onApplyWindowInsets(v,insets);
          }
        }
);
      }
 else {
        ((FitWindowsViewGroup)mSubDecor).setOnFitSystemWindowsListener(new FitWindowsViewGroup.OnFitSystemWindowsListener(){
          @Override public void onFitSystemWindows(          Rect insets){
            insets.top=updateStatusGuard(insets.top);
          }
        }
);
      }
    }
    if (mSubDecor == null) {
      throw new IllegalArgumentException("AppCompat does not support the current theme features");
    }
    if (mDecorContentParent == null) {
      mTitleView=(TextView)mSubDecor.findViewById(R.id.title);
    }
    ViewUtils.makeOptionalFitsSystemWindows(mSubDecor);
    final ViewGroup decorContent=(ViewGroup)mWindow.findViewById(android.R.id.content);
    final ViewGroup abcContent=(ViewGroup)mSubDecor.findViewById(R.id.action_bar_activity_content);
    while (decorContent.getChildCount() > 0) {
      final View child=decorContent.getChildAt(0);
      decorContent.removeViewAt(0);
      abcContent.addView(child);
    }
    mWindow.setContentView(mSubDecor);
    decorContent.setId(View.NO_ID);
    abcContent.setId(android.R.id.content);
    if (decorContent instanceof FrameLayout) {
      ((FrameLayout)decorContent).setForeground(null);
    }
    CharSequence title=getTitle();
    if (!TextUtils.isEmpty(title)) {
      onTitleChanged(title);
    }
    applyFixedSizeWindow();
    onSubDecorInstalled(mSubDecor);
    mSubDecorInstalled=true;
    PanelFeatureState st=getPanelState(FEATURE_OPTIONS_PANEL,false);
    if (!isDestroyed() && (st == null || st.menu == null)) {
      invalidatePanelMenu(FEATURE_ACTION_BAR);
    }
  }
}
