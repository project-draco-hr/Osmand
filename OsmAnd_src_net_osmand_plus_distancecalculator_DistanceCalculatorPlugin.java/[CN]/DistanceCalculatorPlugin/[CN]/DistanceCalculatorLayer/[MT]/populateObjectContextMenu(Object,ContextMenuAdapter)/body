{
  if (o instanceof WptPt) {
    final WptPt p=(WptPt)o;
    boolean containsPoint=false;
    for (int i=0; i < measurementPoints.size(); i++) {
      Iterator<WptPt> it=measurementPoints.get(i).iterator();
      while (it.hasNext()) {
        if (it.next() == p) {
          containsPoint=true;
          break;
        }
      }
    }
    if (containsPoint) {
      OnContextMenuClick listener=new OnContextMenuClick(){
        @Override public boolean onContextMenuClick(        ArrayAdapter<?> adapter,        int itemId,        int pos,        boolean isChecked){
          if (itemId == R.string.delete_point) {
            for (int i=0; i < measurementPoints.size(); i++) {
              Iterator<WptPt> it=measurementPoints.get(i).iterator();
              while (it.hasNext()) {
                if (it.next() == p) {
                  it.remove();
                }
              }
            }
            calculateDistance();
            if (adapter.getContext() instanceof MapActivity) {
              ((MapActivity)adapter.getContext()).getContextMenu().close();
            }
          }
          return true;
        }
      }
;
      adapter.item(R.string.delete_point).iconColor(R.drawable.ic_action_delete_dark).listen(listener).reg();
    }
  }
}
