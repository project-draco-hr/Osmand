{
  updateDistanceToGo();
  if (view.getZoom() != cachedZoom) {
    zoomControl.setText(view.getZoom() + "","zm");
    relayoutLeftControls(zoomControl);
  }
  if (map.getLastKnownLocation() != null && map.getLastKnownLocation().hasSpeed()) {
    if (Math.abs(map.getLastKnownLocation().getSpeed() - cachedSpeed) > .3f) {
      cachedSpeed=map.getLastKnownLocation().getSpeed();
      cachedSpeedString=OsmAndFormatter.getFormattedSpeed(cachedSpeed,map);
      float right=paintBlack.measureText(cachedSpeedString) + 8 * scaleCoefficient + boundsForSpeed.left;
      boundsForSpeed.right=right;
    }
    if (cachedSpeed > 0) {
      canvas.drawRoundRect(boundsForSpeed,roundCorner,roundCorner,paintAlphaGray);
      canvas.drawRoundRect(boundsForSpeed,roundCorner,roundCorner,paintBlack);
      canvas.drawText(cachedSpeedString,boundsForSpeed.left + 8 * scaleCoefficient,boundsForSpeed.bottom - 9f * scaleCoefficient,paintBlack);
    }
  }
  drawRouteInfo(canvas);
  int h=0;
  for (int i=0; i < leftControls.size(); i++) {
    h+=leftControls.get(i).getHeight();
  }
  canvas.translate(LEFT_MARGIN,0);
  for (int i=leftControls.size() - 1; i >= 0; i--) {
    h-=leftControls.get(i).getHeight();
    canvas.save();
    canvas.translate(0,h);
    if (leftControls.get(i).isVisible()) {
      leftControls.get(i).onDraw(canvas);
    }
    canvas.restore();
  }
}
