{
  updateDistanceToGo();
  updateSpeedInfo();
  updateTimeLeftInfo();
  drawRouteInfo(canvas);
  int h=0;
  for (int i=0; i < leftControls.size(); i++) {
    h+=leftControls.get(i).getHeight();
  }
  h+=LEFT_MARGIN_Y;
  for (int i=leftControls.size() - 1; i >= 0; i--) {
    h-=leftControls.get(i).getHeight();
    canvas.save();
    canvas.translate(LEFT_MARGIN_X,h);
    if (leftControls.get(i).isVisible()) {
      leftControls.get(i).onDraw(canvas);
    }
    canvas.restore();
  }
  if (statusBar.getRight() == 0) {
    Rect statusBarPadding=new Rect();
    statusBarBackground.getPadding(statusBarPadding);
    statusBarBackground.setBounds(STATUS_BAR_MARGIN_X - statusBarPadding.left,-statusBarPadding.top,view.getWidth() - STATUS_BAR_MARGIN_X + statusBarPadding.right,statusBar.getMeasuredHeight() + statusBarPadding.bottom);
    statusBar.layout(STATUS_BAR_MARGIN_X,0,view.getWidth() - STATUS_BAR_MARGIN_X,statusBar.getMeasuredHeight());
  }
  statusBarBackground.draw(canvas);
  statusBar.draw(canvas);
}
