{
  RouteInfoWidgetsFactory ric=new RouteInfoWidgetsFactory();
  MapInfoWidgetsFactory mic=new MapInfoWidgetsFactory();
  MapMarkersWidgetsFactory mwf=map.getMapLayers().getMapMarkersLayer().getWidgetsFactory();
  OsmandApplication app=view.getApplication();
  lanesControl=ric.createLanesControl(map,view);
  streetNameView=new MapInfoWidgetsFactory.TopTextView(map.getMyApplication(),map);
  updateStreetName(false,calculateTextState());
  alarmControl=ric.createAlarmInfoControl(app,map);
  alarmControl.setVisibility(false);
  rulerControl=ric.createRulerControl(app,map);
  rulerControl.setVisibility(false);
  NextTurnInfoWidget bigInfoControl=ric.createNextInfoControl(map,app,false);
  registerSideWidget(bigInfoControl,R.drawable.ic_action_next_turn,R.string.map_widget_next_turn,"next_turn",true,5);
  NextTurnInfoWidget smallInfoControl=ric.createNextInfoControl(map,app,true);
  registerSideWidget(smallInfoControl,R.drawable.ic_action_next_turn,R.string.map_widget_next_turn_small,"next_turn_small",true,10);
  NextTurnInfoWidget nextNextInfoControl=ric.createNextNextInfoControl(map,app,true);
  registerSideWidget(nextNextInfoControl,R.drawable.ic_action_next_turn,R.string.map_widget_next_next_turn,"next_next_turn",true,15);
  TextInfoWidget intermediateDist=ric.createIntermediateDistanceControl(map);
  registerSideWidget(intermediateDist,R.drawable.ic_action_intermediate,R.string.map_widget_intermediate_distance,"intermediate_distance",false,3);
  TextInfoWidget dist=ric.createDistanceControl(map);
  registerSideWidget(dist,R.drawable.ic_action_target,R.string.map_widget_distance,"distance",false,5);
  TextInfoWidget time=ric.createTimeControl(map);
  registerSideWidget(time,new TimeControlWidgetState(app),"time",false,10);
  if (settings.USE_MAP_MARKERS.get()) {
    TextInfoWidget marker=mwf.createMapMarkerControl(map,true);
    registerSideWidget(marker,R.drawable.ic_action_flag_dark,R.string.map_marker_1st,"map_marker_1st",false,12);
    TextInfoWidget bearing=ric.createBearingControl(map);
    registerSideWidget(bearing,new BearingWidgetState(app),"bearing",false,13);
    TextInfoWidget marker2nd=mwf.createMapMarkerControl(map,false);
    registerSideWidget(marker2nd,R.drawable.ic_action_flag_dark,R.string.map_marker_2nd,"map_marker_2nd",false,14);
  }
 else {
    TextInfoWidget bearing=ric.createBearingControl(map);
    registerSideWidget(bearing,new BearingWidgetState(app),"bearing",false,13);
  }
  TextInfoWidget speed=ric.createSpeedControl(map);
  registerSideWidget(speed,R.drawable.ic_action_speed,R.string.map_widget_speed,"speed",false,15);
  TextInfoWidget maxspeed=ric.createMaxSpeedControl(map);
  registerSideWidget(maxspeed,R.drawable.ic_action_speed_limit,R.string.map_widget_max_speed,"max_speed",false,18);
  TextInfoWidget alt=mic.createAltitudeControl(map);
  registerSideWidget(alt,R.drawable.ic_action_altitude,R.string.map_widget_altitude,"altitude",false,20);
  TextInfoWidget gpsInfo=mic.createGPSInfoControl(map);
  registerSideWidget(gpsInfo,R.drawable.ic_action_gps_info,R.string.map_widget_gps_info,"gps_info",false,23);
  TextInfoWidget plainTime=ric.createPlainTimeControl(map);
  registerSideWidget(plainTime,R.drawable.ic_action_time,R.string.map_widget_plain_time,"plain_time",false,25);
  TextInfoWidget battery=ric.createBatteryControl(map);
  registerSideWidget(battery,R.drawable.ic_action_battery,R.string.map_widget_battery,"battery",false,26);
}
