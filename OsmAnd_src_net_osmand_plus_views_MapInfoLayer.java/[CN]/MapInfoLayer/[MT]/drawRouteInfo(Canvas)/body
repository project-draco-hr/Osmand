{
  if (routeLayer != null && routeLayer.getHelper().isRouterEnabled()) {
    if (routeLayer.getHelper().isFollowingMode()) {
      int d=routeLayer.getHelper().getDistanceToNextRouteDirection();
      if (showMiniMap || d == 0) {
        if (!routeLayer.getPath().isEmpty()) {
          canvas.save();
          canvas.clipRect(boundsForMiniRoute);
          canvas.translate(centerMiniRouteX - view.getCenterPointX(),centerMiniRouteY - view.getCenterPointY());
          canvas.scale(scaleMiniRoute,scaleMiniRoute,view.getCenterPointX(),view.getCenterPointY());
          canvas.rotate(view.getRotate(),view.getCenterPointX(),view.getCenterPointY());
          canvas.drawCircle(view.getCenterPointX(),view.getCenterPointY(),3 / scaleMiniRoute,fillBlack);
          canvas.drawPath(routeLayer.getPath(),paintMiniRoute);
          canvas.restore();
        }
      }
 else {
        RouteDirectionInfo next=routeLayer.getHelper().getNextRouteDirectionInfo();
        if (next != null) {
          if (!Algoritms.objectEquals(cachedTurnType,next.turnType)) {
            cachedTurnType=next.turnType;
            calcTurnPath(pathForTurn,cachedTurnType,pathTransform);
            if (cachedTurnType.getExitOut() > 0) {
              cachedExitOut=cachedTurnType.getExitOut() + "";
            }
 else {
              cachedExitOut=null;
            }
          }
          canvas.drawPath(pathForTurn,paintRouteDirection);
          canvas.drawPath(pathForTurn,paintBlack);
          if (cachedExitOut != null) {
            canvas.drawText(cachedExitOut,boundsForMiniRoute.centerX() - 6 * scaleCoefficient,boundsForMiniRoute.centerY() - 9 * scaleCoefficient,paintBlack);
          }
          canvas.drawText(OsmAndFormatter.getFormattedDistance(d,map),boundsForMiniRoute.left + 10 * scaleCoefficient,boundsForMiniRoute.bottom - 9 * scaleCoefficient,paintBlack);
        }
      }
    }
  }
}
