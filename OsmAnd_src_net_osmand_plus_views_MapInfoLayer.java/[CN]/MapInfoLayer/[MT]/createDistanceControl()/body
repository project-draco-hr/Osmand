{
  TextInfoControl distanceControl=new TextInfoControl(map,0,paintText,paintSubText){
    private float[] calculations=new float[1];
    private int cachedMeters=0;
    @Override public boolean updateInfo(){
      if (map.getPointToNavigate() != null) {
        int d=0;
        if (map.getRoutingHelper().isRouterEnabled()) {
          d=map.getRoutingHelper().getLeftDistance();
        }
        if (d == 0) {
          Location.distanceBetween(view.getLatitude(),view.getLongitude(),map.getPointToNavigate().getLatitude(),map.getPointToNavigate().getLongitude(),calculations);
          d=(int)calculations[0];
        }
        if (distChanged(cachedMeters,d)) {
          cachedMeters=d;
          if (cachedMeters <= 20) {
            cachedMeters=0;
            setText(null,null);
          }
 else {
            String ds=OsmAndFormatter.getFormattedDistance(cachedMeters,map);
            int ls=ds.lastIndexOf(' ');
            if (ls == -1) {
              setText(ds,null);
            }
 else {
              setText(ds.substring(0,ls),ds.substring(ls + 1));
            }
          }
          return true;
        }
      }
 else       if (cachedMeters != 0) {
        cachedMeters=0;
        setText(null,null);
        return true;
      }
      return false;
    }
  }
;
  distanceControl.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      AnimateDraggingMapThread thread=view.getAnimatedDraggingThread();
      LatLon pointToNavigate=view.getSettings().getPointToNavigate();
      if (pointToNavigate != null) {
        int fZoom=view.getZoom() < 15 ? 15 : view.getZoom();
        thread.startMoving(pointToNavigate.getLatitude(),pointToNavigate.getLongitude(),fZoom,true);
      }
    }
  }
);
  distanceControl.setText(null,null);
  distanceControl.setImageDrawable(view.getResources().getDrawable(R.drawable.info_target));
  return distanceControl;
}
