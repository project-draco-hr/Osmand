{
  final Drawable compass=view.getResources().getDrawable(R.drawable.compass);
  final int mw=(int)compass.getMinimumWidth();
  final int mh=(int)compass.getMinimumHeight();
  statusBarBackground=view.getResources().getDrawable(R.drawable.box_top).mutate();
  LinearLayout statusBar=new LinearLayout(view.getContext()){
    @Override protected void onLayout(    boolean changed,    int left,    int top,    int right,    int bottom){
      super.onLayout(changed,left,top,right,bottom);
      Rect padding=new Rect();
      if (statusBarBackground.getPadding(padding)) {
        statusBarBackground.setBounds(-padding.left + left,top - padding.top,right + padding.right,bottom + padding.bottom);
      }
    }
  }
;
  statusBar.setOrientation(LinearLayout.HORIZONTAL);
  FrameLayout.LayoutParams flp=new FrameLayout.LayoutParams(android.view.ViewGroup.LayoutParams.FILL_PARENT,android.view.ViewGroup.LayoutParams.WRAP_CONTENT);
  flp.leftMargin=STATUS_BAR_MARGIN_X;
  flp.rightMargin=STATUS_BAR_MARGIN_X;
  flp.gravity=Gravity.TOP;
  statusBar.setLayoutParams(flp);
  statusBar.setBackgroundColor(Color.argb(100,200,200,200));
  LinearLayout.LayoutParams params=new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT,LayoutParams.WRAP_CONTENT);
  ImageView compassView=new ImageView(view.getContext()){
    @Override protected void onDraw(    Canvas canvas){
      canvas.save();
      canvas.translate(getLeft(),getTop());
      canvas.rotate(view.getRotate(),mw / 2,mh / 2);
      compass.draw(canvas);
      canvas.restore();
    }
  }
;
  compassView.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      map.switchRotateMapMode();
    }
  }
);
  compassView.setImageDrawable(compass);
  statusBar.addView(compassView,params);
  params=new LinearLayout.LayoutParams(LinearLayout.LayoutParams.FILL_PARENT,LinearLayout.LayoutParams.MATCH_PARENT,1);
  TextView space=new TextView(view.getContext());
  statusBar.addView(space,params);
  Drawable globusDrawable=view.getResources().getDrawable(R.drawable.globus);
  params=new LinearLayout.LayoutParams(globusDrawable.getMinimumWidth(),globusDrawable.getMinimumHeight());
  FrameLayout fl=new FrameLayout(view.getContext());
  statusBar.addView(fl,params);
  FrameLayout.LayoutParams fparams=new FrameLayout.LayoutParams(LayoutParams.WRAP_CONTENT,LayoutParams.WRAP_CONTENT);
  ImageView globus=new ImageView(view.getContext());
  globus.setImageDrawable(globusDrawable);
  globus.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      map.getMapLayers().selectMapLayer(view);
    }
  }
);
  fl.addView(globus,fparams);
  fparams=new FrameLayout.LayoutParams(globusDrawable.getMinimumWidth(),globusDrawable.getMinimumHeight());
  progressBar=new View(view.getContext());
  progressBar.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      map.backToLocationImpl();
    }
  }
);
  fl.addView(progressBar,fparams);
  params=new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT,LayoutParams.WRAP_CONTENT);
  backToLocation=new ImageView(view.getContext());
  backToLocation.setImageDrawable(view.getResources().getDrawable(R.drawable.back_to_loc));
  backToLocation.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      map.backToLocationImpl();
    }
  }
);
  statusBar.addView(backToLocation,params);
  statusBar.measure(MeasureSpec.UNSPECIFIED,MeasureSpec.UNSPECIFIED);
  return statusBar;
}
