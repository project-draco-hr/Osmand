{
  final RoutingHelper routingHelper=routeLayer.getHelper();
  final NextTurnInfoControl nextTurnInfo=new NextTurnInfoControl(map,paintText,paintSubText,false){
    @Override public boolean updateInfo(){
      boolean visible=false;
      if (routeLayer != null && routingHelper.isRouterEnabled() && routingHelper.isFollowingMode()) {
        int d=routeLayer.getHelper().getDistanceToNextRouteDirection();
        makeUturnWhenPossible=routingHelper.makeUturnWhenPossible();
        if (routingHelper.makeUturnWhenPossible() == true) {
          if (!showMiniMap) {
            visible=true;
            turnImminent=1;
            turnType=TurnType.valueOf(TurnType.TU,view.getSettings().LEFT_SIDE_NAVIGATION.get());
            TurnPathHelper.calcTurnPath(pathForTurn,turnType,pathTransform);
            invalidate();
          }
        }
 else {
          if (d >= 0 && !showMiniMap) {
            visible=true;
            RouteDirectionInfo next=routeLayer.getHelper().getNextRouteDirectionInfo();
            if (next == null) {
              if (turnType != null) {
                turnType=null;
                invalidate();
              }
            }
 else             if (!Algoritms.objectEquals(turnType,next.getTurnType())) {
              turnType=next.getTurnType();
              TurnPathHelper.calcTurnPath(pathForTurn,turnType,pathTransform);
              if (turnType.getExitOut() > 0) {
                exitOut=turnType.getExitOut() + "";
              }
 else {
                exitOut=null;
              }
              invalidate();
            }
            if (distChanged(d,nextTurnDirection)) {
              invalidate();
              nextTurnDirection=d;
            }
            if (turnImminent != routingHelper.getNextTurnImminent()) {
              turnImminent=routingHelper.getNextTurnImminent();
              invalidate();
            }
          }
        }
      }
      updateVisibility(visible);
      return true;
    }
  }
;
  nextTurnInfo.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showMiniMap=true;
      view.refreshMap();
    }
  }
);
  nextTurnInfo.setVisibility(View.GONE);
  return nextTurnInfo;
}
