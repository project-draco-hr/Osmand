{
  boolean transparent=view.getSettings().TRANSPARENT_MAP_THEME.get();
  boolean nightMode=drawSettings == null ? false : drawSettings.isNightMode();
  boolean following=routeLayer.getHelper().isFollowingMode();
  int calcThemeId=(transparent ? 4 : 0) | (nightMode ? 2 : 0) | (following ? 1 : 0);
  if (themeId != calcThemeId) {
    themeId=calcThemeId;
    TextState ts=calculateTextState();
    map.findViewById(R.id.map_center_info).setBackgroundResource(ts.boxFree);
    for (    MapWidgetRegInfo reg : mapInfoControls.getLeft()) {
      updateReg(ts,reg);
    }
    for (    MapWidgetRegInfo reg : mapInfoControls.getRight()) {
      updateReg(ts,reg);
    }
    updateStreetName(nightMode,ts);
    lanesControl.updateTextSize(nightMode,ts.textColor,ts.textShadowColor,ts.textBold,ts.textShadowRadius);
    rulerControl.updateTextSize(nightMode,ts.textColor,ts.textShadowColor,ts.textShadowRadius);
    this.expand.setBackgroundResource(ts.expand);
    rightStack.invalidate();
    leftStack.invalidate();
  }
}
