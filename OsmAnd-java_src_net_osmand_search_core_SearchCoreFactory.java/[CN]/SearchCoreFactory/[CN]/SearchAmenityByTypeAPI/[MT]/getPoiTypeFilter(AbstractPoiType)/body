{
  acceptedTypes.clear();
  poiAdditionals.clear();
  updateTypesToAccept(pt);
  return new SearchPoiTypeFilter(){
    @Override public boolean isEmpty(){
      return false;
    }
    @Override public boolean accept(    PoiCategory type,    String subtype){
      if (type == null) {
        return true;
      }
      if (!types.isRegisteredType(type)) {
        type=types.getOtherPoiCategory();
      }
      if (!acceptedTypes.containsKey(type)) {
        return false;
      }
      LinkedHashSet<String> set=acceptedTypes.get(type);
      if (set == null) {
        return true;
      }
      return set.contains(subtype);
    }
  }
;
}
