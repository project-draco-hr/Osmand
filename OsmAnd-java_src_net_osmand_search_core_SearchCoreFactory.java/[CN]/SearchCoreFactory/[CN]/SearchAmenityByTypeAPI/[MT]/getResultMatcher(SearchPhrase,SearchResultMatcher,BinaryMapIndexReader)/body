{
  final NameStringMatcher ns=phrase.getNameStringMatcher();
  return new ResultMatcher<Amenity>(){
    @Override public boolean publish(    Amenity object){
      SearchResult res=new SearchResult(phrase);
      res.localeName=object.getName(phrase.getSettings().getLang(),true);
      res.otherNames=object.getAllNames(true);
      if (Algorithms.isEmpty(res.localeName)) {
        AbstractPoiType st=types.getAnyPoiTypeByKey(object.getSubType());
        if (st != null) {
          res.localeName=st.getTranslation();
        }
 else {
          res.localeName=object.getSubType();
        }
      }
      if (phrase.isUnknownSearchWordPresent() && !(ns.matches(res.localeName) || ns.matches(res.otherNames))) {
        return false;
      }
      res.object=object;
      res.preferredZoom=17;
      res.file=selected;
      res.location=object.getLocation();
      res.priority=SEARCH_AMENITY_BY_TYPE_PRIORITY;
      res.priorityDistance=1;
      res.objectType=ObjectType.POI;
      resultMatcher.publish(res);
      return false;
    }
    @Override public boolean isCancelled(){
      return resultMatcher.isCancelled();
    }
  }
;
}
