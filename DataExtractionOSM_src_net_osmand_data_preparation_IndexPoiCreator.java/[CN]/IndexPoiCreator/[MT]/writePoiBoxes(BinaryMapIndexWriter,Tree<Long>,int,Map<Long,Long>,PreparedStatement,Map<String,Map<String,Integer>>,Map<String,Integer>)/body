{
  long l=tree.getNode();
  int x=(int)(l >> 31);
  int y=(int)(l & ((1 << 31) - 1));
  boolean end=zoom == ZOOM_TO_SAVE_END;
  long fp=writer.startWritePoiBox(zoom,x,y,end);
  if (zoom >= ZOOM_TO_WRITE_CATEGORIES_START && zoom <= ZOOM_TO_WRITE_CATEGORIES_END) {
    categoriesGet.setInt(1,x << (31 - zoom));
    categoriesGet.setInt(2,(x + 1) << (31 - zoom));
    categoriesGet.setInt(3,y << (31 - zoom));
    categoriesGet.setInt(4,(y + 1) << (31 - zoom));
    ResultSet rs=categoriesGet.executeQuery();
    TIntArrayList types=new TIntArrayList();
    while (rs.next()) {
      String cat=rs.getString(1);
      String subcat=rs.getString(2);
      buildTypeIds(cat,subcat,categories,catIndexes,types);
    }
    writer.writePOICategories(types);
    rs.close();
  }
  if (!end) {
    for (    Tree<Long> subTree : tree.getSubtrees()) {
      writePoiBoxes(writer,subTree,zoom + 1,fpToWriteSeeks,categoriesGet,categories,catIndexes);
    }
  }
 else {
    fpToWriteSeeks.put(l,fp);
  }
  writer.endWritePoiBox();
}
