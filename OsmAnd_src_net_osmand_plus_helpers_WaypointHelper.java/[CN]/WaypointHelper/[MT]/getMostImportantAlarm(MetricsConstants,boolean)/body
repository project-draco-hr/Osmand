{
  Location lastProjection=app.getRoutingHelper().getLastProjection();
  float mxspeed=route.getCurrentMaxSpeed();
  float delta=app.getSettings().SPEED_LIMIT_EXCEED.get() / 3.6f;
  AlarmInfo speedAlarm=createSpeedAlarm(mc,mxspeed,lastProjection,delta);
  if (speedAlarm != null) {
    getVoiceRouter().announceSpeedAlarm();
  }
  AlarmInfo mostImportant=speedAlarm;
  int value=speedAlarm != null ? speedAlarm.updateDistanceAndGetPriority(0,0) : Integer.MAX_VALUE;
  if (ALARMS < pointsProgress.size()) {
    int kIterator=pointsProgress.get(ALARMS);
    List<LocationPointWrapper> lp=locationPoints.get(ALARMS);
    while (kIterator < lp.size()) {
      LocationPointWrapper lwp=lp.get(kIterator);
      if (lp.get(kIterator).routeIndex < route.getCurrentRoute()) {
      }
 else       if (route.getDistanceToPoint(lwp.routeIndex) > LONG_ANNOUNCE_RADIUS / 2) {
        break;
      }
 else {
        AlarmInfo inf=(AlarmInfo)lwp.point;
        int d=route.getDistanceToPoint(lwp.routeIndex);
        if (d > LONG_ANNOUNCE_RADIUS) {
          break;
        }
        float speed=lastProjection != null && lastProjection.hasSpeed() ? lastProjection.getSpeed() : 0;
        float time=speed > 0 ? d / speed : Integer.MAX_VALUE;
        int vl=inf.updateDistanceAndGetPriority(time,d);
        if (vl < value && (showCameras || inf.getType() != AlarmInfoType.SPEED_CAMERA)) {
          mostImportant=inf;
          value=vl;
        }
      }
      kIterator++;
    }
  }
  return mostImportant;
}
