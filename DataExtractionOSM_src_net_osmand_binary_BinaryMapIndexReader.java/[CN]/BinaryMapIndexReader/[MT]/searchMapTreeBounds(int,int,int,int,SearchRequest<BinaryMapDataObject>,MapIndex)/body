{
  int init=0;
  int lastIndexResult=-1;
  int cright=0;
  int cleft=0;
  int ctop=0;
  int cbottom=0;
  req.numberOfReadSubtrees++;
  while (true) {
    if (req.isCancelled()) {
      return;
    }
    int t=codedIS.readTag();
    int tag=WireFormat.getTagFieldNumber(t);
    if (init == 0xf) {
      init=0;
      if (cright < req.left || cleft > req.right || ctop > req.bottom || cbottom < req.top) {
        return;
      }
 else {
        req.numberOfAcceptedSubtrees++;
      }
    }
switch (tag) {
case 0:
      return;
case OsmandOdb.MapTree.BOTTOM_FIELD_NUMBER:
    cbottom=codedIS.readSInt32() + pbottom;
  init|=1;
break;
case OsmandOdb.MapTree.LEFT_FIELD_NUMBER:
cleft=codedIS.readSInt32() + pleft;
init|=2;
break;
case OsmandOdb.MapTree.RIGHT_FIELD_NUMBER:
cright=codedIS.readSInt32() + pright;
init|=4;
break;
case OsmandOdb.MapTree.TOP_FIELD_NUMBER:
ctop=codedIS.readSInt32() + ptop;
init|=8;
break;
case OsmandOdb.MapTree.LEAFS_FIELD_NUMBER:
int length=codedIS.readRawVarint32();
int oldLimit=codedIS.pushLimit(length);
if (lastIndexResult == -1) {
lastIndexResult=req.searchResults.size();
}
BinaryMapDataObject mapObject=readMapDataObject(cleft,cright,ctop,cbottom,req,root);
if (mapObject != null) {
req.searchResults.add(mapObject);
}
codedIS.popLimit(oldLimit);
break;
case OsmandOdb.MapTree.SUBTREES_FIELD_NUMBER:
length=readInt();
int filePointer=codedIS.getTotalBytesRead();
oldLimit=codedIS.pushLimit(length);
searchMapTreeBounds(cleft,cright,ctop,cbottom,req,root);
codedIS.popLimit(oldLimit);
codedIS.seek(filePointer + length);
if (lastIndexResult >= 0) {
throw new IllegalStateException();
}
break;
case OsmandOdb.MapTree.BASEID_FIELD_NUMBER:
case OsmandOdb.MapTree.OLDBASEID_FIELD_NUMBER:
long baseId=codedIS.readUInt64();
if (lastIndexResult != -1) {
for (int i=lastIndexResult; i < req.searchResults.size(); i++) {
BinaryMapDataObject rs=req.searchResults.get(i);
rs.id+=baseId;
if (rs.restrictions != null) {
for (int j=0; j < rs.restrictions.length; j++) {
rs.restrictions[j]+=baseId;
}
}
}
}
break;
case OsmandOdb.MapTree.STRINGTABLE_FIELD_NUMBER:
case OsmandOdb.MapTree.OLDSTRINGTABLE_FIELD_NUMBER:
length=codedIS.readRawVarint32();
oldLimit=codedIS.pushLimit(length);
List<String> stringTable=readStringTable();
codedIS.popLimit(oldLimit);
if (lastIndexResult != -1) {
for (int i=lastIndexResult; i < req.searchResults.size(); i++) {
BinaryMapDataObject rs=req.searchResults.get(i);
if (rs.stringId != -1) {
rs.name=stringTable.get(rs.stringId);
}
}
}
break;
default :
skipUnknownField(t);
break;
}
}
}
