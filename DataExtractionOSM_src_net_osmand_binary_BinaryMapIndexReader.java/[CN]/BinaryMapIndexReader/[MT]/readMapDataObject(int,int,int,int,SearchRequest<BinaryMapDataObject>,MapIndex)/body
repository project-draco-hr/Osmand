{
  int tag=WireFormat.getTagFieldNumber(codedIS.readTag());
  if (OsmandOdb.MapData.COORDINATES_FIELD_NUMBER != tag) {
    throw new IllegalArgumentException();
  }
  req.cacheCoordinates.clear();
  int size=codedIS.readRawVarint32();
  int old=codedIS.pushLimit(size);
  int px=left & MASK_TO_READ;
  int py=top & MASK_TO_READ;
  boolean contains=false;
  int minX=Integer.MAX_VALUE;
  int maxX=0;
  int minY=Integer.MAX_VALUE;
  int maxY=0;
  req.numberOfVisitedObjects++;
  while (codedIS.getBytesUntilLimit() > 0) {
    int x=(codedIS.readSInt32() << SHIFT_COORDINATES) + px;
    int y=(codedIS.readSInt32() << SHIFT_COORDINATES) + py;
    req.cacheCoordinates.add(x);
    req.cacheCoordinates.add(y);
    px=x;
    py=y;
    if (!contains && req.left <= x && req.right >= x && req.top <= y && req.bottom >= y) {
      contains=true;
    }
    if (!contains) {
      minX=Math.min(minX,x);
      maxX=Math.max(maxX,x);
      minY=Math.min(minY,y);
      maxY=Math.max(maxY,y);
    }
  }
  if (!contains) {
    if (maxX >= req.left && minX <= req.right && minY <= req.bottom && maxY >= req.top) {
      contains=true;
    }
  }
  codedIS.popLimit(old);
  if (!contains) {
    codedIS.skipRawBytes(codedIS.getBytesUntilLimit());
    return null;
  }
  tag=WireFormat.getTagFieldNumber(codedIS.readTag());
  if (OsmandOdb.MapData.TYPES_FIELD_NUMBER != tag) {
    throw new IllegalArgumentException();
  }
  req.cacheTypes.clear();
  int sizeL=codedIS.readRawVarint32();
  byte[] types=codedIS.readRawBytes(sizeL);
  for (int i=0; i < sizeL / 2; i++) {
    req.cacheTypes.add(Algoritms.parseSmallIntFromBytes(types,i * 2));
  }
  boolean accept=true;
  if (req.searchFilter != null) {
    accept=req.searchFilter.accept(req.cacheTypes,root);
  }
  if (!accept) {
    codedIS.skipRawBytes(codedIS.getBytesUntilLimit());
    return null;
  }
  req.numberOfAcceptedObjects++;
  BinaryMapDataObject dataObject=new BinaryMapDataObject();
  dataObject.coordinates=req.cacheCoordinates.toArray();
  dataObject.types=req.cacheTypes.toArray();
  dataObject.mapIndex=root;
  while (true) {
    int t=codedIS.readTag();
    tag=WireFormat.getTagFieldNumber(t);
switch (tag) {
case 0:
      return dataObject;
case OsmandOdb.MapData.ID_FIELD_NUMBER:
    dataObject.id=codedIS.readSInt64();
  break;
case OsmandOdb.MapData.STRINGID_FIELD_NUMBER:
dataObject.stringId=codedIS.readUInt32();
break;
default :
skipUnknownField(t);
break;
}
}
}
