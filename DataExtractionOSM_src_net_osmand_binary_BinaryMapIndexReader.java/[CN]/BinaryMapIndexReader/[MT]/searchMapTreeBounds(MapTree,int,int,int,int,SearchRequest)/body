{
  int init=0;
  int lastIndexResult=-1;
  ;
  while (true) {
    int t=codedIS.readTag();
    int tag=WireFormat.getTagFieldNumber(t);
    if (init == 0xf) {
      init=0;
      if (tree.right < req.left || tree.left > req.right || tree.top > req.bottom || tree.bottom < req.top) {
        return;
      }
    }
switch (tag) {
case 0:
      return;
case OsmandOdb.MapTree.BOTTOM_FIELD_NUMBER:
    tree.bottom=codedIS.readSInt32() + pbottom;
  init|=1;
break;
case OsmandOdb.MapTree.LEFT_FIELD_NUMBER:
tree.left=codedIS.readSInt32() + pleft;
init|=2;
break;
case OsmandOdb.MapTree.RIGHT_FIELD_NUMBER:
tree.right=codedIS.readSInt32() + pright;
init|=4;
break;
case OsmandOdb.MapTree.TOP_FIELD_NUMBER:
tree.top=codedIS.readSInt32() + ptop;
init|=8;
break;
case OsmandOdb.MapTree.LEAFS_FIELD_NUMBER:
int length=codedIS.readRawVarint32();
int oldLimit=codedIS.pushLimit(length);
if (lastIndexResult == -1) {
lastIndexResult=req.searchResults.size();
}
BinaryMapDataObject mapObject=readMapDataObject(tree.left,tree.right,tree.top,tree.bottom,req);
if (mapObject != null) {
req.searchResults.add(mapObject);
}
codedIS.popLimit(oldLimit);
break;
case OsmandOdb.MapTree.SUBTREES_FIELD_NUMBER:
MapTree r=new MapTree();
r.length=readInt();
r.filePointer=codedIS.getTotalBytesRead();
oldLimit=codedIS.pushLimit(r.length);
searchMapTreeBounds(r,tree.left,tree.right,tree.top,tree.bottom,req);
codedIS.popLimit(oldLimit);
codedIS.seek(r.filePointer + r.length);
if (lastIndexResult >= 0) {
throw new IllegalStateException();
}
break;
case OsmandOdb.MapTree.BASEID_FIELD_NUMBER:
tree.baseId=codedIS.readUInt64();
if (lastIndexResult != -1) {
for (int i=lastIndexResult; i < req.searchResults.size(); i++) {
BinaryMapDataObject rs=req.searchResults.get(i);
rs.id+=tree.baseId;
if (rs.restrictions != null) {
for (int j=0; j < rs.restrictions.length; j++) {
rs.restrictions[j]+=tree.baseId;
}
}
}
}
break;
case OsmandOdb.MapTree.STRINGTABLE_FIELD_NUMBER:
length=codedIS.readRawVarint32();
oldLimit=codedIS.pushLimit(length);
tree.stringTable=readStringTable();
codedIS.popLimit(oldLimit);
if (lastIndexResult != -1) {
for (int i=lastIndexResult; i < req.searchResults.size(); i++) {
BinaryMapDataObject rs=req.searchResults.get(i);
if (rs.stringId != -1) {
rs.name=tree.stringTable.get(rs.stringId);
}
}
}
break;
default :
skipUnknownField(t);
break;
}
}
}
