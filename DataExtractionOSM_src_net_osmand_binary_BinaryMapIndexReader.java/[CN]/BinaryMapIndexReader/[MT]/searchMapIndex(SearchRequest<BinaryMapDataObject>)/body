{
  req.numberOfVisitedObjects=0;
  req.numberOfAcceptedObjects=0;
  req.numberOfAcceptedSubtrees=0;
  req.numberOfReadSubtrees=0;
  for (  MapIndex mapIndex : mapIndexes) {
    for (    MapRoot index : mapIndex.getRoots()) {
      if (index.minZoom <= req.zoom && index.maxZoom >= req.zoom) {
        if (index.right < req.left || index.left > req.right || index.top > req.bottom || index.bottom < req.top) {
          continue;
        }
        for (        MapTree tree : index.trees) {
          if (tree.right < req.left || tree.left > req.right || tree.top > req.bottom || tree.bottom < req.top) {
            continue;
          }
          codedIS.seek(tree.filePointer);
          int oldLimit=codedIS.pushLimit(tree.length);
          searchMapTreeBounds(index.left,index.right,index.top,index.bottom,req);
          codedIS.popLimit(oldLimit);
        }
      }
    }
  }
  log.info("Search is done. Visit " + req.numberOfVisitedObjects + " objects. Read "+ req.numberOfAcceptedObjects+ " objects.");
  log.info("Read " + req.numberOfReadSubtrees + " subtrees. Go through "+ req.numberOfAcceptedSubtrees+ " subtrees.");
  return req.getSearchResults();
}
