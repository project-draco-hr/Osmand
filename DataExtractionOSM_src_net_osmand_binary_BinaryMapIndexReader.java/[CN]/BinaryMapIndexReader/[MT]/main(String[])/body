{
  RandomAccessFile raf=new RandomAccessFile(new File("/home/victor/projects/OsmAnd/data/osm-gen/POI/Test-Ru.poi.obf"),"r");
  BinaryMapIndexReader reader=new BinaryMapIndexReader(raf);
  System.out.println("VERSION " + reader.getVersion());
  long time=System.currentTimeMillis();
  testMapSearch(reader);
  testAddressSearch(reader);
  testTransportSearch(reader);
  PoiRegion poiRegion=reader.getPoiIndexes().get(0);
  System.out.println(poiRegion.left31X + " " + poiRegion.right31X+ " "+ poiRegion.bottom31Y+ " "+ poiRegion.top31Y);
  int sleft=MapUtils.get31TileNumberX(37.5);
  int sright=MapUtils.get31TileNumberX(37.9);
  int stop=MapUtils.get31TileNumberY(55.814);
  int sbottom=MapUtils.get31TileNumberY(55.81);
  SearchRequest<Amenity> req=buildSearchPoiRequest(sleft,sright,stop,sbottom,15);
  req.setPoiTypeFilter(new SearchPoiTypeFilter(){
    @Override public boolean accept(    AmenityType type,    String subcategory){
      return type == AmenityType.TRANSPORTATION && "fuel".equals(subcategory);
    }
  }
);
  List<Amenity> results=reader.searchPoi(req);
  for (  Amenity a : results) {
    System.out.println(a.getType() + " " + a.getSubType()+ " "+ a.getName()+ " "+ a.getLocation());
  }
  System.out.println("MEMORY " + (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()));
  System.out.println("Time " + (System.currentTimeMillis() - time));
}
