{
  RenderingRuleProperty prop=null;
  prop=new RenderingRuleProperty("appMode",3,true);
  prop.setDescription("Map optimization for respective User Profile");
  prop.setCategory("null");
  prop.setName("Rendering mode");
  prop.setPossibleValues(new String[]{"browse map","car","bicycle","pedestrian"});
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("transportStops",5,true);
  prop.setDescription("Public transport stops");
  prop.setCategory("transport");
  prop.setName("Transport stops");
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("publicTransportMode",5,true);
  prop.setDescription("Public transport rendering mode");
  prop.setCategory("transport");
  prop.setName("Public transport mode");
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("tramTrainRoutes",5,true);
  prop.setDescription("Tram and train routes");
  prop.setCategory("transport");
  prop.setName("Tram and trains");
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("subwayMode",5,true);
  prop.setDescription("Subway rendering mode");
  prop.setCategory("transport");
  prop.setName("Subway mode");
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("moreDetailed",5,true);
  prop.setDescription("More details on map");
  prop.setCategory("details");
  prop.setName("More details");
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("showSurfaces",5,true);
  prop.setDescription("Show road surfaces");
  prop.setCategory("details");
  prop.setName("Road surface");
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("showSurfaceGrade",5,true);
  prop.setDescription("Show road quality");
  prop.setCategory("details");
  prop.setName("Road quality");
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("showAccess",5,true);
  prop.setDescription("Show access restrictions");
  prop.setCategory("details");
  prop.setName("Show access restrictions");
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("contourLines",3,true);
  prop.setDescription("Select minimum zoom level to display in map if available. Separate contour file may be needed.");
  prop.setCategory("details");
  prop.setName("Show contour lines");
  prop.setPossibleValues(new String[]{"--","16","15","14","13","12","11"});
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("coloredBuildings",5,true);
  prop.setDescription("Buildings colored by type");
  prop.setCategory("details");
  prop.setName("Colored buildings");
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("streetLighting",5,true);
  prop.setDescription("Show street lighting");
  prop.setCategory("details");
  prop.setName("Street lighting");
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("OSMMapperAssistant",5,true);
  prop.setDescription("Show fixme and other features to help OSM mappers");
  prop.setCategory("details");
  prop.setName("OSM mapper assistant");
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("noAdminboundaries",5,true);
  prop.setDescription("Suppress display of admin levels 5-9");
  prop.setCategory("hide");
  prop.setName("Hide boundaries");
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("noPolygons",5,true);
  prop.setDescription("Make all areal land features on map transparent");
  prop.setCategory("hide");
  prop.setName("Hide polygons");
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("hideBuildings",5,true);
  prop.setDescription("Hide buildings");
  prop.setCategory("hide");
  prop.setName("Hide buildings");
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("showCycleRoutes",5,true);
  prop.setDescription("Show cycle routes (*cn_networks) in bicycle mode");
  prop.setCategory("routes");
  prop.setName("Show cycle routes");
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("osmcTraces",5,true);
  prop.setDescription("Render symbols of OSMC hiking traces");
  prop.setCategory("routes");
  prop.setName("Hiking symbol overlay");
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("alpineHiking",5,true);
  prop.setDescription("Render paths according to SAC scale");
  prop.setCategory("routes");
  prop.setName("Alpine hiking view");
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("roadStyle",3,true);
  prop.setDescription("Road style");
  prop.setCategory("null");
  prop.setName("Road style");
  prop.setPossibleValues(new String[]{"","orange","germanRoadAtlas","americanRoadAtlas","highContrastRoads"});
  storage.PROPS.registerRule(prop);
  prop=new RenderingRuleProperty("engine_v1",5,true);
  prop.setDescription("null");
  prop.setCategory("null");
  prop.setName("null");
  storage.PROPS.registerRule(prop);
}
