{
  RenderingRule rule0=null;
  RenderingRule rule1=null;
  RenderingRule rule2=null;
  RenderingRule rule3=null;
  RenderingRule rule4=null;
  RenderingRule rule5=null;
  RenderingRule rule6=null;
  RenderingRule rule7=null;
  RenderingRule rule8=null;
  RenderingRule rule9=null;
  RenderingRule rule10=null;
  RenderingRule rule11=null;
  RenderingRule rule12=null;
  RenderingRule rule13=null;
  RenderingRule rule14=null;
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2557,2173,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2229),false,storage);
  rule2=new RenderingRule(createMap(2556,2230,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("defaultColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2558,1737),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("showRoadMapsAttribute",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2558,1740,1756,419,1759,1785,1907,2559),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2558,1740,1756,419,1907,2560),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(1766,418,2023,1,2558,1740,1756,1745),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(1766,418,2023,2,2558,1740,1756,1745),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(1766,418,2558,1740,1756,1749,1907,2559),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2558,1737),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("shadowRendering",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2561),false,storage);
  rule2=new RenderingRule(createMap(2556,2562,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("routeColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2563),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("gpxColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1828,2561,1836,2564),false,storage);
  rule2=new RenderingRule(createMap(1828,2562,1759,1760,1836,2564),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("route",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1823,3,1836,2564),false,storage);
  rule2=new RenderingRule(createMap(1828,2565,1759,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1828,2563,1761,4,1826,5),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1828,2563),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("gpx",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2558,1752,1813,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2558,1776),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("polygonMinSizeToDisplay",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2558,1740),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("roadDensityZoomTile",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2558,1814,1813,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(1791,6,2558,2566),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(1791,7,2558,1795),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2558,417),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("roadsDensityLimitPerTile",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2567,1743),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("defaultSymbolPathSpacing",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2567,1783),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("defaultBlockPathSpacing",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2567,1737),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("globalPathPadding",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2568,2023,8),false,storage);
  rule2=new RenderingRule(createMap(2556,2569,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2570,2023,1),false,storage);
  rule2=new RenderingRule(createMap(2556,2570,1759,1760),false,storage);
  rule3=new RenderingRule(createMap(1791,9,2556,2571),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2572,2023,2),false,storage);
  rule2=new RenderingRule(createMap(2556,2573,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2574,2023,10),false,storage);
  rule2=new RenderingRule(createMap(2556,2574,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2575),false,storage);
  rule2=new RenderingRule(createMap(2556,2576,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("motorwayRoadColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2556,2577),false,storage);
  rule3=new RenderingRule(createMap(2556,2578,1759,1760),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1815,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1816,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1784,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2568,2023,8),false,storage);
  rule2=new RenderingRule(createMap(2556,2569,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2570,2023,1),false,storage);
  rule2=new RenderingRule(createMap(2556,2570,1759,1760),false,storage);
  rule3=new RenderingRule(createMap(1791,9,2556,2571),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2572,2023,2),false,storage);
  rule2=new RenderingRule(createMap(2556,2573,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2574,2023,10),false,storage);
  rule2=new RenderingRule(createMap(2556,2574,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2575),false,storage);
  rule2=new RenderingRule(createMap(2556,2576,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("motorwayRoadLowZoomColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1899,1760,2556,2579,1761,11),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2556,2195),false,storage);
  rule3=new RenderingRule(createMap(2556,1978,1759,1760),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1815,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1816,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1784,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2580,2023,8),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2581,2023,1),false,storage);
  rule2=new RenderingRule(createMap(1791,9,2556,2582,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2583,2023,2),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2559),false,storage);
  rule2=new RenderingRule(createMap(2556,1940,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(2556,1978,1788,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("motorwayRoadShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1899,1760,2567,1900,1761,11),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2567,1897),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("highwayShadowRadius",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2568,2023,8),false,storage);
  rule2=new RenderingRule(createMap(2556,2569,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2504,2023,1),false,storage);
  rule2=new RenderingRule(createMap(2556,2386,1759,1760),false,storage);
  rule3=new RenderingRule(createMap(1791,9,2556,2195),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2584,2023,2),false,storage);
  rule2=new RenderingRule(createMap(2556,2585,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2586,2023,10),false,storage);
  rule2=new RenderingRule(createMap(2556,2586,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2587),false,storage);
  rule2=new RenderingRule(createMap(2556,2588,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("trunkRoadColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2556,2577),false,storage);
  rule3=new RenderingRule(createMap(2556,2578,1759,1760),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1815,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1816,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1784,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2568,2023,8),false,storage);
  rule2=new RenderingRule(createMap(2556,2569,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2504,2023,1),false,storage);
  rule2=new RenderingRule(createMap(2556,1825,1759,1760),false,storage);
  rule3=new RenderingRule(createMap(1791,9,2556,1869),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2584,2023,2),false,storage);
  rule2=new RenderingRule(createMap(2556,2585,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2586,2023,10),false,storage);
  rule2=new RenderingRule(createMap(2556,2586,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2587),false,storage);
  rule2=new RenderingRule(createMap(2556,2588,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("trunkRoadLowZoomColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1899,1760,2556,2579,1761,11),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2556,2195),false,storage);
  rule3=new RenderingRule(createMap(2556,1978,1759,1760),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1815,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1816,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1784,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2580,2023,8),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2581,2023,1),false,storage);
  rule2=new RenderingRule(createMap(2556,2581,1759,1760),false,storage);
  rule3=new RenderingRule(createMap(1791,9,2556,2582),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2589,2023,2),false,storage);
  rule2=new RenderingRule(createMap(2556,2590,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2559),false,storage);
  rule2=new RenderingRule(createMap(2556,1940,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(2556,1978,1788,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("trunkRoadShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2591,2023,8),false,storage);
  rule2=new RenderingRule(createMap(2556,2592,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2593,2023,1),false,storage);
  rule2=new RenderingRule(createMap(2556,2593,1759,1760),false,storage);
  rule3=new RenderingRule(createMap(1791,9,2556,2594),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2595,2023,2),false,storage);
  rule2=new RenderingRule(createMap(2556,2596,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2597,2023,10),false,storage);
  rule2=new RenderingRule(createMap(2556,2597,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2598),false,storage);
  rule2=new RenderingRule(createMap(2556,2599,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("primaryRoadColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2556,2600),false,storage);
  rule3=new RenderingRule(createMap(2556,2578,1759,1760),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1815,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1816,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1784,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2591,2023,8),false,storage);
  rule2=new RenderingRule(createMap(2556,2592,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2593,2023,1),false,storage);
  rule2=new RenderingRule(createMap(2556,2593,1759,1760),false,storage);
  rule3=new RenderingRule(createMap(1791,9,2556,2594),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2595,2023,2),false,storage);
  rule2=new RenderingRule(createMap(2556,2596,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2597,2023,10),false,storage);
  rule2=new RenderingRule(createMap(2556,2597,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2598),false,storage);
  rule2=new RenderingRule(createMap(2556,2599,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("primaryRoadLowZoomColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1899,1760,2556,2579,1761,11),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2556,2195),false,storage);
  rule3=new RenderingRule(createMap(2556,1978,1759,1760),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1815,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1816,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1784,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2601,2023,8),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2602,2023,1),false,storage);
  rule2=new RenderingRule(createMap(2556,2560,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2603,2023,2),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2604),false,storage);
  rule2=new RenderingRule(createMap(2556,1978,1788,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("primaryRoadShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2591,2023,8),false,storage);
  rule2=new RenderingRule(createMap(2556,2592,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2605,2023,1),false,storage);
  rule2=new RenderingRule(createMap(2556,2605,1759,1760),false,storage);
  rule3=new RenderingRule(createMap(1791,9,2556,2606),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2607,2023,10),false,storage);
  rule2=new RenderingRule(createMap(2556,2607,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2605),false,storage);
  rule2=new RenderingRule(createMap(2556,2608,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("secondaryRoadColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2556,2609),false,storage);
  rule3=new RenderingRule(createMap(2556,2578,1759,1760),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1815,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1816,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1784,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2591,2023,8),false,storage);
  rule2=new RenderingRule(createMap(2556,2592,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2605,2023,1),false,storage);
  rule2=new RenderingRule(createMap(2556,2605,1759,1760),false,storage);
  rule3=new RenderingRule(createMap(1791,9,2556,2606),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2607,2023,10),false,storage);
  rule2=new RenderingRule(createMap(2556,2607,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2605),false,storage);
  rule2=new RenderingRule(createMap(2556,2608,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("secondaryRoadLowZoomColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1899,1760,2556,2579,1761,11),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2556,2195),false,storage);
  rule3=new RenderingRule(createMap(2556,1978,1759,1760),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1815,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1816,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1784,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2601,2023,8),false,storage);
  rule2=new RenderingRule(createMap(2556,2610,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2602,2023,1),false,storage);
  rule2=new RenderingRule(createMap(2556,2560,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2604),false,storage);
  rule2=new RenderingRule(createMap(2556,2162,1788,1760),false,storage);
  rule3=new RenderingRule(createMap(2556,1825,1759,1760),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("secondaryRoadShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2611,2023,8),false,storage);
  rule2=new RenderingRule(createMap(2556,2612,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2613,2023,1),false,storage);
  rule2=new RenderingRule(createMap(2556,2613,1759,1760),false,storage);
  rule3=new RenderingRule(createMap(1791,9,2556,2614),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2615,2023,10),false,storage);
  rule2=new RenderingRule(createMap(2556,2615,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2613),false,storage);
  rule2=new RenderingRule(createMap(2556,2616,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("tertiaryRoadColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2556,2617),false,storage);
  rule3=new RenderingRule(createMap(2556,2618,1759,1760),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1815,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1816,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1784,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2611,2023,8),false,storage);
  rule2=new RenderingRule(createMap(2556,2619,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2613,2023,1),false,storage);
  rule2=new RenderingRule(createMap(2556,2613,1759,1760),false,storage);
  rule3=new RenderingRule(createMap(1791,9,2556,2614),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2613),false,storage);
  rule2=new RenderingRule(createMap(2556,2616,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("tertiaryRoadLowZoomColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1899,1760,2556,2579,1761,11),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2602,2023,1),false,storage);
  rule2=new RenderingRule(createMap(2556,2560,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2559),false,storage);
  rule2=new RenderingRule(createMap(2556,2162,1788,1760,1756,419),false,storage);
  rule3=new RenderingRule(createMap(2556,1825,1759,1760),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("tertiaryRoadShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,1825),false,storage);
  rule2=new RenderingRule(createMap(2556,2620,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("residentialRoadColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1899,1760,2556,2579,1761,11),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2559),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("residentialRoadShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,1825),false,storage);
  rule2=new RenderingRule(createMap(2556,2620,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("primaryResidentialHighwayAreaColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2559),false,storage);
  rule2=new RenderingRule(createMap(2556,2560,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("primaryResidentialHighwayAreaShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2621),false,storage);
  rule2=new RenderingRule(createMap(2556,2281,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("serviceHighwayAreaColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2559),false,storage);
  rule2=new RenderingRule(createMap(2556,2560,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("serviceHighwayAreaShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2621),false,storage);
  rule2=new RenderingRule(createMap(2556,2281,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("serviceRoadColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1899,1760,2556,2579,1761,11),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2559),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("serviceRoadShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2622),false,storage);
  rule2=new RenderingRule(createMap(2556,2623,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("serviceDrivewayRoadColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2624),false,storage);
  rule2=new RenderingRule(createMap(2556,1940,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("serviceDrivewayRoadShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2621),false,storage);
  rule2=new RenderingRule(createMap(2556,2281,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("roadRoadColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2621),false,storage);
  rule2=new RenderingRule(createMap(2556,2281,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("pedestrianRoadModeColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2245),false,storage);
  rule2=new RenderingRule(createMap(2556,1870,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("pedestrianRoadShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2625),false,storage);
  rule2=new RenderingRule(createMap(2556,2626,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("racewayColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2627),false,storage);
  rule2=new RenderingRule(createMap(2556,2627,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("trackColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2173,1760),false,storage);
  rule2=new RenderingRule(createMap(2556,1872),false,storage);
  rule3=new RenderingRule(createMap(2556,1827,1759,1760),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,1940,1759,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2628),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("trackSubstrateColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2146),false,storage);
  rule2=new RenderingRule(createMap(2556,2146,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("cyclewayColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2629),false,storage);
  rule2=new RenderingRule(createMap(2556,2629,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("footwayColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,1827),false,storage);
  rule2=new RenderingRule(createMap(2556,2630,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("pathLowZoomColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,1831),false,storage);
  rule2=new RenderingRule(createMap(2556,2630,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("pathColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2631),false,storage);
  rule2=new RenderingRule(createMap(2556,2631,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("bridlewayColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2632,1898,1785),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2633),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("contourLineColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2634,1898,1785),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2635),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("contourLineColor50m",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2636),false,storage);
  rule2=new RenderingRule(createMap(2556,2637,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("cycleRouteColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2638,1898,1760),false,storage);
  rule2=new RenderingRule(createMap(2556,2638,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2639),false,storage);
  rule2=new RenderingRule(createMap(2556,2639,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("cycleRouteMtbScale1Color",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2640,1898,1760),false,storage);
  rule2=new RenderingRule(createMap(2556,2641,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2642),false,storage);
  rule2=new RenderingRule(createMap(2556,2643,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("cycleRouteMtbScale2Color",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2644,1898,1760),false,storage);
  rule2=new RenderingRule(createMap(2556,2645,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2048),false,storage);
  rule2=new RenderingRule(createMap(2556,2646,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("cycleRouteMtbScale3Color",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2647,1898,1760),false,storage);
  rule2=new RenderingRule(createMap(2556,2648,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2169),false,storage);
  rule2=new RenderingRule(createMap(2556,2648,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("cycleRouteMtbScale4Color",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2647,1898,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2169),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("osmcBlackColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2649,1898,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2650),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("osmcBlueColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2651,1898,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2652),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("osmcGreenColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2653,1898,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2654),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("osmcRedColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2038,1898,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2011),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("osmcWhiteColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2655,1898,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2656),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("osmcYellowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2197),false,storage);
  rule2=new RenderingRule(createMap(2556,2657,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("woodColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2658),false,storage);
  rule2=new RenderingRule(createMap(2556,2657,1759,1760),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("forestColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2556,1998),false,storage);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1815,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1816,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1784,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2659),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("waterStrokeColorNight",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2660,1759,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2661),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("pierColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2240,1759,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2662),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("landuseAllotmentsColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2663,1759,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2664),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("surfaceAsphaltColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2665,1759,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2666),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("surfaceLooselyPavedColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1898,1785),false,storage);
  rule2=new RenderingRule(createMap(2556,2667,1759,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(2556,2668),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2669,1759,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2670),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("litYesColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1898,1785),false,storage);
  rule2=new RenderingRule(createMap(2556,2671,1759,1760),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(2556,2672),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2673,1759,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2674),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("litNoColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,1825,2023,10),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,1831),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("highwayMotorwayTextColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,1825,2023,10),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,1831),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("highwayTrunkTextColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,1825,2023,10),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,1831),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("highwayPrimaryTextColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,1831),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("highwaySecondaryTextColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,1831),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("highwayTertiaryTextColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,1825,1759,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,1831),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("highwayResidentialServiceTextColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2675,1759,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2676),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("accessPrivateColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,1940,1759,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,1940),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("accessSkiNoColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2677,1759,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2677),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("accessDestinationColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2678,1759,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2679),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("accessPermissiveColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2680,1759,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2681),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("accessAgriculturalColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2680,1759,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2681),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("accessForestryColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2682,1759,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2683),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("accessCustomersColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2684,1759,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2685),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("accessDeliveryColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2686,1759,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2687),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("accessEmergencyColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2556,2688,1759,1760),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2556,2688),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("tollColor",rule0);
}
