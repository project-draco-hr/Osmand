{
  RenderingRule rule0=null;
  RenderingRule rule1=null;
  RenderingRule rule2=null;
  RenderingRule rule3=null;
  RenderingRule rule4=null;
  RenderingRule rule5=null;
  RenderingRule rule6=null;
  RenderingRule rule7=null;
  RenderingRule rule8=null;
  RenderingRule rule9=null;
  RenderingRule rule10=null;
  RenderingRule rule11=null;
  RenderingRule rule12=null;
  RenderingRule rule13=null;
  RenderingRule rule14=null;
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2584,2043,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2239),false,storage);
  rule2=new RenderingRule(createMap(2583,2240,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("defaultColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2585,1737),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("showRoadMapsAttribute",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2585,1740,1754,419,1757,1764,1911,2586),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2585,1740,1754,419,1911,2587),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(1768,418,2029,1,2585,1740,1754,1745),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(1768,418,2029,2,2585,1740,1754,1745),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(1768,418,2585,1740,1754,1749,1911,2586),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2585,1737),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("shadowRendering",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2588),false,storage);
  rule2=new RenderingRule(createMap(2583,2589,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("routeColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2590),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("gpxColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1833,2588,1840,2591),false,storage);
  rule2=new RenderingRule(createMap(1833,2589,1757,1758,1840,2591),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("route",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1828,3,1840,2591),false,storage);
  rule2=new RenderingRule(createMap(1833,2592,1757,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1833,2590,1762,4,1831,5),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1833,2590),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("gpx",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2585,1752,1794,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2585,1780),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("polygonMinSizeToDisplay",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2585,1740),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("roadDensityZoomTile",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2585,1798,1794,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(1759,6,2585,2593),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(1759,7,2585,1803),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2585,417),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("roadsDensityLimitPerTile",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2594,1743),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("defaultSymbolPathSpacing",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2594,1791),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("defaultBlockPathSpacing",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2594,1737),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("globalPathPadding",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2595,2029,8),false,storage);
  rule2=new RenderingRule(createMap(2583,2596,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2597,2029,1),false,storage);
  rule2=new RenderingRule(createMap(2583,2597,1757,1758),false,storage);
  rule3=new RenderingRule(createMap(1759,9,2583,2598),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2599,2029,2),false,storage);
  rule2=new RenderingRule(createMap(2583,2600,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2601,2029,10),false,storage);
  rule2=new RenderingRule(createMap(2583,2601,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2602),false,storage);
  rule2=new RenderingRule(createMap(2583,2603,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("motorwayRoadColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2583,2604),false,storage);
  rule3=new RenderingRule(createMap(2583,2605,1757,1758),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1822,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1797,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1763,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2595,2029,8),false,storage);
  rule2=new RenderingRule(createMap(2583,2596,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2597,2029,1),false,storage);
  rule2=new RenderingRule(createMap(2583,2597,1757,1758),false,storage);
  rule3=new RenderingRule(createMap(1759,9,2583,2598),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2599,2029,2),false,storage);
  rule2=new RenderingRule(createMap(2583,2600,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2601,2029,10),false,storage);
  rule2=new RenderingRule(createMap(2583,2601,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2602),false,storage);
  rule2=new RenderingRule(createMap(2583,2603,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("motorwayRoadLowZoomColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1903,1758,2583,2606,1762,11),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2583,2203),false,storage);
  rule3=new RenderingRule(createMap(2583,1982,1757,1758),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1822,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1797,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1763,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2607,2029,8),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2608,2029,1),false,storage);
  rule2=new RenderingRule(createMap(1759,9,2583,2609,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2610,2029,2),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2586),false,storage);
  rule2=new RenderingRule(createMap(2583,1944,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(2583,1982,1796,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("motorwayRoadShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1903,1758,2594,1904,1762,11),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2594,1901),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("highwayShadowRadius",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2595,2029,8),false,storage);
  rule2=new RenderingRule(createMap(2583,2596,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2532,2029,1),false,storage);
  rule2=new RenderingRule(createMap(2583,2397,1757,1758),false,storage);
  rule3=new RenderingRule(createMap(1759,9,2583,2203),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2611,2029,2),false,storage);
  rule2=new RenderingRule(createMap(2583,2612,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2613,2029,10),false,storage);
  rule2=new RenderingRule(createMap(2583,2613,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2614),false,storage);
  rule2=new RenderingRule(createMap(2583,2615,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("trunkRoadColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2583,2604),false,storage);
  rule3=new RenderingRule(createMap(2583,2605,1757,1758),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1822,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1797,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1763,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2595,2029,8),false,storage);
  rule2=new RenderingRule(createMap(2583,2596,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2532,2029,1),false,storage);
  rule2=new RenderingRule(createMap(2583,1830,1757,1758),false,storage);
  rule3=new RenderingRule(createMap(1759,9,2583,1873),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2611,2029,2),false,storage);
  rule2=new RenderingRule(createMap(2583,2612,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2613,2029,10),false,storage);
  rule2=new RenderingRule(createMap(2583,2613,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2614),false,storage);
  rule2=new RenderingRule(createMap(2583,2615,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("trunkRoadLowZoomColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1903,1758,2583,2606,1762,11),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2583,2203),false,storage);
  rule3=new RenderingRule(createMap(2583,1982,1757,1758),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1822,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1797,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1763,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2607,2029,8),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2608,2029,1),false,storage);
  rule2=new RenderingRule(createMap(2583,2608,1757,1758),false,storage);
  rule3=new RenderingRule(createMap(1759,9,2583,2609),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2616,2029,2),false,storage);
  rule2=new RenderingRule(createMap(2583,2617,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2586),false,storage);
  rule2=new RenderingRule(createMap(2583,1944,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(2583,1982,1796,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("trunkRoadShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2618,2029,8),false,storage);
  rule2=new RenderingRule(createMap(2583,2619,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2620,2029,1),false,storage);
  rule2=new RenderingRule(createMap(2583,2620,1757,1758),false,storage);
  rule3=new RenderingRule(createMap(1759,9,2583,2621),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2622,2029,2),false,storage);
  rule2=new RenderingRule(createMap(2583,2623,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2624,2029,10),false,storage);
  rule2=new RenderingRule(createMap(2583,2624,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2625),false,storage);
  rule2=new RenderingRule(createMap(2583,2626,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("primaryRoadColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2583,2627),false,storage);
  rule3=new RenderingRule(createMap(2583,2605,1757,1758),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1822,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1797,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1763,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2618,2029,8),false,storage);
  rule2=new RenderingRule(createMap(2583,2619,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2620,2029,1),false,storage);
  rule2=new RenderingRule(createMap(2583,2620,1757,1758),false,storage);
  rule3=new RenderingRule(createMap(1759,9,2583,2621),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2622,2029,2),false,storage);
  rule2=new RenderingRule(createMap(2583,2623,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2624,2029,10),false,storage);
  rule2=new RenderingRule(createMap(2583,2624,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2625),false,storage);
  rule2=new RenderingRule(createMap(2583,2626,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("primaryRoadLowZoomColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1903,1758,2583,2606,1762,11),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2583,2203),false,storage);
  rule3=new RenderingRule(createMap(2583,1982,1757,1758),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1822,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1797,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1763,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2628,2029,8),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2629,2029,1),false,storage);
  rule2=new RenderingRule(createMap(2583,2587,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2630,2029,2),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2631),false,storage);
  rule2=new RenderingRule(createMap(2583,1982,1796,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("primaryRoadShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2618,2029,8),false,storage);
  rule2=new RenderingRule(createMap(2583,2619,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2632,2029,1),false,storage);
  rule2=new RenderingRule(createMap(2583,2632,1757,1758),false,storage);
  rule3=new RenderingRule(createMap(1759,9,2583,2633),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2634,2029,10),false,storage);
  rule2=new RenderingRule(createMap(2583,2634,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2632),false,storage);
  rule2=new RenderingRule(createMap(2583,2635,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("secondaryRoadColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2583,2636),false,storage);
  rule3=new RenderingRule(createMap(2583,2605,1757,1758),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1822,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1797,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1763,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2618,2029,8),false,storage);
  rule2=new RenderingRule(createMap(2583,2619,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2632,2029,1),false,storage);
  rule2=new RenderingRule(createMap(2583,2632,1757,1758),false,storage);
  rule3=new RenderingRule(createMap(1759,9,2583,2633),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2634,2029,10),false,storage);
  rule2=new RenderingRule(createMap(2583,2634,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2632),false,storage);
  rule2=new RenderingRule(createMap(2583,2635,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("secondaryRoadLowZoomColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1903,1758,2583,2606,1762,11),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2583,2203),false,storage);
  rule3=new RenderingRule(createMap(2583,1982,1757,1758),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1822,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1797,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1763,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2628,2029,8),false,storage);
  rule2=new RenderingRule(createMap(2583,2637,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2629,2029,1),false,storage);
  rule2=new RenderingRule(createMap(2583,2587,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2631),false,storage);
  rule2=new RenderingRule(createMap(2583,2173,1796,1758),false,storage);
  rule3=new RenderingRule(createMap(2583,1830,1757,1758),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("secondaryRoadShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2638,2029,8),false,storage);
  rule2=new RenderingRule(createMap(2583,2639,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2640,2029,1),false,storage);
  rule2=new RenderingRule(createMap(2583,2640,1757,1758),false,storage);
  rule3=new RenderingRule(createMap(1759,9,2583,2641),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2642,2029,10),false,storage);
  rule2=new RenderingRule(createMap(2583,2642,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2640),false,storage);
  rule2=new RenderingRule(createMap(2583,2643,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("tertiaryRoadColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2583,2644),false,storage);
  rule3=new RenderingRule(createMap(2583,2645,1757,1758),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1822,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1797,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1763,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2638,2029,8),false,storage);
  rule2=new RenderingRule(createMap(2583,2646,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2640,2029,1),false,storage);
  rule2=new RenderingRule(createMap(2583,2640,1757,1758),false,storage);
  rule3=new RenderingRule(createMap(1759,9,2583,2641),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2640),false,storage);
  rule2=new RenderingRule(createMap(2583,2643,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("tertiaryRoadLowZoomColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1903,1758,2583,2606,1762,11),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2629,2029,1),false,storage);
  rule2=new RenderingRule(createMap(2583,2587,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2586),false,storage);
  rule2=new RenderingRule(createMap(2583,2173,1796,1758,1754,419),false,storage);
  rule3=new RenderingRule(createMap(2583,1830,1757,1758),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("tertiaryRoadShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,1830),false,storage);
  rule2=new RenderingRule(createMap(2583,2647,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("residentialRoadColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1903,1758,2583,2606,1762,11),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2586),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("residentialRoadShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,1830),false,storage);
  rule2=new RenderingRule(createMap(2583,2647,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("primaryResidentialHighwayAreaColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2586),false,storage);
  rule2=new RenderingRule(createMap(2583,2587,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("primaryResidentialHighwayAreaShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2648),false,storage);
  rule2=new RenderingRule(createMap(2583,2291,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("serviceHighwayAreaColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2586),false,storage);
  rule2=new RenderingRule(createMap(2583,2587,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("serviceHighwayAreaShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2648),false,storage);
  rule2=new RenderingRule(createMap(2583,2291,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("serviceRoadColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1903,1758,2583,2606,1762,11),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2586),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("serviceRoadShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2649),false,storage);
  rule2=new RenderingRule(createMap(2583,2650,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("serviceDrivewayRoadColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2651),false,storage);
  rule2=new RenderingRule(createMap(2583,1944,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("serviceDrivewayRoadShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2648),false,storage);
  rule2=new RenderingRule(createMap(2583,2291,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("roadRoadColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2648),false,storage);
  rule2=new RenderingRule(createMap(2583,2291,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("pedestrianRoadModeColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2255),false,storage);
  rule2=new RenderingRule(createMap(2583,1874,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("pedestrianRoadShadowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2652),false,storage);
  rule2=new RenderingRule(createMap(2583,2653,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("racewayColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2654),false,storage);
  rule2=new RenderingRule(createMap(2583,2654,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("trackColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2043,1758),false,storage);
  rule2=new RenderingRule(createMap(2583,1876),false,storage);
  rule3=new RenderingRule(createMap(2583,1832,1757,1758),false,storage);
  rule2.addIfChildren(rule3);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,1944,1757,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2507),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("trackSubstrateColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2157),false,storage);
  rule2=new RenderingRule(createMap(2583,2157,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("cyclewayColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2655),false,storage);
  rule2=new RenderingRule(createMap(2583,2655,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("footwayColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,1832),false,storage);
  rule2=new RenderingRule(createMap(2583,2656,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("pathLowZoomColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,1836),false,storage);
  rule2=new RenderingRule(createMap(2583,2656,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("pathColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2657),false,storage);
  rule2=new RenderingRule(createMap(2583,2657,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("bridlewayColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2658,1902,1764),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2659),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("contourLineColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2660,1902,1764),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2661),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("contourLineColor50m",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2662),false,storage);
  rule2=new RenderingRule(createMap(2583,2663,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("cycleRouteColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2664,1902,1758),false,storage);
  rule2=new RenderingRule(createMap(2583,2664,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2665),false,storage);
  rule2=new RenderingRule(createMap(2583,2665,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("cycleRouteMtbScale1Color",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2666,1902,1758),false,storage);
  rule2=new RenderingRule(createMap(2583,2667,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2668),false,storage);
  rule2=new RenderingRule(createMap(2583,2669,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("cycleRouteMtbScale2Color",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2670,1902,1758),false,storage);
  rule2=new RenderingRule(createMap(2583,2671,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2058),false,storage);
  rule2=new RenderingRule(createMap(2583,2672,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("cycleRouteMtbScale3Color",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2673,1902,1758),false,storage);
  rule2=new RenderingRule(createMap(2583,2674,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2042),false,storage);
  rule2=new RenderingRule(createMap(2583,2674,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("cycleRouteMtbScale4Color",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2673,1902,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2042),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("osmcBlackColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2675,1902,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2676),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("osmcBlueColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2677,1902,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2678),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("osmcGreenColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2679,1902,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2680),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("osmcRedColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2048,1902,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2017),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("osmcWhiteColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2681,1902,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2682),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("osmcYellowColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2205),false,storage);
  rule2=new RenderingRule(createMap(2583,2683,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("woodColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2684),false,storage);
  rule2=new RenderingRule(createMap(2583,2683,1757,1758),false,storage);
  rule1.addIfChildren(rule2);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("forestColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(java.util.Collections.EMPTY_MAP,true,storage);
  rule2=new RenderingRule(createMap(2583,2003),false,storage);
  rule1.addIfChildren(rule2);
  rule2=new RenderingRule(createMap(1822,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1797,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(1763,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2685),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("waterStrokeColorNight",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2686,1757,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2687),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("pierColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2250,1757,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2688),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("landuseAllotmentsColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2689,1757,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2690),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("surfaceAsphaltColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2691,1757,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2692),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("surfaceLooselyPavedColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1902,1764),false,storage);
  rule2=new RenderingRule(createMap(2583,2693,1757,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(2583,2694),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2695,1757,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2696),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("litYesColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(1902,1764),false,storage);
  rule2=new RenderingRule(createMap(2583,2697,1757,1758),false,storage);
  rule1.addIfElseChildren(rule2);
  rule2=new RenderingRule(createMap(2583,2698),false,storage);
  rule1.addIfElseChildren(rule2);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2699,1757,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2700),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("litNoColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,1830,2029,10),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,1836),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("highwayMotorwayTextColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,1830,2029,10),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,1836),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("highwayTrunkTextColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,1830,2029,10),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,1836),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("highwayPrimaryTextColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,1836),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("highwaySecondaryTextColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,1836),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("highwayTertiaryTextColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,1830,1757,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,1836),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("highwayResidentialServiceTextColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2701,1757,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2702),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("accessPrivateColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,1944,1757,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,1944),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("accessSkiNoColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2703,1757,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2703),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("accessDestinationColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2704,1757,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2705),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("accessPermissiveColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2706,1757,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2707),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("accessAgriculturalColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2706,1757,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2707),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("accessForestryColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2708,1757,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2709),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("accessCustomersColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2710,1757,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2711),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("accessDeliveryColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2712,1757,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2713),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("accessEmergencyColor",rule0);
  rule0=new RenderingRule(java.util.Collections.EMPTY_MAP,false,storage);
  rule1=new RenderingRule(createMap(2583,2714,1757,1758),false,storage);
  rule0.addIfElseChildren(rule1);
  rule1=new RenderingRule(createMap(2583,2714),false,storage);
  rule0.addIfElseChildren(rule1);
  storage.renderingAttributes.put("tollColor",rule0);
}
