{
  if (result.isEmpty()) {
    return Collections.emptySet();
  }
  if (Algoritms.isEmpty(nameEn)) {
    nameEn=Junidecode.unidecode(name);
  }
  Set<Long> values=new TreeSet<Long>();
  for (  City city : result) {
    String cityPart=null;
    SimpleStreet foundStreet=streetDAO.findStreet(name,city);
    if (foundStreet != null) {
      if (MapUtils.getDistance(location,foundStreet.getLocation()) > 900) {
        if (foundStreet.getCityPart() == null) {
          String aCityPart=findCityPart(foundStreet.getLocation(),city);
          foundStreet=streetDAO.updateStreetCityPart(foundStreet,city,aCityPart != null ? aCityPart : city.getName());
        }
        cityPart=findCityPart(location,city);
        foundStreet=streetDAO.findStreet(name,city,cityPart);
      }
    }
    if (foundStreet == null) {
      long streetId=streetDAO.insertStreet(name,nameEn,location,city,cityPart);
      values.add(streetId);
    }
 else {
      values.add(foundStreet.getId());
    }
  }
  return values;
}
