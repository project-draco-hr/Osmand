{
  actionButton=new ImageView(mapActivity);
  int btnSize=(int)mapActivity.getResources().getDimension(R.dimen.map_button_size);
  int topPad=(int)mapActivity.getResources().getDimension(R.dimen.dashboard_map_top_padding);
  FrameLayout.LayoutParams params=new FrameLayout.LayoutParams(btnSize,btnSize);
  int marginRight=btnSize / 4;
  params.setMargins(0,landscape ? 0 : topPad - 2 * btnSize,marginRight,landscape ? marginRight : 0);
  params.gravity=landscape ? Gravity.BOTTOM | Gravity.RIGHT : Gravity.TOP | Gravity.RIGHT;
  actionButton.setLayoutParams(params);
  actionButton.setScaleType(ScaleType.CENTER);
  actionButton.setBackgroundResource(R.drawable.btn_circle_blue);
  hideActionButton();
  DashboardActionButton myLocationButton=new DashboardActionButton();
  myLocationButton.icon=ContextCompat.getDrawable(mapActivity,R.drawable.map_my_location);
  myLocationButton.text=mapActivity.getString(R.string.map_widget_back_to_loc);
  myLocationButton.onClickListener=new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (getMyApplication().accessibilityEnabled()) {
        mapActivity.getMapActions().whereAmIDialog();
      }
 else {
        mapActivity.getMapViewTrackingUtilities().backToLocationImpl();
      }
      hideDashboard();
    }
  }
;
  DashboardActionButton navigateButton=new DashboardActionButton();
  navigateButton.icon=ContextCompat.getDrawable(mapActivity,R.drawable.map_start_navigation);
  navigateButton.text=mapActivity.getString(R.string.follow);
  navigateButton.onClickListener=new View.OnClickListener(){
    @Override public void onClick(    View v){
      mapActivity.getMapLayers().getMapControlsLayer().doNavigate();
      hideDashboard();
    }
  }
;
  DashboardActionButton routeButton=new DashboardActionButton();
  routeButton.icon=ContextCompat.getDrawable(mapActivity,R.drawable.map_directions);
  routeButton.text=mapActivity.getString(R.string.layer_route);
  routeButton.onClickListener=new View.OnClickListener(){
    @Override public void onClick(    View v){
      boolean hasTargets=false;
      if (visibleType == DashboardType.MAP_MARKERS_SELECTION) {
        TargetPointsHelper targetPointsHelper=getMyApplication().getTargetPointsHelper();
        MapMarkersHelper markersHelper=getMyApplication().getMapMarkersHelper();
        List<MapMarker> markers=markersHelper.getSelectedMarkers();
        if (markers.size() > 0) {
          int i=0;
          if (markersHelper.isStartFromMyLocation()) {
            targetPointsHelper.clearStartPoint(false);
          }
 else {
            MapMarker m=markers.get(i++);
            targetPointsHelper.setStartPoint(new LatLon(m.getLatitude(),m.getLongitude()),false,m.getPointDescription(mapActivity));
          }
          List<TargetPoint> targetPoints=new ArrayList<>();
          for (int k=i; k < markers.size(); k++) {
            MapMarker m=markers.get(k);
            TargetPoint t=new TargetPoint(new LatLon(m.getLatitude(),m.getLongitude()),m.getPointDescription(mapActivity));
            targetPoints.add(t);
          }
          RoutingHelper routingHelper=mapActivity.getRoutingHelper();
          boolean updateRoute=routingHelper.isFollowingMode() || routingHelper.isRoutePlanningMode();
          targetPointsHelper.reorderAllTargetPoints(targetPoints,updateRoute);
          hasTargets=true;
        }
 else {
          targetPointsHelper.clearStartPoint(false);
          targetPointsHelper.clearPointToNavigate(false);
        }
      }
      hideDashboard();
      mapActivity.getMapLayers().getMapControlsLayer().doRoute(hasTargets);
    }
  }
;
  DashboardActionButton markersSelectionButton=new DashboardActionButton();
  markersSelectionButton.icon=ContextCompat.getDrawable(mapActivity,R.drawable.map_start_navigation);
  markersSelectionButton.text=mapActivity.getString(R.string.map_markers);
  markersSelectionButton.onClickListener=new View.OnClickListener(){
    @Override public void onClick(    View v){
      setDashboardVisibility(true,DashboardType.MAP_MARKERS_SELECTION);
    }
  }
;
  actionButtons.put(DashboardActionButtonType.MY_LOCATION,myLocationButton);
  actionButtons.put(DashboardActionButtonType.NAVIGATE,navigateButton);
  actionButtons.put(DashboardActionButtonType.ROUTE,routeButton);
  actionButtons.put(DashboardActionButtonType.MARKERS_SELECTION,markersSelectionButton);
}
