{
  baseColor=mapActivity.getResources().getColor(R.color.osmand_orange) & 0x00ffffff;
  waypointDialogHelper=new WaypointDialogHelper(mapActivity);
  waypointDialogHelper.setWaypointDialogHelperCallbacks(this);
  landscape=!AndroidUiHelper.isOrientationPortrait(mapActivity);
  dashboardView=(FrameLayout)mapActivity.findViewById(R.id.dashboard);
  final View.OnClickListener listener=new View.OnClickListener(){
    @Override public void onClick(    View v){
      hideDashboard();
    }
  }
;
  toolbar=((Toolbar)dashboardView.findViewById(R.id.toolbar));
  ObservableScrollView scrollView=((ObservableScrollView)dashboardView.findViewById(R.id.main_scroll));
  listView=(ListView)dashboardView.findViewById(R.id.dash_list_view);
  listView.setDrawSelectorOnTop(true);
  ((DynamicListView)listView).setDynamicListViewCallbacks(this);
  swipeDismissListener=new SwipeDismissListViewTouchListener(listView,new SwipeDismissListViewTouchListener.DismissCallbacks(){
    @Override public boolean canDismiss(    int position){
      boolean res=false;
      if (visibleType == DashboardType.WAYPOINTS && listAdapter instanceof StableArrayAdapter) {
        List<Object> activeObjects=((StableArrayAdapter)listAdapter).getActiveObjects();
        Object obj=listAdapter.getItem(position);
        res=activeObjects.contains(obj);
      }
      return res;
    }
    @Override public Undoable onDismiss(    final int position){
      final Object item;
      final StableArrayAdapter stableAdapter;
      final int activeObjPos;
      if (listAdapter instanceof StableArrayAdapter) {
        stableAdapter=(StableArrayAdapter)listAdapter;
        item=stableAdapter.getItem(position);
        stableAdapter.setNotifyOnChange(false);
        stableAdapter.remove(item);
        stableAdapter.getObjects().remove(item);
        activeObjPos=stableAdapter.getActiveObjects().indexOf(item);
        stableAdapter.getActiveObjects().remove(item);
        stableAdapter.refreshData();
        stableAdapter.notifyDataSetChanged();
      }
 else {
        item=null;
        stableAdapter=null;
        activeObjPos=0;
      }
      return new Undoable(){
        @Override public void undo(){
          if (item != null) {
            stableAdapter.setNotifyOnChange(false);
            stableAdapter.insert(item,position);
            stableAdapter.getObjects().add(position,item);
            stableAdapter.getActiveObjects().add(activeObjPos,item);
            stableAdapter.refreshData();
            onItemsSwapped(stableAdapter.getActiveObjects());
          }
        }
        @Override public String getTitle(){
          if (visibleType == DashboardType.WAYPOINTS && (getMyApplication().getRoutingHelper().isRoutePlanningMode() || getMyApplication().getRoutingHelper().isFollowingMode()) && item != null && stableAdapter.getActiveObjects().size() == 0) {
            return mapActivity.getResources().getString(R.string.cancel_navigation);
          }
 else {
            return null;
          }
        }
      }
;
    }
    @Override public void onHidePopup(){
      if (listAdapter instanceof StableArrayAdapter) {
        StableArrayAdapter stableAdapter=(StableArrayAdapter)listAdapter;
        stableAdapter.refreshData();
        onItemsSwapped(stableAdapter.getActiveObjects());
        if (stableAdapter.getActiveObjects().size() == 0) {
          hideDashboard();
          mapActivity.getMapActions().stopNavigationWithoutConfirm();
          mapActivity.getMapLayers().getMapControlsLayer().getMapRouteInfoMenu().hide();
        }
      }
    }
  }
);
  gradientToolbar=mapActivity.getResources().getDrawable(R.drawable.gradient_toolbar).mutate();
  if (AndroidUiHelper.isOrientationPortrait(mapActivity)) {
    this.portrait=true;
    scrollView.setScrollViewCallbacks(this);
    ((ObservableListView)listView).setScrollViewCallbacks(this);
    mFlexibleSpaceImageHeight=mapActivity.getResources().getDimensionPixelSize(R.dimen.dashboard_map_top_padding);
    mFlexibleBlurSpaceHeight=mapActivity.getResources().getDimensionPixelSize(R.dimen.dashboard_map_toolbar);
    paddingView=new FrameLayout(mapActivity);
    AbsListView.LayoutParams lp=new AbsListView.LayoutParams(AbsListView.LayoutParams.MATCH_PARENT,mFlexibleSpaceImageHeight);
    paddingView.setLayoutParams(lp);
    paddingView.setClickable(true);
    paddingView.setOnClickListener(listener);
    FrameLayout shadowContainer=new FrameLayout(mapActivity);
    FrameLayout.LayoutParams fl=new FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT,FrameLayout.LayoutParams.MATCH_PARENT);
    fl.gravity=Gravity.BOTTOM;
    shadowContainer.setLayoutParams(fl);
    ImageView shadow=new ImageView(mapActivity);
    shadow.setImageDrawable(mapActivity.getResources().getDrawable(R.drawable.bg_shadow_onmap));
    shadow.setLayoutParams(new FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT,FrameLayout.LayoutParams.WRAP_CONTENT,Gravity.BOTTOM));
    shadow.setScaleType(ScaleType.FIT_XY);
    shadowContainer.addView(shadow);
    ((FrameLayout)paddingView).addView(shadowContainer);
    listView.addHeaderView(paddingView);
    listBackgroundView=mapActivity.findViewById(R.id.dash_list_background);
  }
  dashboardView.findViewById(R.id.animateContent).setOnClickListener(listener);
  dashboardView.findViewById(R.id.map_part_dashboard).setOnClickListener(listener);
  initActionButtons();
  dashboardView.addView(actionButton);
}
