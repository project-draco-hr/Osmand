{
  try {
    List<File> filesToReindex=new ArrayList<File>();
    boolean forceWifi=DownloadIndexActivity.this.downloadFileHelper.isWifiConnected();
    for (int i=0; i < filesToDownload.length; i++) {
      IndexItem filename=filesToDownload[i];
      List<DownloadEntry> list=DownloadIndexActivity.this.entriesToDownload.get(filename);
      if (list != null) {
        String indexOfAllFiles=filesToDownload.length <= 1 ? "" : (" [" + (i + 1) + "/"+ filesToDownload.length+ "]");
        for (        DownloadEntry entry : list) {
          boolean result=downloadFile(entry,filesToReindex,indexOfAllFiles,forceWifi);
          if (result) {
            DownloadIndexActivity.this.entriesToDownload.remove(filename);
            downloads.set(downloads.get() + 1);
            if (entry.existingBackupFile != null) {
              Algoritms.removeAllFiles(entry.existingBackupFile);
            }
            publishProgress(entry);
          }
        }
      }
    }
    boolean vectorMapsToReindex=false;
    for (    File f : filesToReindex) {
      if (f.getName().endsWith(IndexConstants.BINARY_MAP_INDEX_EXT)) {
        vectorMapsToReindex=true;
        break;
      }
    }
    ResourceManager manager=getMyApplication().getResourceManager();
    manager.indexVoiceFiles(progress);
    if (vectorMapsToReindex) {
      List<String> warnings=manager.indexingMaps(progress);
      if (!warnings.isEmpty()) {
        return warnings.get(0);
      }
    }
  }
 catch (  InterruptedException e) {
  }
 finally {
    if (DownloadIndexActivity.this.progressFileDlg != null) {
      removeDialog(DownloadIndexActivity.DIALOG_PROGRESS_FILE);
      DownloadIndexActivity.this.progressFileDlg=null;
    }
  }
  return null;
}
