{
  if (item.getItemId() == RELOAD_ID) {
    downloadListIndexThread=new DownloadIndexListThread(getPackageManager(),getAssets(),Version.getVersionAsURLParam(this));
    downloadIndexList();
  }
 else {
    final DownloadIndexAdapter listAdapter=(DownloadIndexAdapter)getExpandableListAdapter();
    if (item.getItemId() == SELECT_ALL_ID) {
      int selected=0;
      for (int i=0; i < listAdapter.getChildrenCount(0); i++) {
        IndexItem es=listAdapter.getChild(0,i);
        if (!entriesToDownload.containsKey(es.getFileName())) {
          selected++;
          entriesToDownload.put(es.getFileName(),es.createDownloadEntry());
        }
      }
      AccessibleToast.makeText(this,MessageFormat.format(getString(R.string.items_were_selected),selected),Toast.LENGTH_SHORT).show();
      listAdapter.notifyDataSetInvalidated();
      if (selected > 0) {
        findViewById(R.id.DownloadButton).setVisibility(View.VISIBLE);
      }
    }
 else     if (item.getItemId() == FILTER_EXISTING_REGIONS) {
      final Collection<String> listAlreadyDownloaded=listAlreadyDownloadedWithAlternatives();
      final List<IndexItem> filtered=new ArrayList<IndexItem>();
      for (      String file : listAlreadyDownloaded) {
        IndexItem fileItem=listAdapter.getIndexFiles().get(file);
        if (fileItem != null) {
          filtered.add(fileItem);
        }
      }
      listAdapter.setIndexFiles(filtered);
    }
 else     if (item.getItemId() == DESELECT_ALL_ID) {
      entriesToDownload.clear();
      listAdapter.notifyDataSetInvalidated();
      findViewById(R.id.DownloadButton).setVisibility(View.GONE);
    }
 else {
      return false;
    }
  }
  return true;
}
