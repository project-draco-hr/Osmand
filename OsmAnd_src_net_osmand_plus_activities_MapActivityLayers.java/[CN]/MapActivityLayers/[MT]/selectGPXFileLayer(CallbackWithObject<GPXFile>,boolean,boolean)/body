{
  final List<String> list=new ArrayList<String>();
  final OsmandSettings settings=getApplication().getSettings();
  final File dir=settings.extendOsmandPath(ResourceManager.GPX_PATH);
  if (dir != null && dir.canRead()) {
    File[] files=dir.listFiles();
    if (files != null) {
      Arrays.sort(files,new Comparator<File>(){
        @Override public int compare(        File object1,        File object2){
          if (object1.getName().compareTo(object2.getName()) > 0) {
            return -1;
          }
 else           if (object1.getName().equals(object2.getName())) {
            return 0;
          }
          return 1;
        }
      }
);
      for (      File f : files) {
        if (f.getName().endsWith(".gpx")) {
          list.add(f.getName());
        }
      }
    }
  }
  if (list.isEmpty()) {
    Toast.makeText(activity,R.string.gpx_files_not_found,Toast.LENGTH_LONG).show();
  }
  if (!list.isEmpty() || showCurrentGpx) {
    Builder builder=new AlertDialog.Builder(activity);
    if (showCurrentGpx) {
      list.add(0,getString(R.string.show_current_gpx_title));
    }
    builder.setItems(list.toArray(new String[list.size()]),new DialogInterface.OnClickListener(){
      @Override public void onClick(      DialogInterface dialog,      int which){
        dialog.dismiss();
        if (showCurrentGpx && which == 0) {
          callbackWithObject.processResult(null);
        }
 else {
          final ProgressDialog dlg=ProgressDialog.show(activity,getString(R.string.loading),getString(R.string.loading_data));
          final File f=new File(dir,list.get(which));
          new Thread(new Runnable(){
            @Override public void run(){
              final GPXFile res=GPXUtilities.loadGPXFile(activity,f,convertCloudmade);
              dlg.dismiss();
              activity.runOnUiThread(new Runnable(){
                @Override public void run(){
                  if (res.warning != null) {
                    Toast.makeText(activity,res.warning,Toast.LENGTH_LONG).show();
                  }
 else {
                    callbackWithObject.processResult(res);
                  }
                }
              }
);
            }
          }
,"Loading gpx").start();
        }
      }
    }
);
    builder.show();
  }
}
