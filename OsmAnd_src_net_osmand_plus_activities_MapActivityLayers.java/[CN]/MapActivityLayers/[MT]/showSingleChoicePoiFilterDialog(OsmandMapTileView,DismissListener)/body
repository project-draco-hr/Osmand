{
  final OsmandApplication app=getApplication();
  final PoiFiltersHelper poiFilters=app.getPoiFilters();
  final ContextMenuAdapter adapter=new ContextMenuAdapter();
  adapter.addItem(new ContextMenuItem.ItemBuilder().setTitleId(R.string.shared_string_search,app).setIcon(R.drawable.ic_action_search_dark).createItem());
  final List<PoiUIFilter> list=new ArrayList<>();
  list.add(poiFilters.getCustomPOIFilter());
  for (  PoiUIFilter f : poiFilters.getTopDefinedPoiFilters()) {
    addFilterToList(adapter,list,f,false);
  }
  for (  PoiUIFilter f : poiFilters.getSearchPoiFilters()) {
    addFilterToList(adapter,list,f,false);
  }
  final ArrayAdapter<ContextMenuItem> listAdapter=adapter.createListAdapter(activity,app.getSettings().isLightContent());
  AlertDialog.Builder builder=new AlertDialog.Builder(activity);
  builder.setAdapter(listAdapter,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      PoiUIFilter pf=list.get(which);
      String filterId=pf.getFilterId();
      if (filterId.equals(PoiUIFilter.CUSTOM_FILTER_ID)) {
        if (activity.getDashboard().isVisible()) {
          activity.getDashboard().hideDashboard();
        }
        activity.showQuickSearch(ShowQuickSearchMode.NEW,true);
      }
 else {
        getApplication().getPoiFilters().clearSelectedPoiFilters();
        getApplication().getPoiFilters().addSelectedPoiFilter(pf);
        mapView.refreshMap();
      }
    }
  }
);
  builder.setTitle(R.string.show_poi_over_map);
  builder.setNegativeButton(R.string.shared_string_dismiss,null);
  builder.setNeutralButton(" ",new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      showMultichoicePoiFilterDialog(mapView,listener);
    }
  }
);
  final AlertDialog alertDialog=builder.create();
  alertDialog.setOnShowListener(new DialogInterface.OnShowListener(){
    @Override public void onShow(    DialogInterface dialog){
      Button neutralButton=alertDialog.getButton(DialogInterface.BUTTON_NEUTRAL);
      Drawable drawable=app.getIconsCache().getThemedIcon(R.drawable.ic_action_multiselect);
      neutralButton.setCompoundDrawablesWithIntrinsicBounds(drawable,null,null,null);
    }
  }
);
  alertDialog.setOnDismissListener(new DialogInterface.OnDismissListener(){
    @Override public void onDismiss(    DialogInterface dialog){
      listener.dismiss();
    }
  }
);
  alertDialog.show();
}
