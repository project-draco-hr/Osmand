{
  final List<PoiFilter> userDefined=new ArrayList<PoiFilter>();
  OsmandApplication app=(OsmandApplication)getApplication();
  final PoiFiltersHelper poiFilters=app.getPoiFilters();
  final ContextMenuAdapter adapter=new ContextMenuAdapter(activity);
  Item is=adapter.item(getString(R.string.any_poi));
  if (RenderingIcons.containsBigIcon("null")) {
    is.icon(RenderingIcons.getBigIconResourceId("null"));
  }
  is.reg();
  for (  PoiFilter f : poiFilters.getUserDefinedPoiFilters()) {
    if (!f.getFilterId().equals(PoiFilter.BY_NAME_FILTER_ID)) {
      Item it=adapter.item(f.getName());
      if (RenderingIcons.containsBigIcon(f.getSimplifiedId())) {
        it.icon(RenderingIcons.getBigIconResourceId(f.getSimplifiedId()));
      }
 else {
        it.icon(RenderingIcons.getBigIconResourceId("user_defined"));
      }
      it.reg();
      userDefined.add(f);
    }
  }
  for (  AmenityType t : AmenityType.values()) {
    Item it=adapter.item(OsmAndFormatter.toPublicString(t,activity.getMyApplication()));
    if (RenderingIcons.containsBigIcon(t.toString().toLowerCase())) {
      it.icon(RenderingIcons.getBigIconResourceId(t.toString().toLowerCase()));
    }
    it.reg();
  }
  Builder builder=new AlertDialog.Builder(activity);
  ListAdapter listAdapter;
  if (Build.VERSION.SDK_INT < Build.VERSION_CODES.HONEYCOMB) {
    listAdapter=adapter.createListAdapter(activity,R.layout.list_menu_item,app.getSettings().isLightContentMenu());
  }
 else {
    listAdapter=adapter.createListAdapter(activity,R.layout.list_menu_item_native,app.getSettings().isLightContentMenu());
  }
  builder.setAdapter(listAdapter,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      String filterId;
      if (which == 0) {
        filterId=PoiFiltersHelper.getOsmDefinedFilterId(null);
      }
 else       if (which <= userDefined.size()) {
        filterId=userDefined.get(which - 1).getFilterId();
      }
 else {
        filterId=PoiFiltersHelper.getOsmDefinedFilterId(AmenityType.values()[which - userDefined.size() - 1]);
      }
      if (filterId.equals(PoiFilter.CUSTOM_FILTER_ID)) {
        getApplication().getSettings().setPoiFilterForMap(filterId);
        Intent newIntent=new Intent(activity,EditPOIFilterActivity.class);
        newIntent.putExtra(EditPOIFilterActivity.AMENITY_FILTER,filterId);
        newIntent.putExtra(EditPOIFilterActivity.SEARCH_LAT,mapView.getLatitude());
        newIntent.putExtra(EditPOIFilterActivity.SEARCH_LON,mapView.getLongitude());
        activity.startActivity(newIntent);
      }
 else {
        getApplication().getSettings().setPoiFilterForMap(filterId);
        PoiFilter f=poiFilters.getFilterById(filterId);
        if (f != null) {
          f.clearNameFilter();
        }
        poiMapLayer.setFilter(f);
        mapView.refreshMap();
      }
    }
  }
);
  builder.show();
}
