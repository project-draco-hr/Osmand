{
  final List<PoiLegacyFilter> userDefined=new ArrayList<PoiLegacyFilter>();
  OsmandApplication app=(OsmandApplication)getApplication();
  final PoiFiltersHelper poiFilters=app.getPoiFilters();
  final ContextMenuAdapter adapter=new ContextMenuAdapter(activity);
  Item is=adapter.item(getString(R.string.any_poi));
  if (RenderingIcons.containsBigIcon("null")) {
    is.icon(RenderingIcons.getBigIconResourceId("null"));
  }
  is.reg();
  adapter.item(getString(R.string.poi_filter_custom_filter)).icon(RenderingIcons.getBigIconResourceId("user_defined")).reg();
  for (  PoiLegacyFilter f : poiFilters.getUserDefinedPoiFilters()) {
    Item it=adapter.item(f.getName());
    if (RenderingIcons.containsBigIcon(f.getSimplifiedId())) {
      it.icon(RenderingIcons.getBigIconResourceId(f.getSimplifiedId()));
    }
 else {
      it.icon(RenderingIcons.getBigIconResourceId("user_defined"));
    }
    it.reg();
    userDefined.add(f);
  }
  final List<PoiCategory> categories=getApplication().getPoiTypes().getCategories();
  for (  PoiCategory t : categories) {
    Item it=adapter.item(t.getTranslation());
    if (RenderingIcons.containsBigIcon(t.getKeyName())) {
      it.icon(RenderingIcons.getBigIconResourceId(t.getKeyName()));
    }
    it.reg();
  }
  Builder builder=new AlertDialog.Builder(activity);
  ListAdapter listAdapter=adapter.createListAdapter(activity,app.getSettings().isLightContent());
  builder.setAdapter(listAdapter,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      if (which == 1) {
        String filterId=PoiLegacyFilter.CUSTOM_FILTER_ID;
        getApplication().getSettings().setPoiFilterForMap(filterId);
        Intent newIntent=new Intent(activity,EditPOIFilterActivity.class);
        newIntent.putExtra(EditPOIFilterActivity.AMENITY_FILTER,filterId);
        newIntent.putExtra(EditPOIFilterActivity.SEARCH_LAT,mapView.getLatitude());
        newIntent.putExtra(EditPOIFilterActivity.SEARCH_LON,mapView.getLongitude());
        activity.startActivity(newIntent);
      }
 else {
        String filterId;
        if (which == 0) {
          filterId=PoiFiltersHelper.getOsmDefinedFilterId(null);
        }
 else         if (which <= userDefined.size() + 1) {
          filterId=userDefined.get(which - 2).getFilterId();
        }
 else {
          filterId=PoiFiltersHelper.getOsmDefinedFilterId(categories.get(which - userDefined.size() - 2));
        }
        getApplication().getSettings().setPoiFilterForMap(filterId);
        PoiLegacyFilter f=poiFilters.getFilterById(filterId);
        if (f != null) {
          f.clearNameFilter();
        }
        poiMapLayer.setFilter(f);
        mapView.refreshMap();
        if (selected != null && selected.length > 0) {
          selected[0]=f;
        }
      }
    }
  }
);
  builder.setNegativeButton(R.string.default_buttons_cancel,null);
  return builder.show();
}
