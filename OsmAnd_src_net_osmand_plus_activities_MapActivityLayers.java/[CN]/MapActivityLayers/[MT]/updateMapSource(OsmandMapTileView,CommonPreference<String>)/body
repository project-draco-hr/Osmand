{
  OsmandSettings settings=getApplication().getSettings();
  overlayLayer.setAlpha(settings.MAP_OVERLAY_TRANSPARENCY.get());
  int mapTransparency=settings.MAP_UNDERLAY.get() == null ? 255 : settings.MAP_TRANSPARENCY.get();
  mapTileLayer.setAlpha(mapTransparency);
  mapVectorLayer.setAlpha(mapTransparency);
  updateLayer(mapView,settings,overlayLayer,settings.MAP_OVERLAY,0.7f,settings.MAP_OVERLAY == settingsToWarnAboutMap);
  updateLayer(mapView,settings,underlayLayer,settings.MAP_UNDERLAY,-0.5f,settings.MAP_UNDERLAY == settingsToWarnAboutMap);
  boolean vectorData=settings.MAP_VECTOR_DATA.get();
  OsmandApplication app=((OsmandApplication)getApplication());
  ResourceManager rm=app.getResourceManager();
  if (vectorData && !app.isApplicationInitializing()) {
    if (rm.getRenderer().isEmpty()) {
      AccessibleToast.makeText(activity,activity.getString(R.string.no_vector_map_loaded),Toast.LENGTH_LONG).show();
      vectorData=false;
    }
  }
  ITileSource newSource=settings.getMapTileSource(settings.MAP_TILE_SOURCES == settingsToWarnAboutMap);
  ITileSource oldMap=mapTileLayer.getMap();
  if (oldMap instanceof SQLiteTileSource) {
    ((SQLiteTileSource)oldMap).closeDB();
  }
  mapTileLayer.setMap(newSource);
  mapTileLayer.setVisible(!vectorData);
  mapVectorLayer.setVisible(vectorData);
  if (vectorData) {
    mapView.setMainLayer(mapVectorLayer);
  }
 else {
    mapView.setMainLayer(mapTileLayer);
  }
}
