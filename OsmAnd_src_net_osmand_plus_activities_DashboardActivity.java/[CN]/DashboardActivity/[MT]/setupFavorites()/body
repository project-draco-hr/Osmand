{
  final FavouritesDbHelper helper=getMyApplication().getFavorites();
  final List<FavouritePoint> points=helper.getFavouritePoints();
  ArrayAdapter<FavouritePoint> adapter=new ArrayAdapter<FavouritePoint>(this,R.layout.favourites_list_item,0,points){
    @Override public View getView(    int position,    View convertView,    ViewGroup parent){
      View view=convertView;
      if (view == null) {
        LayoutInflater inflater=getLayoutInflater();
        view=inflater.inflate(R.layout.favourites_list_item,parent,false);
      }
      TextView label=(TextView)view.findViewById(R.id.favourite_label);
      ImageView icon=(ImageView)view.findViewById(R.id.favourite_icon);
      final FavouritePoint model=points.get(position);
      view.setTag(model);
      icon.setImageDrawable(FavoriteImageDrawable.getOrCreate(DashboardActivity.this,model.getColor()));
      LatLon lastKnownMapLocation=getMyApplication().getSettings().getLastKnownMapLocation();
      int dist=(int)(MapUtils.getDistance(model.getLatitude(),model.getLongitude(),lastKnownMapLocation.getLatitude(),lastKnownMapLocation.getLongitude()));
      String distance=OsmAndFormatter.getFormattedDistance(dist,getMyApplication()) + "  ";
      label.setText(distance + model.getName(),TextView.BufferType.SPANNABLE);
      label.setTypeface(Typeface.DEFAULT,model.isVisible() ? Typeface.NORMAL : Typeface.ITALIC);
      ((Spannable)label.getText()).setSpan(new ForegroundColorSpan(getResources().getColor(R.color.color_distance)),0,distance.length() - 1,0);
      final CheckBox ch=(CheckBox)view.findViewById(R.id.check_item);
      view.findViewById(R.id.favourite_icon).setVisibility(View.VISIBLE);
      ch.setVisibility(View.GONE);
      return view;
    }
  }
;
  ((ListView)findViewById(R.id.list_favorites)).setAdapter(adapter);
}
