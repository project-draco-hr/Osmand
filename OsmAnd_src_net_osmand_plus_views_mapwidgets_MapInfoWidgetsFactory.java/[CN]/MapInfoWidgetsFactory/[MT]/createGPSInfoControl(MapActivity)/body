{
  final OsmandApplication app=map.getMyApplication();
  final OsmAndLocationProvider loc=app.getLocationProvider();
  final TextInfoWidget gpsInfoControl=new TextInfoWidget(map){
    private int u=-1;
    private int f=-1;
    @Override public boolean updateInfo(    DrawSettings d){
      GPSInfo gpsInfo=loc.getGPSInfo();
      if (gpsInfo.usedSatellites != u || gpsInfo.foundSatellites != f) {
        u=gpsInfo.usedSatellites;
        f=gpsInfo.foundSatellites;
        setText(gpsInfo.usedSatellites + "/" + gpsInfo.foundSatellites,"");
        return true;
      }
      return false;
    }
  }
;
  gpsInfoControl.setIcons(R.drawable.widget_gps_info_day,R.drawable.widget_gps_info_night);
  gpsInfoControl.setText(null,null);
  gpsInfoControl.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View view){
      if (app.getNavigationService() != null) {
        AlertDialog.Builder dlg=new AlertDialog.Builder(map);
        dlg.setTitle(app.getString(R.string.sleep_mode_stop_dialog));
        int soi=app.getNavigationService().getServiceOffInterval();
        if (soi == 0) {
          dlg.setMessage(app.getString(R.string.gps_wake_up_timer) + ": " + app.getString(R.string.int_continuosly));
        }
 else         if (soi <= 90000) {
          dlg.setMessage(app.getString(R.string.gps_wake_up_timer) + ": " + Integer.toString(soi / 1000)+ " "+ app.getString(R.string.int_seconds));
        }
 else {
          dlg.setMessage(app.getString(R.string.gps_wake_up_timer) + ": " + Integer.toString(soi / 1000 / 60)+ " "+ app.getString(R.string.int_min));
        }
        dlg.setPositiveButton(app.getString(R.string.keep_navigation_service),null);
        dlg.setNegativeButton(app.getString(R.string.stop_navigation_service),new DialogInterface.OnClickListener(){
          @Override public void onClick(          DialogInterface dialogInterface,          int i){
            Intent serviceIntent=new Intent(app,NavigationService.class);
            app.stopService(serviceIntent);
          }
        }
);
        dlg.show();
      }
 else {
        final ValueHolder<Integer> vs=new ValueHolder<Integer>();
        vs.value=app.getSettings().SERVICE_OFF_INTERVAL.get();
        final AlertDialog[] dlgshow=new AlertDialog[1];
        AlertDialog.Builder dlg=new AlertDialog.Builder(map);
        dlg.setTitle(app.getString(R.string.enable_sleep_mode));
        WindowManager mgr=(WindowManager)map.getSystemService(Context.WINDOW_SERVICE);
        DisplayMetrics dm=new DisplayMetrics();
        mgr.getDefaultDisplay().getMetrics(dm);
        LinearLayout ll=OsmandMonitoringPlugin.createIntervalChooseLayout(map,app.getString(R.string.gps_wake_up_timer) + " : %s",OsmandMonitoringPlugin.SECONDS,OsmandMonitoringPlugin.MINUTES,null,vs,dm);
        if (Version.isGpsStatusEnabled(app)) {
          dlg.setNeutralButton(R.string.gps_status,new DialogInterface.OnClickListener(){
            @Override public void onClick(            DialogInterface dialog,            int which){
              new StartGPSStatus(map).run();
            }
          }
);
        }
        dlg.setView(ll);
        dlg.setPositiveButton(R.string.shared_string_ok,new DialogInterface.OnClickListener(){
          @Override public void onClick(          DialogInterface dialog,          int which){
            app.getSettings().SERVICE_OFF_INTERVAL.set(vs.value);
            app.startNavigationService(NavigationService.USED_BY_WAKE_UP);
          }
        }
);
        dlg.setNegativeButton(R.string.shared_string_cancel,null);
        dlgshow[0]=dlg.show();
      }
    }
  }
);
  return gpsInfoControl;
}
