{
  final OsmandMapTileView view=map.getMapView();
  final Drawable lockEnabledNormal=view.getResources().getDrawable(R.drawable.lock_enabled);
  final Drawable lockDisabledNormal=view.getResources().getDrawable(R.drawable.lock_disabled);
  final Drawable lockEnabledWhite=view.getResources().getDrawable(R.drawable.lock_enabled_white);
  final Drawable lockDisabledWhite=view.getResources().getDrawable(R.drawable.lock_disabled_white);
  lockDisabled=lockDisabledNormal;
  lockEnabled=lockEnabledNormal;
  final ImageViewWidget lockView=new ImageViewWidget(view.getContext()){
    private boolean nightMode;
    @Override public boolean updateInfo(    DrawSettings drawSettings){
      boolean nightMode=drawSettings == null ? false : drawSettings.isNightMode();
      if (nightMode != this.nightMode) {
        this.nightMode=nightMode;
        lockDisabled=drawSettings.isNightMode() ? lockDisabledWhite : lockDisabledNormal;
        lockEnabled=drawSettings.isNightMode() ? lockEnabledWhite : lockEnabledNormal;
        setImageDrawable(isScreenLocked ? lockEnabled : lockDisabled);
        return true;
      }
      return false;
    }
  }
;
  if (isScreenLocked) {
    map.getMapViewTrackingUtilities().backToLocationImpl();
    lockView.setBackgroundDrawable(lockEnabled);
  }
 else {
    lockView.setBackgroundDrawable(lockDisabled);
  }
  final FrameLayout transparentLockView=new FrameLayout(view.getContext());
  FrameLayout.LayoutParams fparams=new FrameLayout.LayoutParams(LayoutParams.FILL_PARENT,LayoutParams.FILL_PARENT,Gravity.CENTER);
  transparentLockView.setLayoutParams(fparams);
  transparentLockView.setOnTouchListener(new View.OnTouchListener(){
    @Override public boolean onTouch(    View v,    MotionEvent event){
      if (event.getAction() == MotionEvent.ACTION_UP) {
        int[] locs=new int[2];
        lockView.getLocationOnScreen(locs);
        int x=(int)event.getX() - locs[0];
        int y=(int)event.getY() - locs[1];
        transparentLockView.getLocationOnScreen(locs);
        x+=locs[0];
        y+=locs[1];
        if (lockView.getWidth() >= x && x >= 0 && lockView.getHeight() >= y && y >= 0) {
          lockView.performClick();
          return true;
        }
        blinkIcon();
        AccessibleToast.makeText(transparentLockView.getContext(),R.string.screen_is_locked,Toast.LENGTH_SHORT).show();
        return true;
      }
      return true;
    }
    private void blinkIcon(){
      lockView.setBackgroundDrawable(lockDisabled);
    }
  }
);
  final FrameLayout parent=null;
  lockView.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (isScreenLocked) {
        parent.removeView(transparentLockView);
      }
      isScreenLocked=!isScreenLocked;
      if (isScreenLocked) {
        parent.addView(transparentLockView);
        map.getMapViewTrackingUtilities().backToLocationImpl();
        lockView.setBackgroundDrawable(lockEnabled);
      }
 else {
        lockView.setBackgroundDrawable(lockDisabled);
      }
    }
  }
);
  if (isScreenLocked) {
  }
  return lockView;
}
