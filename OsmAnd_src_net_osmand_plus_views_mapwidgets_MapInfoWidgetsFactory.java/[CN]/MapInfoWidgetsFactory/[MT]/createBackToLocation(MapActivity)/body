{
  final Drawable backToLoc=map.getResources().getDrawable(R.drawable.back_to_loc);
  final Drawable backToLocWhite=map.getResources().getDrawable(R.drawable.back_to_loc_white);
  ImageView backToLocation=new ImageViewWidget(map){
    private boolean nightM;
    @Override public boolean updateInfo(    DrawSettings drawSettings){
      boolean nightMode=drawSettings == null ? false : drawSettings.isNightMode();
      if (nightM != nightMode) {
        nightM=nightMode;
        setImageDrawable(nightM ? backToLocWhite : backToLoc);
      }
      boolean enabled=map.getMyApplication().getLocationProvider().getLastKnownLocation() != null;
      enabled=enabled && !map.getMapViewTrackingUtilities().isMapLinkedToLocation();
      setEnabled(enabled);
      return true;
    }
  }
;
  backToLocation.setPadding((int)(5 * scaleCoefficient),0,(int)(5 * scaleCoefficient),0);
  backToLocation.setImageDrawable(map.getResources().getDrawable(R.drawable.back_to_loc));
  backToLocation.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      map.getMapViewTrackingUtilities().backToLocationImpl();
    }
  }
);
  return backToLocation;
}
