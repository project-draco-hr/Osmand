{
  final Drawable backToLoc=map.getResources().getDrawable(R.drawable.back_to_loc);
  final Drawable backToLocWhite=map.getResources().getDrawable(R.drawable.back_to_loc_white);
  final Drawable backToLocDisabled=map.getResources().getDrawable(R.drawable.la_backtoloc_disabled);
  final Drawable backToLocDisabledWhite=map.getResources().getDrawable(R.drawable.la_backtoloc_disabled_white);
  final Drawable backToLocTracked=map.getResources().getDrawable(R.drawable.back_to_loc_tracked);
  final Drawable backToLocTrackedWhite=map.getResources().getDrawable(R.drawable.back_to_loc_tracked_white);
  ImageView backToLocation=new ImageViewWidget(map){
    Drawable lastDrawable=null;
    @Override public boolean updateInfo(    DrawSettings drawSettings){
      boolean nightMode=drawSettings == null ? false : drawSettings.isNightMode();
      boolean enabled=map.getMyApplication().getLocationProvider().getLastKnownLocation() != null;
      boolean tracked=map.getMapViewTrackingUtilities().isMapLinkedToLocation();
      Drawable d;
      if (!enabled) {
        d=nightMode ? backToLocDisabledWhite : backToLocDisabled;
      }
 else       if (tracked) {
        d=nightMode ? backToLocTrackedWhite : backToLocTracked;
      }
 else {
        d=nightMode ? backToLocWhite : backToLoc;
      }
      if (d != lastDrawable) {
        lastDrawable=d;
        setImageDrawable(d);
      }
      return true;
    }
  }
;
  backToLocation.setImageDrawable(map.getResources().getDrawable(R.drawable.back_to_loc));
  backToLocation.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      map.getMapViewTrackingUtilities().backToLocationImpl();
    }
  }
);
  return backToLocation;
}
