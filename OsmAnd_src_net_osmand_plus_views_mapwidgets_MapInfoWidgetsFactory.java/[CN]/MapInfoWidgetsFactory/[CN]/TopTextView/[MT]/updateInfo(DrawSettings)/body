{
  String text=null;
  TurnType[] type=new TurnType[1];
  if (routingHelper != null && routingHelper.isRouteCalculated()) {
    if (routingHelper.isFollowingMode()) {
      text=routingHelper.getCurrentName(type);
    }
 else {
      int di=MapRouteInfoControl.getDirectionInfo();
      if (di >= 0 && MapRouteInfoControl.isControlVisible() && di < routingHelper.getRouteDirections().size()) {
        RouteDirectionInfo next=routingHelper.getRouteDirections().get(di);
        type[0]=next.getTurnType();
        text=RoutingHelper.formatStreetName(next.getStreetName(),next.getRef(),next.getDestinationName());
      }
    }
  }
 else   if (settings.getApplicationMode() != ApplicationMode.DEFAULT && map.getMapViewTrackingUtilities().isMapLinkedToLocation()) {
    RouteDataObject rt=locationProvider.getLastKnownRouteSegment();
    if (rt != null) {
      text=RoutingHelper.formatStreetName(rt.getName(),rt.getRef(),rt.getDestinationName());
    }
  }
  if (updateWaypoint()) {
    updateVisibility(addressText,false);
  }
 else   if (text == null) {
    updateVisibility(false);
  }
 else {
    updateVisibility(true);
    updateVisibility(addressText,true);
    boolean update=turnDrawable.setTurnType(type[0]);
    if (update) {
      if (type[0] != null) {
        addressText.setCompoundDrawables(turnDrawable,null,null,null);
      }
 else {
        addressText.setCompoundDrawables(null,null,null,null);
      }
    }
    if (!text.equals(addressText.getText().toString())) {
      if (!text.equals("")) {
        topBar.setContentDescription(text);
      }
 else {
        topBar.setContentDescription(map.getResources().getString(R.string.map_widget_top_text));
      }
      addressText.setText(text);
      return true;
    }
  }
  return false;
}
