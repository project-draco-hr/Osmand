{
  final List<GpxDisplayGroup> groups=filterGroups(GpxDisplayItemType.TRACK_SEGMENT);
  View view=getMyActivity().getLayoutInflater().inflate(R.layout.selected_track_edit,null);
  final TIntArrayList list=new TIntArrayList();
  final Spinner colorSpinner=(Spinner)view.findViewById(R.id.ColorSpinner);
  ColorDialogs.setupColorSpinner(getActivity(),getGpx().getColor(0),colorSpinner,list);
  final Spinner sp=(Spinner)view.findViewById(R.id.Spinner);
  AlertDialog.Builder bld=new AlertDialog.Builder(getMyActivity());
  final List<Double> distanceSplit=new ArrayList<Double>();
  final TIntArrayList timeSplit=new TIntArrayList();
  if (groups.size() == 0) {
    sp.setVisibility(View.GONE);
    view.findViewById(R.id.GpxSpinnerRow).setVisibility(View.GONE);
  }
 else {
    sp.setVisibility(View.VISIBLE);
    int[] checkedItem=new int[]{!groups.get(0).isSplitDistance() && !groups.get(0).isSplitTime() ? 0 : -1};
    List<String> options=new ArrayList<String>();
    options.add(app.getString(R.string.none));
    distanceSplit.add(-1d);
    timeSplit.add(-1);
    addOptionSplit(30,true,options,distanceSplit,timeSplit,checkedItem,groups);
    addOptionSplit(60,true,options,distanceSplit,timeSplit,checkedItem,groups);
    addOptionSplit(150,true,options,distanceSplit,timeSplit,checkedItem,groups);
    addOptionSplit(300,true,options,distanceSplit,timeSplit,checkedItem,groups);
    addOptionSplit(600,true,options,distanceSplit,timeSplit,checkedItem,groups);
    addOptionSplit(1500,true,options,distanceSplit,timeSplit,checkedItem,groups);
    addOptionSplit(3000,true,options,distanceSplit,timeSplit,checkedItem,groups);
    addOptionSplit(8000,true,options,distanceSplit,timeSplit,checkedItem,groups);
    addOptionSplit(15,false,options,distanceSplit,timeSplit,checkedItem,groups);
    addOptionSplit(30,false,options,distanceSplit,timeSplit,checkedItem,groups);
    addOptionSplit(60,false,options,distanceSplit,timeSplit,checkedItem,groups);
    addOptionSplit(120,false,options,distanceSplit,timeSplit,checkedItem,groups);
    addOptionSplit(150,false,options,distanceSplit,timeSplit,checkedItem,groups);
    addOptionSplit(300,false,options,distanceSplit,timeSplit,checkedItem,groups);
    addOptionSplit(600,false,options,distanceSplit,timeSplit,checkedItem,groups);
    addOptionSplit(900,false,options,distanceSplit,timeSplit,checkedItem,groups);
    ArrayAdapter<String> adapter=new ArrayAdapter<String>(getMyActivity(),android.R.layout.simple_spinner_item,options);
    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
    sp.setAdapter(adapter);
    if (checkedItem[0] > 0) {
      sp.setSelection(checkedItem[0]);
    }
  }
  final CheckBox vis=(CheckBox)view.findViewById(R.id.Visibility);
  vis.setChecked(app.getSelectedGpxHelper().getSelectedFileByPath(getGpx().path) != null);
  bld.setView(view);
  bld.setNegativeButton(R.string.shared_string_cancel,null);
  bld.setPositiveButton(R.string.shared_string_ok,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      SelectedGpxFile sf=app.getSelectedGpxHelper().selectGpxFile(getGpx(),vis.isChecked(),false);
      int clr=list.get(colorSpinner.getSelectedItemPosition());
      if (!vis.isChecked() && clr != 0 && sf.getModifiableGpxFile() != null) {
        sf.getModifiableGpxFile().setColor(clr);
        sf.processPoints();
      }
      if (groups.size() > 0) {
        updateSplit(groups,distanceSplit,timeSplit,sp.getSelectedItemPosition(),vis.isChecked() ? sf : null);
      }
      if (vis.isChecked() && sf.getGpxFile() != null) {
        if (groups.size() > 0 && groups.get(0).getModifiableList().size() > 0) {
          GpxDisplayItem item=groups.get(0).getModifiableList().get(0);
          app.getSettings().setMapLocationToShow(item.locationStart.lat,item.locationStart.lon,15,new PointDescription(PointDescription.POINT_TYPE_GPX_ITEM,item.group.getGpxName()),false,item);
        }
 else {
          WptPt wpt=sf.getGpxFile().findPointToShow();
          if (wpt != null) {
            app.getSettings().setMapLocationToShow(wpt.getLatitude(),wpt.getLongitude(),15,new PointDescription(PointDescription.POINT_TYPE_WPT,wpt.name),false,wpt);
          }
        }
        MapActivity.launchMapActivityMoveToTop(activity);
      }
    }
  }
);
  bld.show();
}
