{
  if (n == null) {
    AccessibleToast.makeText(activity,activity.getResources().getString(R.string.poi_error_poi_not_found),Toast.LENGTH_LONG).show();
    return;
  }
  AlertDialog.Builder builder=new AlertDialog.Builder(activity);
  builder.setTitle(R.string.poi_remove_title);
  final EditText comment;
  final CheckBox closeChangesetCheckBox;
  final boolean isLocalEdit=openstreetmapUtil instanceof OpenstreetmapLocalUtil;
  if (isLocalEdit) {
    closeChangesetCheckBox=null;
    comment=null;
  }
 else {
    LinearLayout ll=new LinearLayout(activity);
    ll.setPadding(16,2,16,0);
    ll.setOrientation(LinearLayout.VERTICAL);
    closeChangesetCheckBox=new CheckBox(activity);
    closeChangesetCheckBox.setText(R.string.close_changeset);
    ll.addView(closeChangesetCheckBox);
    comment=new EditText(activity);
    comment.setText(R.string.poi_remove_title);
    ll.addView(comment);
    builder.setView(ll);
  }
  builder.setNegativeButton(R.string.shared_string_cancel,null);
  builder.setPositiveButton(R.string.shared_string_delete,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      String c=comment == null ? null : comment.getText().toString();
      boolean closeChangeSet=closeChangesetCheckBox != null && closeChangesetCheckBox.isChecked();
      commitNode(OsmPoint.Action.DELETE,n,openstreetmapUtil.getEntityInfo(),c,closeChangeSet,new Runnable(){
        @Override public void run(){
          if (isLocalEdit) {
            AccessibleToast.makeText(activity,R.string.osm_changes_added_to_local_edits,Toast.LENGTH_LONG).show();
          }
 else {
            AccessibleToast.makeText(activity,R.string.poi_remove_success,Toast.LENGTH_LONG).show();
          }
          if (activity instanceof MapActivity) {
            ((MapActivity)activity).getMapView().refreshMap(true);
          }
        }
      }
,activity,openstreetmapUtil);
    }
  }
);
  builder.create().show();
}
