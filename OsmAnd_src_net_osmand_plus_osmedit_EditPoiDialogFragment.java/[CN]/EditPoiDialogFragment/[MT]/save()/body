{
  Node original=editPoiData.getEntity();
  final boolean offlineEdit=mOpenstreetmapUtil instanceof OpenstreetmapLocalUtil;
  Node node=new Node(original.getLatitude(),original.getLongitude(),original.getId());
  OsmPoint.Action action=node.getId() == -1 ? OsmPoint.Action.CREATE : OsmPoint.Action.MODIFY;
  for (  Map.Entry<String,String> tag : editPoiData.getTagValues().entrySet()) {
    if (tag.getKey().equals(EditPoiData.POI_TYPE_TAG)) {
      final PoiType poiType=editPoiData.getAllTranslatedSubTypes().get(tag.getValue().trim().toLowerCase());
      if (poiType != null) {
        node.putTag(poiType.getOsmTag(),poiType.getOsmValue());
        if (poiType.getOsmTag2() != null) {
          node.putTag(poiType.getOsmTag2(),poiType.getOsmValue2());
        }
      }
 else       if (!Algorithms.isEmpty(tag.getValue())) {
        node.putTag(editPoiData.getPoiCategory().getDefaultTag(),tag.getValue());
      }
      if (offlineEdit && !Algorithms.isEmpty(tag.getValue())) {
        node.putTag(tag.getKey(),tag.getValue());
      }
    }
 else     if (!Algorithms.isEmpty(tag.getKey()) && !Algorithms.isEmpty(tag.getValue())) {
      node.putTag(tag.getKey(),tag.getValue());
    }
  }
  commitNode(action,node,mOpenstreetmapUtil.getEntityInfo(node.getId()),"",false,new CallbackWithObject<Node>(){
    @Override public boolean processResult(    Node result){
      if (result != null) {
        OsmEditingPlugin plugin=OsmandPlugin.getPlugin(OsmEditingPlugin.class);
        if (plugin != null && offlineEdit) {
          List<OpenstreetmapPoint> points=plugin.getDBPOI().getOpenstreetmapPoints();
          if (getActivity() instanceof MapActivity && points.size() > 0) {
            OsmPoint point=points.get(points.size() - 1);
            MapActivity mapActivity=(MapActivity)getActivity();
            mapActivity.getContextMenu().showOrUpdate(new LatLon(point.getLatitude(),point.getLongitude()),plugin.getOsmEditsLayer(mapActivity).getObjectName(point),point);
          }
        }
        if (getActivity() instanceof MapActivity) {
          ((MapActivity)getActivity()).getMapView().refreshMap(true);
        }
        dismiss();
      }
 else {
        OsmEditingPlugin plugin=OsmandPlugin.getPlugin(OsmEditingPlugin.class);
        mOpenstreetmapUtil=plugin.getPoiModificationLocalUtil();
        Button saveButton=(Button)view.findViewById(R.id.saveButton);
        saveButton.setText(mOpenstreetmapUtil instanceof OpenstreetmapRemoteUtil ? R.string.shared_string_upload : R.string.shared_string_save);
      }
      return false;
    }
  }
,getActivity(),mOpenstreetmapUtil);
}
