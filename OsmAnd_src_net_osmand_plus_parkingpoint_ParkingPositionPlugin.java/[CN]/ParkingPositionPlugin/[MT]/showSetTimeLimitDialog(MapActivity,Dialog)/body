{
  final View setTimeParking=mapActivity.getLayoutInflater().inflate(R.layout.parking_set_time_limit,null);
  Builder setTime=new AlertDialog.Builder(mapActivity);
  setTime.setView(setTimeParking);
  setTime.setTitle(mapActivity.getString(R.string.osmand_parking_time_limit_title));
  setTime.setNegativeButton(R.string.default_buttons_cancel,null);
  final TimePicker timePicker=(TimePicker)setTimeParking.findViewById(R.id.parking_time_picker);
  timePicker.setOnTimeChangedListener(new TimePicker.OnTimeChangedListener(){
    private static final int TIME_PICKER_INTERVAL=5;
    private boolean mIgnoreEvent=false;
    @Override public void onTimeChanged(    TimePicker timePicker,    int hourOfDay,    int minute){
      if (mIgnoreEvent) {
        return;
      }
      if (minute % TIME_PICKER_INTERVAL != 0) {
        int minuteFloor=minute - (minute % TIME_PICKER_INTERVAL);
        minute=minuteFloor + (minute == minuteFloor + 1 ? TIME_PICKER_INTERVAL : 0);
        if (minute == 60) {
          minute=0;
        }
        mIgnoreEvent=true;
        timePicker.setCurrentMinute(minute);
        mIgnoreEvent=false;
      }
    }
  }
);
  timePicker.setIs24HourView(true);
  timePicker.setCurrentHour(0);
  timePicker.setCurrentMinute(0);
  setTime.setPositiveButton(R.string.default_buttons_ok,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      choose.dismiss();
      Calendar cal=Calendar.getInstance();
      boolean is24HourFormat=DateFormat.is24HourFormat(app);
      int hour=cal.get(is24HourFormat ? Calendar.HOUR_OF_DAY : Calendar.HOUR);
      int minute=cal.get(Calendar.MINUTE);
      cal.set(is24HourFormat ? Calendar.HOUR_OF_DAY : Calendar.HOUR,hour + timePicker.getCurrentHour());
      cal.set(Calendar.MINUTE,minute + timePicker.getCurrentMinute());
      settings.setParkingTime(cal.getTimeInMillis());
      CheckBox addCalendarEvent=(CheckBox)setTimeParking.findViewById(R.id.check_event_in_calendar);
      if (addCalendarEvent.isChecked()) {
        addCalendarEvent(setTimeParking);
        settings.addOrRemoveParkingEvent(true);
      }
 else {
        settings.addOrRemoveParkingEvent(false);
      }
    }
  }
);
  setTime.create();
  setTime.show();
}
