{
  boolean isParkingSelected=false;
  LatLon parkingPosition=settings.getParkingPosition();
  if (selectedObj instanceof LatLon && parkingLayer != null && parkingPosition != null) {
    LatLon point=(LatLon)selectedObj;
    if ((point.getLatitude() == parkingPosition.getLatitude()) && (point.getLongitude() == parkingPosition.getLongitude()))     isParkingSelected=true;
  }
  if (isParkingSelected) {
    OnContextMenuClick removeListener=new OnContextMenuClick(){
      @Override public void onContextMenuClick(      int resId,      int pos,      boolean isChecked,      DialogInterface dialog){
        if ((resId == R.string.context_menu_item_delete_parking_point)) {
          showDeleteDialog(mapActivity);
        }
      }
    }
;
    if (parkingPosition != null)     adapter.registerItem(R.string.context_menu_item_delete_parking_point,R.drawable.poi_parking_del_ctx_menu,removeListener,0);
  }
  OnContextMenuClick addListener=new OnContextMenuClick(){
    @Override public void onContextMenuClick(    int resId,    int pos,    boolean isChecked,    DialogInterface dialog){
      if (resId == R.string.context_menu_item_add_parking_point) {
        showAddParkingDialog(mapActivity,latitude,longitude);
      }
    }
  }
;
  adapter.registerItem(R.string.context_menu_item_add_parking_point,R.drawable.poi_parking_pos_ctx_menu,addListener,-1);
}
