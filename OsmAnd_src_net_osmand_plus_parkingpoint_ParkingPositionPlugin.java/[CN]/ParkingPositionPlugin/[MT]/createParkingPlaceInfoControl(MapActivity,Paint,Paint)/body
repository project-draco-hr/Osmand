{
  TextInfoWidget parkingPlaceControl=new TextInfoWidget(map,0,paintText,paintSubText){
    private float[] calculations=new float[1];
    private int cachedMeters=0;
    @Override public boolean updateInfo(){
      LatLon parkingPoint=parkingLayer.getParkingPoint();
      if (parkingPoint != null && !map.getRoutingHelper().isFollowingMode()) {
        OsmandMapTileView view=map.getMapView();
        int d=0;
        if (d == 0) {
          Location.distanceBetween(view.getLatitude(),view.getLongitude(),parkingPoint.getLatitude(),parkingPoint.getLongitude(),calculations);
          d=(int)calculations[0];
        }
        if (distChanged(cachedMeters,d)) {
          cachedMeters=d;
          if (cachedMeters <= 20) {
            cachedMeters=0;
            setText(null,null);
          }
 else {
            String ds=OsmAndFormatter.getFormattedDistance(cachedMeters,map.getMyApplication());
            int ls=ds.lastIndexOf(' ');
            if (ls == -1) {
              setText(ds,null);
            }
 else {
              setText(ds.substring(0,ls),ds.substring(ls + 1));
            }
          }
          return true;
        }
      }
 else       if (cachedMeters != 0) {
        cachedMeters=0;
        setText(null,null);
        return true;
      }
      return false;
    }
    /** 
 * Utility method.
 * @param oldDist
 * @param dist
 * @return
 */
    private boolean distChanged(    int oldDist,    int dist){
      if (oldDist != 0 && Math.abs(oldDist - dist) < 30) {
        return false;
      }
      return true;
    }
  }
;
  parkingPlaceControl.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      OsmandMapTileView view=map.getMapView();
      AnimateDraggingMapThread thread=view.getAnimatedDraggingThread();
      LatLon parkingPoint=getParkingPosition();
      if (parkingPoint != null) {
        float fZoom=view.getFloatZoom() < 15 ? 15 : view.getFloatZoom();
        thread.startMoving(parkingPoint.getLatitude(),parkingPoint.getLongitude(),fZoom,true);
      }
    }
  }
);
  parkingPlaceControl.setText(null,null);
  parkingPlaceControl.setImageDrawable(map.getResources().getDrawable(R.drawable.widget_parking));
  return parkingPlaceControl;
}
