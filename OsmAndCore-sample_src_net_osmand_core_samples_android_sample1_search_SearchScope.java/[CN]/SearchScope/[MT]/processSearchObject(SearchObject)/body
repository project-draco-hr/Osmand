{
  boolean accept=true;
  float priority=0f;
  boolean sortByName=false;
switch (searchObject.getType()) {
case POI:
    accept=poiByNameCounter < resultLimitPoiByName;
  if (accept) {
    poiByNameCounter++;
    priority=getPriorityByDistance(10,((PoiSearchObject)searchObject).getDistance());
  }
break;
case CITY:
case VILLAGE:
case POSTCODE:
accept=cityByNameCounter < resultLimitCityByName;
if (accept) {
cityByNameCounter++;
float cityType=getCityType((StreetGroupSearchObject)searchObject);
priority=(getPriorityByDistance(cityPostcodeSelected ? 20f : 7f + cityType,((StreetGroupSearchObject)searchObject).getDistance()));
}
break;
case STREET:
accept=streetByNameCounter < resultLimitStreetByName;
if (accept) {
streetByNameCounter++;
StreetSearchObject streetSearchObject=(StreetSearchObject)searchObject;
Street street=streetSearchObject.getStreet();
if (!cityPostcodeSelected) {
priority=getPriorityByDistance(9f,streetSearchObject.getDistance());
}
 else {
boolean streetFromSelectedCity=false;
for (SearchToken st : objectTokens.values()) {
if (st.getSearchObject() instanceof StreetGroupSearchObject) {
StreetGroupSearchObject streetGroupSearchObject=(StreetGroupSearchObject)st.getSearchObject();
if (streetGroupSearchObject.getStreetGroup().getId().getId().equals(street.getStreetGroup().getId().getId())) {
streetFromSelectedCity=true;
break;
}
}
}
if (streetFromSelectedCity) {
priority=3f;
sortByName=true;
}
 else {
priority=getPriorityByDistance(9f,streetSearchObject.getDistance());
}
}
}
break;
}
if (accept) {
searchObject.setPriority(priority);
searchObject.setSortByName(sortByName);
}
return accept;
}
