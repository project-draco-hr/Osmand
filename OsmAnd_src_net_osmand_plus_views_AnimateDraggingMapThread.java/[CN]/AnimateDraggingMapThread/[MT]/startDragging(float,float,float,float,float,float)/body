{
  stopAnimatingSync();
  this.notifyListener=true;
  stopped=false;
  final float animationTime=DRAGGING_ANIMATION_TIME;
  Thread thread=new Thread(new Runnable(){
    @Override public void run(){
      currentThread=Thread.currentThread();
      float curX=endX;
      float curY=endY;
      DecelerateInterpolator interpolator=new DecelerateInterpolator(1);
      long timeMillis=SystemClock.uptimeMillis();
      float normalizedTime=0f;
      float prevNormalizedTime=0f;
      while (!stopped) {
        normalizedTime=(SystemClock.uptimeMillis() - timeMillis) / animationTime;
        if (normalizedTime >= 1f) {
          break;
        }
        float interpolation=interpolator.getInterpolation(normalizedTime);
        float newX=velocityX * (1 - interpolation) * (normalizedTime - prevNormalizedTime) + curX;
        float newY=velocityY * (1 - interpolation) * (normalizedTime - prevNormalizedTime) + curY;
        callback.dragTo(curX,curY,newX,newY,notifyListener);
        curX=newX;
        curY=newY;
        prevNormalizedTime=normalizedTime;
        try {
          Thread.sleep(DEFAULT_SLEEP_TO_REDRAW);
        }
 catch (        InterruptedException e) {
          stopped=true;
        }
      }
      try {
        pendingRotateAnimation();
      }
 catch (      InterruptedException e) {
      }
      currentThread=null;
    }
  }
,"Animatable dragging");
  thread.start();
}
