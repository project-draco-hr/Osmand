{
  CityComparator comp=new CityComparator(false);
  for (  CityType t : cities.keySet()) {
    Collections.sort(cities.get(t),comp);
    for (    City c : cities.get(t)) {
      c.doDataPreparation();
    }
  }
  for (  String s : routes.keySet()) {
    List<TransportRoute> trans=routes.get(s);
    Collections.sort(trans,new Comparator<TransportRoute>(){
      @Override public int compare(      TransportRoute o1,      TransportRoute o2){
        int i1=Algoritms.extractFirstIntegerNumber(o1.getRef());
        int i2=Algoritms.extractFirstIntegerNumber(o2.getRef());
        return i1 - i2;
      }
    }
);
  }
}
