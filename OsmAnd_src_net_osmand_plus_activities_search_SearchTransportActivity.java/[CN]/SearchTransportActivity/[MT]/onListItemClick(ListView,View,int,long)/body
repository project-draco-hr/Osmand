{
  final RouteInfoLocation item=((TransportStopAdapter)getListAdapter()).getItem(position);
  Builder builder=new AlertDialog.Builder(this);
  List<String> items=new ArrayList<String>();
  final List<TransportStop> stops=item.getDirection() ? item.getRoute().getForwardStops() : item.getRoute().getBackwardStops();
  LatLon locationToGo=getLocationToGo();
  LatLon locationToStart=getLocationToStart();
  builder.setTitle(getString(R.string.transport_stop_to_go_out) + "\n" + getInformation(item,stops,getCurrentRouteLocation(),true));
  int ind=0;
  for (  TransportStop st : stops) {
    StringBuilder n=new StringBuilder(50);
    n.append(ind++);
    if (st == item.getStop()) {
      n.append("!! ");
    }
 else {
      n.append(". ");
    }
    String name=st.getName(OsmandSettings.usingEnglishNames(settings));
    if (locationToGo != null) {
      n.append(name).append(" - [");
      n.append(OsmAndFormatter.getFormattedDistance((int)MapUtils.getDistance(locationToGo,st.getLocation()),SearchTransportActivity.this)).append("]");
    }
 else     if (locationToStart != null) {
      n.append("[").append(OsmAndFormatter.getFormattedDistance((int)MapUtils.getDistance(locationToStart,st.getLocation()),SearchTransportActivity.this)).append("] - ");
      n.append(name);
    }
 else {
      n.append(name);
    }
    items.add(n.toString());
  }
  builder.setItems(items.toArray(new String[items.size()]),new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      int i=which;
      if (i >= 0) {
        TransportStop stop=stops.get(i);
        showContextMenuOnStop(stop,item,i);
      }
    }
  }
);
  builder.show();
}
