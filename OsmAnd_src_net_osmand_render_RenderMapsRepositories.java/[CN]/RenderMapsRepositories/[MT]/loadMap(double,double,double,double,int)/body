{
  cBottomLatitude=bottomLatitude - (topLatitude - bottomLatitude) / 2;
  cTopLatitude=topLatitude + (topLatitude - bottomLatitude) / 2;
  cLeftLongitude=leftLongitude - (rightLongitude - leftLongitude) / 2;
  cRightLongitude=rightLongitude + (rightLongitude - leftLongitude) / 2;
  cZoom=zoom;
  log.info(String.format("BLat=%s, TLat=%s, LLong=%s, RLong=%s, zoom=%s",cBottomLatitude,cTopLatitude,cLeftLongitude,cRightLongitude,zoom));
  long now=System.currentTimeMillis();
  String query="SELECT id FROM " + IndexConstants.indexMapLocationsTable + " WHERE ? <  maxLat AND ? > minLat AND maxLon > ? AND minLon  < ?";
  Cursor result=db.rawQuery(query,new String[]{Double.toString(cBottomLatitude),Double.toString(cTopLatitude),Double.toString(cLeftLongitude),Double.toString(cRightLongitude)});
  List<Way> local=new LinkedList<Way>();
  try {
    int count=0;
    if (result.moveToFirst()) {
      do {
        long id=result.getLong(0);
        Way way=new Way(id);
        count++;
      }
 while (result.moveToNext());
      cWays=local;
    }
    log.info(String.format("Search has been done in %s ms. %s results were found.",System.currentTimeMillis() - now,count));
  }
  finally {
    result.close();
  }
}
