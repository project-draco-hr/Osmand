{
  final Context ctx=view.getContext();
  Builder dlg=new AlertDialog.Builder(view.getContext());
  dlg.setTitle(startText);
  LinearLayout ll=new LinearLayout(view.getContext());
  final TextView tv=new TextView(view.getContext());
  tv.setPadding(7,3,7,0);
  tv.setText(String.format(patternMsg,ctx.getString(R.string.int_continuosly)));
  SeekBar sp=new SeekBar(view.getContext());
  sp.setPadding(7,5,7,0);
  final int secondsLength=seconds.length;
  final int minutesLength=minutes.length;
  sp.setMax(secondsLength + minutesLength - 1);
  sp.setOnSeekBarChangeListener(new OnSeekBarChangeListener(){
    @Override public void onStopTrackingTouch(    SeekBar seekBar){
    }
    @Override public void onStartTrackingTouch(    SeekBar seekBar){
    }
    @Override public void onProgressChanged(    SeekBar seekBar,    int progress,    boolean fromUser){
      String s;
      if (progress == 0) {
        s=ctx.getString(R.string.int_continuosly);
      }
 else {
        if (progress < secondsLength) {
          s=seconds[progress] + ctx.getString(R.string.int_seconds);
          v.value=seconds[progress] * 1000;
        }
 else {
          s=minutes[progress - secondsLength] + ctx.getString(R.string.int_min);
          v.value=minutes[progress - secondsLength] * 60 * 1000;
        }
      }
      tv.setText(String.format(patternMsg,s));
    }
  }
);
  for (int i=0; i < secondsLength + minutesLength - 1; i++) {
    if (i < secondsLength) {
      if (v.value <= seconds[i] * 1000) {
        sp.setProgress(i);
        break;
      }
    }
 else {
      if (v.value <= minutes[i - secondsLength] * 1000 * 60) {
        sp.setProgress(i);
        break;
      }
    }
  }
  ll.setOrientation(LinearLayout.VERTICAL);
  ll.addView(tv);
  ll.addView(sp);
  dlg.setView(ll);
  dlg.setPositiveButton(R.string.default_buttons_ok,onclick);
  dlg.setNegativeButton(R.string.default_buttons_cancel,null);
  dlg.show();
}
