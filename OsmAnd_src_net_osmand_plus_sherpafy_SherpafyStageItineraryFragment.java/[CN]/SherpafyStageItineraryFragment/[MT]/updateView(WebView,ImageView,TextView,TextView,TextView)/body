{
  app.getResourceManager().getMapTileDownloader().addDownloaderCallback(this);
  osmandMapTileView.removeAllLayers();
  MapVectorLayer mapVectorLayer=new MapVectorLayer(null,true);
  MapTextLayer mapTextLayer=new MapTextLayer();
  mapTextLayer.setAlwaysVisible(true);
  osmandMapTileView.addLayer(mapTextLayer,5.95f);
  osmandMapTileView.addLayer(mapVectorLayer,0.5f);
  final GPXLayer gpxLayer=new GPXLayer();
  gpxLayer.setGivenGpx(stage.getGpx());
  osmandMapTileView.addLayer(gpxLayer,0.9f);
  osmandMapTileView.addLayer(new StageFavoritesLayer(app,stage),4.1f);
  osmandMapTileView.setMainLayer(mapVectorLayer);
  mapVectorLayer.setVisible(true);
  calculateLatLon(stage.getGpx());
  if (stage.getItineraryBitmap() != null && !HIDE_ITINERARY_IMG) {
    icon.setImageBitmap(stage.getItineraryBitmap());
  }
 else {
    icon.setVisibility(View.GONE);
  }
  additional.setVisibility(View.GONE);
  header.setVisibility(View.GONE);
  String ins="";
  if (stage.distance > 0) {
    ins+="<h4>" + app.getString(R.string.distance) + ": "+ OsmAndFormatter.getFormattedDistance((float)stage.distance,app)+ "<h4/>";
  }
  if (stage.duration > 0) {
    int min=stage.duration % 60;
    int h=stage.duration / 60;
    ins+="<h4>" + app.getString(R.string.duration) + ": "+ (h == 0 ? "" : h + " " + app.getString(R.string.int_hour)+ " ")+ (min == 0 ? "" : min + " " + app.getString(R.string.int_min))+ "<h4/>";
  }
  String content=HIDE_ITINERARY_IMG ? "" : stage.getItinerary();
  description.loadData("<html><body>" + ins + content+ "</body></html","text/html; charset=utf-8","utf-8");
  new AsyncTask<Void,Void,Void>(){
    private GPXFile gpx;
    @Override protected Void doInBackground(    Void... params){
      if (stage.gpxFile != null) {
        gpx=GPXUtilities.loadGPXFile(app,stage.gpxFile);
      }
      return null;
    }
    protected void onPostExecute(    Void result){
      gpxLayer.setGivenGpx(gpx);
      calculateLatLon(gpx);
      osmandMapTileView.refreshMap();
    }
  }
.execute((Void)null);
}
