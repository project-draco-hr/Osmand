{
  try {
    IndexFileList result=new IndexFileList();
    log.debug("Start loading list of index files");
    try {
      log.info("http://download.osmand.net/get_indexes?" + versionAsUrl);
      URL url=new URL("http://download.osmand.net/get_indexes?" + versionAsUrl);
      XmlPullParser parser=XmlPullParserFactory.newInstance().newPullParser();
      parser.setInput(url.openStream(),"UTF-8");
      int next;
      while ((next=parser.next()) != XmlPullParser.END_DOCUMENT) {
        if (next == XmlPullParser.START_TAG) {
          DownloadActivityType tp=getIndexType(parser.getName());
          if (tp != null) {
            String name=parser.getAttributeValue(null,"name");
            String size=parser.getAttributeValue(null,"size");
            String date=parser.getAttributeValue(null,"date");
            String description=parser.getAttributeValue(null,"description");
            String parts=parser.getAttributeValue(null,"parts");
            IndexItem it=new IndexItem(name,description,date,size,parts);
            it.setType(tp);
            result.add(it);
          }
 else           if ("osmand_regions".equals(parser.getName())) {
            String mapversion=parser.getAttributeValue(null,"mapversion");
            result.setMapVersion(mapversion);
          }
        }
      }
      result.sort();
    }
 catch (    IOException e) {
      log.error("Error while loading indexes from repository",e);
      return null;
    }
catch (    XmlPullParserException e) {
      log.error("Error while loading indexes from repository",e);
      return null;
    }
    if (result.isAcceptable()) {
      return result;
    }
 else {
      return null;
    }
  }
 catch (  RuntimeException e) {
    log.error("Error while loading indexes from repository",e);
    return null;
  }
}
