{
  try {
    IndexFileList result=new IndexFileList();
    log.debug("Start loading list of index files");
    try {
      String strUrl=ctx.getAppCustomization().getIndexesUrl();
      OsmandSettings settings=ctx.getSettings();
      Long nd=settings.FIRST_INSTALLED_DATE.get();
      if (nd > 0) {
        strUrl+="&nd=" + ((System.currentTimeMillis() - nd) / (1000l * 24l * 60l* 60l));
      }
      strUrl+="&ns=" + settings.NUMBER_OF_STARTS.get();
      try {
        strUrl+="&aid=" + Secure.getString(ctx.getContentResolver(),Secure.ANDROID_ID);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
      log.info(strUrl);
      XmlPullParser parser=XmlPullParserFactory.newInstance().newPullParser();
      URLConnection connection=NetworkUtils.getHttpURLConnection(strUrl);
      InputStream in=connection.getInputStream();
      GZIPInputStream gzin=new GZIPInputStream(in);
      parser.setInput(gzin,"UTF-8");
      int next;
      while ((next=parser.next()) != XmlPullParser.END_DOCUMENT) {
        if (next == XmlPullParser.START_TAG) {
          DownloadActivityType tp=DownloadActivityType.getIndexType(parser.getAttributeValue(null,"type"));
          if (tp != null) {
            IndexItem it=tp.parseIndexItem(ctx,parser);
            if (it != null && !it.getFileName().contains("_wiki")) {
              result.add(it);
            }
          }
 else           if ("osmand_regions".equals(parser.getName())) {
            String mapversion=parser.getAttributeValue(null,"mapversion");
            result.setMapVersion(mapversion);
          }
        }
      }
      result.sort();
      gzin.close();
      in.close();
    }
 catch (    IOException e) {
      log.error("Error while loading indexes from repository",e);
      return null;
    }
catch (    XmlPullParserException e) {
      log.error("Error while loading indexes from repository",e);
      return null;
    }
    if (result.isAcceptable()) {
      return result;
    }
 else {
      return null;
    }
  }
 catch (  RuntimeException e) {
    log.error("Error while loading indexes from repository",e);
    return null;
  }
}
