{
  SharedPreferences prefs=getSharedPreferences(OsmandSettings.SHARED_PREFERENCES_NAME,Context.MODE_WORLD_READABLE);
  Editor edit=prefs.edit();
  if (preference == applicationMode) {
    edit.putString(OsmandSettings.APPLICATION_MODE,(String)newValue);
    setAppMode(ApplicationMode.valueOf(newValue.toString()),edit);
    edit.commit();
    updateAllSettings();
  }
 else   if (preference == autoZoom) {
    edit.putBoolean(OsmandSettings.AUTO_ZOOM_MAP,(Boolean)newValue);
    edit.commit();
  }
 else   if (preference == showPoiOnMap) {
    edit.putBoolean(OsmandSettings.SHOW_POI_OVER_MAP,(Boolean)newValue);
    edit.commit();
  }
 else   if (preference == useInternetToCalculateRoute) {
    edit.putBoolean(OsmandSettings.USE_INTERNET_TO_CALCULATE_ROUTE,(Boolean)newValue);
    edit.commit();
  }
 else   if (preference == useInternetToDownloadTiles) {
    edit.putBoolean(OsmandSettings.USE_INTERNET_TO_DOWNLOAD_TILES,(Boolean)newValue);
    edit.commit();
  }
 else   if (preference == rotateMapToBearing) {
    edit.putBoolean(OsmandSettings.ROTATE_MAP_TO_BEARING,(Boolean)newValue);
    edit.commit();
  }
 else   if (preference == useEnglishNames) {
    edit.putBoolean(OsmandSettings.USE_ENGLISH_NAMES,(Boolean)newValue);
    edit.commit();
  }
 else   if (preference == saveTrackToGpx) {
    edit.putBoolean(OsmandSettings.SAVE_TRACK_TO_GPX,(Boolean)newValue);
    edit.commit();
  }
 else   if (preference == saveTrackInterval) {
    edit.putInt(OsmandSettings.SAVE_TRACK_INTERVAL,Integer.parseInt(newValue.toString()));
    edit.commit();
  }
 else   if (preference == userPassword) {
    edit.putString(OsmandSettings.USER_PASSWORD,(String)newValue);
    edit.commit();
  }
 else   if (preference == userName) {
    edit.putString(OsmandSettings.USER_NAME,(String)newValue);
    edit.commit();
  }
 else   if (preference == showViewAngle) {
    edit.putBoolean(OsmandSettings.SHOW_VIEW_ANGLE,(Boolean)newValue);
    edit.commit();
  }
 else   if (preference == showOsmBugs) {
    edit.putBoolean(OsmandSettings.SHOW_OSM_BUGS,(Boolean)newValue);
    edit.commit();
  }
 else   if (preference == positionOnMap) {
    edit.putInt(OsmandSettings.POSITION_ON_MAP,positionOnMap.findIndexOfValue((String)newValue));
    edit.commit();
  }
 else   if (preference == tileSourcePreference) {
    edit.putString(OsmandSettings.MAP_TILE_SOURCES,(String)newValue);
    edit.commit();
    String summary=tileSourcePreference.getSummary().toString();
    if (summary.lastIndexOf(':') != -1) {
      summary=summary.substring(0,summary.lastIndexOf(':') + 1);
    }
    summary+=" " + OsmandSettings.getMapTileSourceName(this);
    tileSourcePreference.setSummary(summary);
  }
  return true;
}
