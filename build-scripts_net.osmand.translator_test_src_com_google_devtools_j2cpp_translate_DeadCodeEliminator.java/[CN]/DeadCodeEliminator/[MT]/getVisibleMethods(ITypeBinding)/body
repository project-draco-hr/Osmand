{
  List<IMethodBinding> methods=Lists.newArrayList();
  String clazz=Types.getSignature(type);
  for (  IMethodBinding method : type.getDeclaredMethods()) {
    int modifiers=method.getModifiers();
    if (!deadCodeMap.isDeadMethod(clazz,getProGuardName(method),Types.getSignature(method)) && !Modifier.isPrivate(modifiers) && !Modifier.isStatic(modifiers)) {
      methods.add(method);
    }
  }
  List<IMethodBinding> inherited=Lists.newArrayList();
  if (type.getSuperclass() != null) {
    collectVisibleMethods(type.getSuperclass(),inherited,methods);
  }
  for (  ITypeBinding intrface : type.getInterfaces()) {
    collectVisibleMethods(intrface,inherited,methods);
  }
  methods.addAll(inherited);
  return methods;
}
