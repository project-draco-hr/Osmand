{
  super(context,attrs,defStyle);
  TintTypedArray a=TintTypedArray.obtainStyledAttributes(context,attrs,R.styleable.Spinner,defStyle,0);
  if (a.hasValue(R.styleable.Spinner_android_background)) {
    setBackgroundDrawable(a.getDrawable(R.styleable.Spinner_android_background));
  }
  if (mode == MODE_THEME) {
    mode=a.getInt(R.styleable.Spinner_spinnerMode,MODE_DIALOG);
  }
switch (mode) {
case MODE_DIALOG:
{
      mPopup=new DialogPopup();
      break;
    }
case MODE_DROPDOWN:
{
    final DropdownPopup popup=new DropdownPopup(context,attrs,defStyle);
    mDropDownWidth=a.getLayoutDimension(R.styleable.Spinner_android_dropDownWidth,ViewGroup.LayoutParams.WRAP_CONTENT);
    popup.setBackgroundDrawable(a.getDrawable(R.styleable.Spinner_android_popupBackground));
    mPopup=popup;
    mForwardingListener=new ListPopupWindow.ForwardingListener(this){
      @Override public ListPopupWindow getPopup(){
        return popup;
      }
      @Override public boolean onForwardingStarted(){
        if (!mPopup.isShowing()) {
          mPopup.show();
        }
        return true;
      }
    }
;
    break;
  }
}
mGravity=a.getInt(R.styleable.Spinner_android_gravity,Gravity.CENTER);
mPopup.setPromptText(a.getString(R.styleable.Spinner_prompt));
mDisableChildrenWhenDisabled=a.getBoolean(R.styleable.Spinner_disableChildrenWhenDisabled,false);
a.recycle();
if (mTempAdapter != null) {
mPopup.setAdapter(mTempAdapter);
mTempAdapter=null;
}
mTintManager=a.getTintManager();
}
