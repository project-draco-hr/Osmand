{
  if (mInChangeMarkerPositionMode) {
    return true;
  }
  if (pressedContextMarker(tileBox,point.x,point.y)) {
    hideVisibleMenues();
    menu.show();
    return true;
  }
  if (selectOnMap != null) {
    LatLon latlon=tileBox.getLatLonFromPixel(point.x,point.y);
    CallbackWithObject<LatLon> cb=selectOnMap;
    cb.processResult(latlon);
    menu.init(latlon,null,null);
    selectOnMap=null;
    return true;
  }
  if (!disableSingleTap()) {
    boolean res=showContextMenu(point,tileBox,false);
    if (res) {
      return true;
    }
 else {
      NativeOsmandLibrary nativeLib=NativeOsmandLibrary.getLoadedLibrary();
      if (nativeLib != null) {
        MapRenderRepositories maps=activity.getMyApplication().getResourceManager().getRenderer();
        RenderingContext rc=maps.getVisibleRenderingContext();
        RenderedObject[] renderedObjects=null;
        if (rc.zoom == tileBox.getZoom()) {
          double lat=MapUtils.get31LatitudeY((int)(rc.topY * rc.tileDivisor));
          double lon=MapUtils.get31LongitudeX((int)(rc.leftX * rc.tileDivisor));
          float x=tileBox.getPixXFromLatLon(lat,lon);
          float y=tileBox.getPixYFromLatLon(lat,lon);
          renderedObjects=nativeLib.searchRenderedObjectsFromContext(rc,(int)(point.x - x),(int)(point.y - y));
        }
        if (renderedObjects != null) {
          Map<Object,IContextMenuProvider> selectedObjects=new HashMap<>();
          IContextMenuProvider poiMenuProvider=activity.getMapLayers().getPoiMapLayer();
          IContextMenuProvider transportStopMenuProvider=activity.getMapLayers().getTransportStopsLayer();
          Log.e("111","found " + renderedObjects.length + " object(s) at x="+ point.x+ " y="+ point.y);
          LatLon latLon=null;
          for (          RenderedObject renderedObject : renderedObjects) {
            Log.e("111","++++ object=" + renderedObject.getName());
            for (            Entry<String,String> entry : renderedObject.getTags().entrySet()) {
              Log.e("111","tag=" + entry.getKey() + " value="+ entry.getValue());
            }
            if (renderedObject.getX() != null && renderedObject.getX().size() == 1 && renderedObject.getY() != null && renderedObject.getY().size() == 1) {
              latLon=new LatLon(MapUtils.get31LatitudeY(renderedObject.getY().get(0)),MapUtils.get31LongitudeX(renderedObject.getX().get(0)));
            }
 else {
              latLon=tileBox.getLatLonFromPixel(point.x,point.y);
            }
            if (renderedObject.getId() != null) {
              TransportStop transportStop=findTransportStop(renderedObject.getId() >> 6,latLon.getLatitude(),latLon.getLongitude());
              if (transportStop != null) {
                selectedObjects.put(transportStop,transportStopMenuProvider);
                continue;
              }
              Amenity amenity=findAmenity(renderedObject.getId() >> 6,latLon.getLatitude(),latLon.getLongitude());
              if (amenity != null) {
                selectedObjects.put(amenity,poiMenuProvider);
                continue;
              }
              if (renderedObject.getX() != null && renderedObject.getX().size() > 1 && renderedObject.getY() != null && renderedObject.getY().size() > 1) {
                PointF[] points=new PointF[renderedObject.getX().size()];
                for (int i=0; i < points.length; i++) {
                  points[i]=new PointF(renderedObject.getX().get(i),renderedObject.getY().get(i));
                }
                PointF center=AndroidUtils.centroidForPoly(points);
                latLon=new LatLon(MapUtils.get31LatitudeY((int)center.y),MapUtils.get31LongitudeX((int)center.x));
              }
              selectedObjects.put(renderedObject,null);
            }
            Log.e("111","------------------");
          }
          if (selectedObjects.size() > 0 && latLon != null) {
            showContextMenu(latLon,selectedObjects);
            return true;
          }
        }
 else {
          Log.e("111","objects not found at x=" + point.x + " y="+ point.y);
        }
      }
    }
  }
  hideVisibleMenues();
  menu.onSingleTapOnMap();
  return false;
}
