{
  if (!mInChangeMarkerPositionMode) {
    throw new IllegalStateException("Not in change marker position mode");
  }
  RotatedTileBox tileBox=activity.getMapView().getCurrentRotatedTileBox();
  PointF newMarkerPosition=getMoveableCenterPoint(tileBox);
  final LatLon ll=tileBox.getLatLonFromPixel(newMarkerPosition.x,newMarkerPosition.y);
  applyingMarkerLatLon=ll;
  Object obj=getMoveableObject();
  cancelApplyingNewMarkerPosition=false;
  mMoveMarkerBottomSheetHelper.enterApplyPositionMode();
  applyMovedObject(obj,ll,new ApplyMovedObjectCallback(){
    @Override public void onApplyMovedObject(    boolean success,    @Nullable Object newObject){
      mMoveMarkerBottomSheetHelper.exitApplyPositionMode();
      if (success && !cancelApplyingNewMarkerPosition) {
        mMoveMarkerBottomSheetHelper.hide();
        quitMovingMarker();
        PointDescription pointDescription=null;
        if (selectedObjectContextMenuProvider != null) {
          pointDescription=selectedObjectContextMenuProvider.getObjectName(newObject);
        }
        menu.show(ll,pointDescription,newObject);
        view.refreshMap();
      }
      applyingMarkerLatLon=null;
    }
    @Override public boolean isCancelled(){
      return cancelApplyingNewMarkerPosition;
    }
  }
);
}
