{
  PropertyManager propertyManager=new PropertyManager(PropertyManager.CONTEXT_WRITER);
  XMLStreamWriter streamWriter=new XMLStreamWriterImpl(output,propertyManager);
  List<Node> nodes=new ArrayList<Node>();
  List<Way> ways=new ArrayList<Way>();
  List<Relation> relations=new ArrayList<Relation>();
  if (interestedObjects == null) {
    interestedObjects=entities.keySet();
  }
  Stack<Long> toResolve=new Stack<Long>();
  toResolve.addAll(interestedObjects);
  while (!toResolve.isEmpty()) {
    Long l=toResolve.pop();
    if (entities.get(l) instanceof Node) {
      nodes.add((Node)entities.get(l));
    }
 else     if (entities.get(l) instanceof Way) {
      ways.add((Way)entities.get(l));
      toResolve.addAll(((Way)entities.get(l)).getNodeIds());
    }
 else     if (entities.get(l) instanceof Relation) {
      relations.add((Relation)entities.get(l));
      toResolve.addAll(((Relation)entities.get(l)).getMemberIds());
    }
  }
  streamWriter.writeStartDocument();
  writeStartElement(streamWriter,ELEM_OSM,"");
  streamWriter.writeAttribute(ATTR_VERSION,"0.6");
  for (  Node n : nodes) {
    writeStartElement(streamWriter,ELEM_NODE,INDENT);
    streamWriter.writeAttribute(ATTR_LAT,n.getLatitude() + "");
    streamWriter.writeAttribute(ATTR_LON,n.getLongitude() + "");
    streamWriter.writeAttribute(ATTR_ID,n.getId() + "");
    writeTags(streamWriter,n);
    streamWriter.writeEndElement();
  }
  for (  Way w : ways) {
    writeStartElement(streamWriter,ELEM_WAY,INDENT);
    streamWriter.writeAttribute(ATTR_ID,w.getId() + "");
    for (    Long r : w.getNodeIds()) {
      writeStartElement(streamWriter,ELEM_ND,INDENT2);
      streamWriter.writeAttribute(ATTR_REF,r + "");
      streamWriter.writeEndElement();
    }
    writeTags(streamWriter,w);
    streamWriter.writeEndElement();
  }
  for (  Relation r : relations) {
    writeStartElement(streamWriter,ELEM_RELATION,INDENT);
    streamWriter.writeAttribute(ATTR_ID,r.getId() + "");
    for (    Entry<Long,String> e : r.getMembersMap().entrySet()) {
      writeStartElement(streamWriter,ELEM_MEMBER,INDENT2);
      streamWriter.writeAttribute(ATTR_REF,e.getKey() + "");
      String s=e.getValue();
      if (s == null) {
        s="";
      }
      streamWriter.writeAttribute(ATTR_ROLE,s);
      streamWriter.writeAttribute(ATTR_TYPE,getEntityType(e.getKey()));
      streamWriter.writeEndElement();
    }
    writeTags(streamWriter,r);
    streamWriter.writeEndElement();
  }
  streamWriter.writeEndElement();
  streamWriter.writeEndDocument();
  streamWriter.flush();
}
