{
  boolean light=((OsmandApplication)getApplication()).getSettings().isLightActionBar();
  Menu menu=onCreate;
  if (getActivity() instanceof SearchActivity) {
    menu=((SearchActivity)getActivity()).getClearToolbar(true).getMenu();
  }
  if (getActivity() instanceof SearchAddressActivity) {
    MenuItem menuItem=menu.add(0,SELECT_POINT,0,"");
    MenuItemCompat.setShowAsAction(menuItem,MenuItemCompat.SHOW_AS_ACTION_ALWAYS);
    menuItem=menuItem.setIcon(light ? R.drawable.ic_action_ok_light : R.drawable.ic_action_ok_dark);
    menuItem.setOnMenuItemClickListener(new OnMenuItemClickListener(){
      @Override public boolean onMenuItemClick(      MenuItem item){
        select(SELECT_POINT);
        return true;
      }
    }
);
  }
 else {
    MenuItem menuItem=menu.add(0,NAVIGATE_TO,0,R.string.context_menu_item_directions_to);
    MenuItemCompat.setShowAsAction(menuItem,MenuItemCompat.SHOW_AS_ACTION_ALWAYS | MenuItemCompat.SHOW_AS_ACTION_WITH_TEXT);
    menuItem=menuItem.setIcon(light ? R.drawable.ic_action_gdirections_light : R.drawable.ic_action_gdirections_dark);
    menuItem.setOnMenuItemClickListener(new OnMenuItemClickListener(){
      @Override public boolean onMenuItemClick(      MenuItem item){
        select(NAVIGATE_TO);
        return true;
      }
    }
);
    TargetPointsHelper targets=((OsmandApplication)getApplication()).getTargetPointsHelper();
    if (targets.getPointToNavigate() != null) {
      menuItem=menu.add(0,ADD_WAYPOINT,0,R.string.context_menu_item_intermediate_point);
      MenuItemCompat.setShowAsAction(menuItem,MenuItemCompat.SHOW_AS_ACTION_ALWAYS | MenuItemCompat.SHOW_AS_ACTION_WITH_TEXT);
      menuItem=menuItem.setIcon(light ? R.drawable.ic_action_flage_light : R.drawable.ic_action_flage_dark);
    }
 else {
      menuItem=menu.add(0,ADD_WAYPOINT,0,R.string.context_menu_item_destination_point);
      MenuItemCompat.setShowAsAction(menuItem,MenuItemCompat.SHOW_AS_ACTION_ALWAYS | MenuItemCompat.SHOW_AS_ACTION_WITH_TEXT);
      menuItem=menuItem.setIcon(light ? R.drawable.ic_action_flag_light : R.drawable.ic_action_flag_dark);
    }
    menuItem.setOnMenuItemClickListener(new OnMenuItemClickListener(){
      @Override public boolean onMenuItemClick(      MenuItem item){
        select(ADD_WAYPOINT);
        return true;
      }
    }
);
    menuItem=menu.add(0,SHOW_ON_MAP,0,R.string.search_shown_on_map);
    MenuItemCompat.setShowAsAction(menuItem,MenuItemCompat.SHOW_AS_ACTION_ALWAYS | MenuItemCompat.SHOW_AS_ACTION_WITH_TEXT);
    menuItem=menuItem.setIcon(light ? R.drawable.ic_action_marker_light : R.drawable.ic_action_marker_dark);
    menuItem.setOnMenuItemClickListener(new OnMenuItemClickListener(){
      @Override public boolean onMenuItemClick(      MenuItem item){
        select(SHOW_ON_MAP);
        return true;
      }
    }
);
    menuItem=menu.add(0,ADD_TO_FAVORITE,0,R.string.add_to_favourite);
    MenuItemCompat.setShowAsAction(menuItem,MenuItemCompat.SHOW_AS_ACTION_ALWAYS | MenuItemCompat.SHOW_AS_ACTION_WITH_TEXT);
    menuItem=menuItem.setIcon(light ? R.drawable.ic_action_fav_light : R.drawable.ic_action_fav_dark);
    menuItem.setOnMenuItemClickListener(new OnMenuItemClickListener(){
      @Override public boolean onMenuItemClick(      MenuItem item){
        select(ADD_TO_FAVORITE);
        return true;
      }
    }
);
    menuItem=menu.add(0,ONLINE_SEARCH,0,R.string.search_online_address);
    MenuItemCompat.setShowAsAction(menuItem,MenuItemCompat.SHOW_AS_ACTION_ALWAYS | MenuItemCompat.SHOW_AS_ACTION_WITH_TEXT);
    menuItem=menuItem.setIcon(light ? R.drawable.ic_action_gnext_light : R.drawable.ic_action_gnext_dark);
    menuItem.setOnMenuItemClickListener(new OnMenuItemClickListener(){
      @Override public boolean onMenuItemClick(      MenuItem item){
        ((SearchActivity)getActivity()).startSearchAddressOnline();
        return true;
      }
    }
);
  }
}
