{
  codedIS.seek(filePointer);
  int routeLength=codedIS.readRawVarint32();
  int old=codedIS.pushLimit(routeLength);
  net.osmand.data.TransportRoute dataObject=new net.osmand.data.TransportRoute();
  boolean end=false;
  int name=-1;
  int nameEn=-1;
  int operator=-1;
  int type=-1;
  long rid=0;
  int rx=0;
  int ry=0;
  long did=0;
  int dx=0;
  int dy=0;
  while (!end) {
    int t=codedIS.readTag();
    int tag=WireFormat.getTagFieldNumber(t);
switch (tag) {
case 0:
      end=true;
    break;
case OsmandOdb.TransportRoute.DISTANCE_FIELD_NUMBER:
  dataObject.setDistance(codedIS.readUInt32());
break;
case OsmandOdb.TransportRoute.ID_FIELD_NUMBER:
dataObject.setId(codedIS.readUInt64());
break;
case OsmandOdb.TransportRoute.REF_FIELD_NUMBER:
dataObject.setRef(codedIS.readString());
break;
case OsmandOdb.TransportRoute.TYPE_FIELD_NUMBER:
type=codedIS.readUInt32();
break;
case OsmandOdb.TransportRoute.NAME_EN_FIELD_NUMBER:
nameEn=codedIS.readUInt32();
break;
case OsmandOdb.TransportRoute.NAME_FIELD_NUMBER:
name=codedIS.readUInt32();
break;
case OsmandOdb.TransportRoute.OPERATOR_FIELD_NUMBER:
operator=codedIS.readUInt32();
break;
case OsmandOdb.TransportRoute.REVERSESTOPS_FIELD_NUMBER:
int length=codedIS.readRawVarint32();
int olds=codedIS.pushLimit(length);
TransportStop stop=readTransportRouteStop(dx,dy,did);
dataObject.getBackwardStops().add(stop);
did=stop.getId();
dx=(int)MapUtils.getTileNumberX(TRANSPORT_STOP_ZOOM,stop.getLocation().getLongitude());
dy=(int)MapUtils.getTileNumberY(TRANSPORT_STOP_ZOOM,stop.getLocation().getLatitude());
codedIS.popLimit(olds);
break;
case OsmandOdb.TransportRoute.DIRECTSTOPS_FIELD_NUMBER:
length=codedIS.readRawVarint32();
olds=codedIS.pushLimit(length);
stop=readTransportRouteStop(rx,ry,rid);
dataObject.getForwardStops().add(stop);
rid=stop.getId();
rx=(int)MapUtils.getTileNumberX(TRANSPORT_STOP_ZOOM,stop.getLocation().getLongitude());
ry=(int)MapUtils.getTileNumberY(TRANSPORT_STOP_ZOOM,stop.getLocation().getLatitude());
codedIS.popLimit(olds);
break;
default :
skipUnknownField(t);
break;
}
}
codedIS.popLimit(old);
if (name != -1) {
dataObject.setName(getStringFromStringTable(ind.stringTable,name));
}
if (nameEn != -1) {
dataObject.setEnName(getStringFromStringTable(ind.stringTable,nameEn));
}
 else {
dataObject.setEnName(Junidecode.unidecode(dataObject.getName()));
}
if (operator != -1) {
dataObject.setOperator(getStringFromStringTable(ind.stringTable,operator));
}
if (type != -1) {
dataObject.setType(getStringFromStringTable(ind.stringTable,type));
}
for (int i=0; i < 2; i++) {
List<TransportStop> stops=i == 0 ? dataObject.getForwardStops() : dataObject.getBackwardStops();
for (TransportStop s : stops) {
if (s.getName().length() > 0) {
s.setName(getStringFromStringTable(ind.stringTable,s.getName().charAt(0)));
}
if (s.getEnName().length() > 0) {
s.setEnName(getStringFromStringTable(ind.stringTable,s.getEnName().charAt(0)));
}
 else {
s.setEnName(Junidecode.unidecode(s.getName()));
}
}
}
return dataObject;
}
