{
  int px=MapUtils.get31TileNumberX(lon);
  int py=MapUtils.get31TileNumberY(lat);
  ArrayList<RouteDataObject> dataObjects=new ArrayList<RouteDataObject>();
  ctx.loadTileData(px,py,17,dataObjects);
  if (dataObjects.isEmpty()) {
    ctx.loadTileData(px,py,15,dataObjects);
  }
  if (list == null) {
    list=new ArrayList<BinaryRoutePlanner.RouteSegmentPoint>();
  }
  for (  RouteDataObject r : dataObjects) {
    if (r.getPointsLength() > 1) {
      RouteSegmentPoint road=null;
      for (int j=1; j < r.getPointsLength(); j++) {
        QuadPoint pr=MapUtils.getProjectionPoint31(px,py,r.getPoint31XTile(j - 1),r.getPoint31YTile(j - 1),r.getPoint31XTile(j),r.getPoint31YTile(j));
        double currentsDistSquare=squareDist((int)pr.x,(int)pr.y,px,py);
        if (road == null || currentsDistSquare < road.distSquare) {
          RouteDataObject ro=new RouteDataObject(r);
          road=new RouteSegmentPoint(ro,j,currentsDistSquare);
          road.preciseX=(int)pr.x;
          road.preciseY=(int)pr.y;
        }
      }
      if (road != null) {
        list.add(road);
      }
    }
  }
  Collections.sort(list,new Comparator<RouteSegmentPoint>(){
    @Override public int compare(    RouteSegmentPoint o1,    RouteSegmentPoint o2){
      return Double.compare(o1.dist,o2.dist);
    }
  }
);
  if (list.size() > 0) {
    RouteSegmentPoint ps=list.get(0);
    ps.others=list;
    return ps;
  }
  return null;
}
