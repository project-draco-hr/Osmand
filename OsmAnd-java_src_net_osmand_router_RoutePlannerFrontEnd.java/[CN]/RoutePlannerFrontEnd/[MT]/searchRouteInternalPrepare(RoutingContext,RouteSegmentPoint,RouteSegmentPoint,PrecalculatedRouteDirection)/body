{
  RouteSegment recalculationEnd=getRecalculationEnd(ctx);
  if (recalculationEnd != null) {
    ctx.initStartAndTargetPoints(start,recalculationEnd);
  }
 else {
    ctx.initStartAndTargetPoints(start,end);
  }
  if (routeDirection != null) {
    ctx.precalculatedRouteDirection=routeDirection.adopt(ctx);
  }
  if (ctx.nativeLib != null) {
    return runNativeRouting(ctx,recalculationEnd);
  }
 else {
    refreshProgressDistance(ctx);
    if (useOldVersion) {
      new BinaryRoutePlannerOld().searchRouteInternal(ctx,start,end);
    }
 else {
      ctx.finalRouteSegment=new BinaryRoutePlanner().searchRouteInternal(ctx,start,end,recalculationEnd);
    }
    return new RouteResultPreparation().prepareResult(ctx,ctx.finalRouteSegment);
  }
}
