{
  if (item.getItemId() == UPLOAD_ID) {
    toUpload=dataPoints.toArray(new OsmPoint[0]);
    showDialog(DIALOG_PROGRESS_UPLOAD);
    return true;
  }
 else   if (item.getItemId() == BACKUP_ID) {
    new BackupOpenstreetmapPointAsyncTask().execute(dataPoints.toArray(new OsmPoint[0]));
    return true;
  }
 else   if (item.getItemId() == DELETE_ID) {
    Builder b=new AlertDialog.Builder(this);
    b.setMessage(getString(R.string.local_osm_changes_delete_all_confirm,dataPoints.size()));
    b.setPositiveButton(R.string.shared_string_delete,new DialogInterface.OnClickListener(){
      @Override public void onClick(      DialogInterface dialog,      int which){
        Iterator<OsmPoint> it=dataPoints.iterator();
        while (it.hasNext()) {
          OsmPoint info=it.next();
          if (info.getGroup() == OsmPoint.Group.POI) {
            dbpoi.deletePOI((OpenstreetmapPoint)info);
          }
 else           if (info.getGroup() == OsmPoint.Group.BUG) {
            dbbug.deleteAllBugModifications((OsmNotesPoint)info);
          }
          it.remove();
          listAdapter.delete(info);
        }
        listAdapter.notifyDataSetChanged();
      }
    }
);
    b.setNegativeButton(R.string.shared_string_cancel,null);
    b.show();
    return true;
  }
  return super.onOptionsItemSelected(item);
}
