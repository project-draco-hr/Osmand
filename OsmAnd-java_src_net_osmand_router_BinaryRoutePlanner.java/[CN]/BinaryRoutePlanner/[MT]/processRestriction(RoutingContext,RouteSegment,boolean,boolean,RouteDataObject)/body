{
  RouteSegment next=inputNext;
  boolean exclusiveRestriction=false;
  while (next != null) {
    int type=-1;
    if (!reverseWay) {
      for (int i=0; i < road.getRestrictionLength(); i++) {
        if (road.getRestrictionId(i) == next.road.id) {
          type=road.getRestrictionType(i);
          break;
        }
      }
    }
 else {
      for (int i=0; i < next.road.getRestrictionLength(); i++) {
        int rt=next.road.getRestrictionType(i);
        long restrictedTo=next.road.getRestrictionId(i);
        if (restrictedTo == road.id) {
          type=rt;
          break;
        }
        if (rt == MapRenderingTypes.RESTRICTION_ONLY_RIGHT_TURN || rt == MapRenderingTypes.RESTRICTION_ONLY_LEFT_TURN || rt == MapRenderingTypes.RESTRICTION_ONLY_STRAIGHT_ON) {
          RouteSegment foundNext=inputNext;
          while (foundNext != null) {
            if (foundNext.getRoad().id == restrictedTo) {
              break;
            }
            foundNext=foundNext.next;
          }
          if (foundNext != null) {
            type=REVERSE_WAY_RESTRICTION_ONLY;
          }
        }
      }
    }
    if (type == REVERSE_WAY_RESTRICTION_ONLY) {
    }
 else     if (type == -1 && exclusiveRestriction) {
    }
 else     if (type == MapRenderingTypes.RESTRICTION_NO_LEFT_TURN || type == MapRenderingTypes.RESTRICTION_NO_RIGHT_TURN || type == MapRenderingTypes.RESTRICTION_NO_STRAIGHT_ON || type == MapRenderingTypes.RESTRICTION_NO_U_TURN) {
      if (via) {
        ctx.segmentsToVisitPrescripted.remove(next);
      }
    }
 else     if (type == -1) {
      ctx.segmentsToVisitNotForbidden.add(next);
    }
 else {
      if (!via) {
        if (!reverseWay) {
          exclusiveRestriction=true;
          ctx.segmentsToVisitNotForbidden.clear();
          ctx.segmentsToVisitPrescripted.add(next);
        }
 else {
          ctx.segmentsToVisitNotForbidden.add(next);
        }
      }
    }
    next=next.next;
  }
  if (!via) {
    ctx.segmentsToVisitPrescripted.addAll(ctx.segmentsToVisitNotForbidden);
  }
}
