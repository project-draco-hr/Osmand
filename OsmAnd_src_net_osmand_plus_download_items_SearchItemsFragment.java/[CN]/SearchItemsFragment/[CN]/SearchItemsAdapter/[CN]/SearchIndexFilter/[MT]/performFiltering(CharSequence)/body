{
  FilterResults results=new FilterResults();
  if (constraint == null || constraint.length() < 2) {
    results.values=new ArrayList<>();
    results.count=0;
  }
 else {
    String[] ors=constraint.toString().split(",");
    List<List<String>> conds=new ArrayList<>();
    for (    String or : ors) {
      final ArrayList<String> cond=new ArrayList<>();
      for (      String term : or.split("\\s")) {
        final String t=term.trim().toLowerCase();
        if (t.length() > 0) {
          cond.add(t);
        }
      }
      if (cond.size() > 0) {
        conds.add(cond);
      }
    }
    List<Object> filter=new ArrayList<>();
    List<WorldRegion> regions=new ArrayList<>();
    for (    WorldRegion region : worldRegions) {
      String indexLC=region.getName().toLowerCase();
      if (isMatch(conds,false,indexLC)) {
        regions.add(region);
      }
    }
    for (    WorldRegion region : regions) {
      Map<String,IndexItem> indexItems=getDownloadActivity().getIndexItemsByRegion(region);
      List<IndexItem> items=new LinkedList<>();
      if (region.getSubregions().size() > 0) {
        filter.add(region);
      }
      for (      IndexItem item : indexItems.values()) {
        items.add(item);
      }
      if (items.size() > 1) {
        if (!filter.contains(region)) {
          filter.add(region);
        }
      }
 else {
        filter.addAll(items);
      }
    }
    final Collator collator=OsmAndCollator.primaryCollator();
    Collections.sort(filter,new Comparator<Object>(){
      @Override public int compare(      Object obj1,      Object obj2){
        String str1;
        String str2;
        if (obj1 instanceof WorldRegion) {
          str1=((WorldRegion)obj1).getName();
        }
 else {
          str1=((IndexItem)obj1).getVisibleName(getMyApplication(),osmandRegions);
        }
        if (obj2 instanceof WorldRegion) {
          str2=((WorldRegion)obj2).getName();
        }
 else {
          str2=((IndexItem)obj2).getVisibleName(getMyApplication(),osmandRegions);
        }
        return collator.compare(str1,str2);
      }
    }
);
    results.values=filter;
    results.count=filter.size();
  }
  return results;
}
