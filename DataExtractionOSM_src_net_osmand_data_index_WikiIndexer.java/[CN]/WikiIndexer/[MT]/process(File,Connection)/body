{
  InputStream fi=null;
  BufferedWriter out=null;
  try {
    int in=f.getName().indexOf('.');
    int in2=f.getName().indexOf('.',in + 1);
    if (in2 == -1) {
      log.error("File was not processed " + f.getName() + " please use name <Index-name>.<2Letters-Locale>.xml.bz2");
      return null;
    }
    String wikiLocale=f.getName().substring(in + 1,in2);
    log.info("Locale for file " + wikiLocale);
    PreparedStatement locSearch=dbConnection.prepareStatement("SELECT gc_lat, gc_lon, gc_type FROM coord_" + wikiLocale + "wiki WHERE gc_from=?");
    PreparedStatement enSearch=null;
    try {
      enSearch=dbConnection.prepareStatement("SELECT gc_lat, gc_lon, gc_type FROM coord_enwiki WHERE gc_name=?");
    }
 catch (    SQLException e) {
      log.warn("EN coord not initialized ",e);
    }
    File osmOut=new File(workPath,f.getName().substring(0,in) + ".osm");
    fi=new BufferedInputStream(new FileInputStream(f));
    InputStream progressStream=fi;
    if (f.getName().endsWith(".bz2")) {
      if (fi.read() != 'B' || fi.read() != 'Z') {
        throw new RuntimeException("The source stream must start with the characters BZ if it is to be read as a BZip2 stream.");
      }
 else {
        fi=new CBZip2InputStream(fi);
      }
    }
    ConsoleProgressImplementation progress=new ConsoleProgressImplementation();
    out=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(osmOut),"UTF-8"));
    SAXParser saxParser=SAXParserFactory.newInstance().newSAXParser();
    WikiOsmHandler wikiOsmHandler=new WikiOsmHandler(saxParser,out,progress,progressStream,locSearch,enSearch,wikiLocale);
    saxParser.parse(fi,wikiOsmHandler);
    locSearch.close();
    enSearch.close();
    if (wikiOsmHandler.getCount() < 1) {
      return null;
    }
    return osmOut;
  }
 catch (  ParserConfigurationException e) {
    throw new WikiIndexerException("Parse exception",e);
  }
catch (  SAXException e) {
    throw new WikiIndexerException("Parse exception",e);
  }
catch (  IOException e) {
    throw new WikiIndexerException("Parse exception",e);
  }
catch (  XMLStreamException e) {
    throw new WikiIndexerException("Parse exception",e);
  }
catch (  SQLException e) {
    throw new WikiIndexerException("Database exception or locale configuration problem",e);
  }
 finally {
    Algoritms.closeStream(out);
    Algoritms.closeStream(fi);
  }
}
