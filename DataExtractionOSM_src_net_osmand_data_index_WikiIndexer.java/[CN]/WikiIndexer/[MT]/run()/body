{
  log.info("Obtain database connection");
  Connection conn;
  try {
    Class.forName("com.mysql.jdbc.Driver").newInstance();
    conn=DriverManager.getConnection(url,userName,password);
    log.info("Database connection established");
  }
 catch (  InstantiationException e1) {
    throw new WikiIndexerException("Could not establish connection to " + url + " with "+ userName,e1);
  }
catch (  IllegalAccessException e1) {
    throw new WikiIndexerException("Could not establish connection to " + url + " with "+ userName,e1);
  }
catch (  ClassNotFoundException e1) {
    throw new WikiIndexerException("Could not establish connection to " + url + " with "+ userName,e1);
  }
catch (  SQLException e1) {
    throw new WikiIndexerException("Could not establish connection to " + url + " with "+ userName,e1);
  }
  File[] listFiles=srcPath.listFiles();
  for (  File f : listFiles) {
    try {
      if (f.isFile() && (f.getName().endsWith(".xml") || f.getName().endsWith(".xml.bz2"))) {
        log.info("About to process " + f.getName());
        File outFile=process(f,conn);
        if (outFile != null) {
          f.renameTo(new File(srcDone,f.getName()));
          IndexCreator ic=new IndexCreator(workPath);
          ic.setIndexPOI(true);
          ic.setIndexMap(false);
          ic.setIndexTransport(false);
          ic.setIndexAddress(false);
          ic.generateIndexes(outFile,new ConsoleProgressImplementation(3),null,null,null,log);
          String targetMapFileName=ic.getMapFileName();
          targetMapFileName=targetMapFileName.substring(0,targetMapFileName.length() - IndexConstants.BINARY_MAP_INDEX_EXT.length()) + "_" + IndexConstants.BINARY_MAP_VERSION+ IndexConstants.BINARY_MAP_INDEX_EXT;
          new File(workPath,ic.getMapFileName()).renameTo(new File(targetPath,targetMapFileName));
        }
      }
    }
 catch (    WikiIndexerException e) {
      log.error("Error processing " + f.getName(),e);
    }
catch (    RuntimeException e) {
      log.error("Error processing " + f.getName(),e);
    }
catch (    IOException e) {
      log.error("Error processing " + f.getName(),e);
    }
catch (    SAXException e) {
      log.error("Error processing " + f.getName(),e);
    }
catch (    SQLException e) {
      log.error("Error processing " + f.getName(),e);
    }
catch (    InterruptedException e) {
      log.error("Error processing " + f.getName(),e);
    }
  }
}
