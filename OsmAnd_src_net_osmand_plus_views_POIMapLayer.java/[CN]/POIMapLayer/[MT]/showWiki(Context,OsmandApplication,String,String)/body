{
  final Dialog dialog=new Dialog(ctx,app.getSettings().isLightContent() ? R.style.OsmandLightTheme : R.style.OsmandDarkTheme);
  LinearLayout ll=new LinearLayout(ctx);
  ll.setOrientation(LinearLayout.VERTICAL);
  Toolbar tb=new Toolbar(ctx);
  tb.setClickable(true);
  Drawable back=app.getIconsCache().getIcon(R.drawable.abc_ic_ab_back_mtrl_am_alpha);
  tb.setNavigationIcon(back);
  tb.setTitle(name);
  tb.setBackgroundColor(ctx.getResources().getColor(getResIdFromAttribute(ctx,R.attr.pstsTabBackground)));
  tb.setTitleTextColor(ctx.getResources().getColor(getResIdFromAttribute(ctx,R.attr.pstsTextColor)));
  tb.setNavigationOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    final View v){
      dialog.dismiss();
    }
  }
);
  final WebView wv=new WebView(ctx);
  WebSettings settings=wv.getSettings();
  settings.setDefaultTextEncodingName("utf-8");
  wv.loadDataWithBaseURL(null,content,"text/html","UTF-8",null);
  ScrollView scrollView=new ScrollView(ctx);
  ll.addView(tb);
  ll.addView(scrollView);
  scrollView.addView(wv);
  dialog.setContentView(ll);
  wv.setFocusable(true);
  wv.setFocusableInTouchMode(true);
  wv.requestFocus(View.FOCUS_DOWN);
  wv.setOnTouchListener(new View.OnTouchListener(){
    @Override public boolean onTouch(    View v,    MotionEvent event){
switch (event.getAction()) {
case MotionEvent.ACTION_DOWN:
case MotionEvent.ACTION_UP:
        if (!v.hasFocus()) {
          v.requestFocus();
        }
      break;
  }
  return false;
}
}
);
dialog.setCancelable(true);
dialog.show();
}
