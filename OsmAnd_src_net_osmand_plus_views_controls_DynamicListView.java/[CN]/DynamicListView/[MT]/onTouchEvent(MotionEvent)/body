{
  if (singleTapDetector.onTouchEvent(event)) {
    if (tag != null) {
      tag.onClick();
    }
    touchEventsCancelled();
    return super.onTouchEvent(event);
  }
switch (event.getAction() & MotionEvent.ACTION_MASK) {
case MotionEvent.ACTION_DOWN:
    if (!mCellIsMobile && mHoverCell == null) {
      View v=findViewAtPositionWithDragIconTag(getRootView(),(int)event.getRawX(),(int)event.getRawY());
      if ((v != null) && (v.getTag() != null) && (v.getTag() instanceof DragIcon)) {
        mDownX=(int)event.getX();
        mDownY=(int)event.getY();
        mActivePointerId=event.getPointerId(0);
        mTotalOffset=0;
        tag=(DragIcon)v.getTag();
        int position=pointToPosition(mDownX,mDownY);
        if (position != INVALID_POSITION) {
          Object item=getAdapter().getItem(position);
          if (mActiveItemsList == null || mActiveItemsList.contains(item)) {
            int itemNum=position - getFirstVisiblePosition();
            itemsSwapped=false;
            View selectedView=getChildAt(itemNum);
            mMobileItemId=getAdapter().getItemId(position);
            mHoverCell=getAndAddHoverView(selectedView);
            selectedView.setVisibility(INVISIBLE);
            mCellIsMobile=true;
            updateNeighborViewsForID(mMobileItemId);
            if (dCallbacks != null) {
              dCallbacks.onItemSwapping(position);
            }
          }
        }
      }
    }
  break;
case MotionEvent.ACTION_MOVE:
if (mActivePointerId == INVALID_POINTER_ID) {
  break;
}
int pointerIndex=event.findPointerIndex(mActivePointerId);
mLastEventY=(int)event.getY(pointerIndex);
int deltaY=mLastEventY - mDownY;
if (mCellIsMobile && mHoverCell != null) {
mHoverCellCurrentBounds.offsetTo(mHoverCellOriginalBounds.left,mHoverCellOriginalBounds.top + deltaY + mTotalOffset);
mHoverCell.setBounds(mHoverCellCurrentBounds);
invalidate();
handleCellSwitch();
mIsMobileScrolling=false;
handleMobileCellScroll();
return false;
}
break;
case MotionEvent.ACTION_UP:
touchEventsEnded();
break;
case MotionEvent.ACTION_CANCEL:
touchEventsCancelled();
break;
case MotionEvent.ACTION_POINTER_UP:
pointerIndex=(event.getAction() & MotionEvent.ACTION_POINTER_INDEX_MASK) >> MotionEvent.ACTION_POINTER_INDEX_SHIFT;
final int pointerId=event.getPointerId(pointerIndex);
if (pointerId == mActivePointerId) {
touchEventsEnded();
}
break;
default :
break;
}
return super.onTouchEvent(event);
}
