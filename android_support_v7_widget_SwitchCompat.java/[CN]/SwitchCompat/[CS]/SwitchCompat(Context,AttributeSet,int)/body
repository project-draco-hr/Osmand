{
  super(context,attrs,defStyleAttr);
  mTextPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);
  final Resources res=getResources();
  mTextPaint.density=res.getDisplayMetrics().density;
  final TintTypedArray a=TintTypedArray.obtainStyledAttributes(context,attrs,R.styleable.SwitchCompat,defStyleAttr,0);
  mThumbDrawable=a.getDrawable(R.styleable.SwitchCompat_android_thumb);
  if (mThumbDrawable != null) {
    mThumbDrawable.setCallback(this);
  }
  mTrackDrawable=a.getDrawable(R.styleable.SwitchCompat_track);
  if (mTrackDrawable != null) {
    mTrackDrawable.setCallback(this);
  }
  mTextOn=a.getText(R.styleable.SwitchCompat_android_textOn);
  mTextOff=a.getText(R.styleable.SwitchCompat_android_textOff);
  mShowText=a.getBoolean(R.styleable.SwitchCompat_showText,true);
  mThumbTextPadding=a.getDimensionPixelSize(R.styleable.SwitchCompat_thumbTextPadding,0);
  mSwitchMinWidth=a.getDimensionPixelSize(R.styleable.SwitchCompat_switchMinWidth,0);
  mSwitchPadding=a.getDimensionPixelSize(R.styleable.SwitchCompat_switchPadding,0);
  mSplitTrack=a.getBoolean(R.styleable.SwitchCompat_splitTrack,false);
  final int appearance=a.getResourceId(R.styleable.SwitchCompat_switchTextAppearance,0);
  if (appearance != 0) {
    setSwitchTextAppearance(context,appearance);
  }
  mTintManager=a.getTintManager();
  a.recycle();
  final ViewConfiguration config=ViewConfiguration.get(context);
  mTouchSlop=config.getScaledTouchSlop();
  mMinFlingVelocity=config.getScaledMinimumFlingVelocity();
  refreshDrawableState();
  setChecked(isChecked());
}
