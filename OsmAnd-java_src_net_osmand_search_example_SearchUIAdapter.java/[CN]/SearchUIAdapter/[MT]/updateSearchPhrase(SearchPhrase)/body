{
  boolean hasSameConstantWords=p.hasSameConstantWords(this.p);
  this.p=p;
  if (hasSameConstantWords) {
    filterCurrentResults(currentSearchResults);
  }
  boolean lastWordLooksLikeURLOrNumber=true;
  if (lastWordLooksLikeURLOrNumber) {
  }
  boolean poiTypeWasNotSelected=true;
  if (poiTypeWasNotSelected) {
    sortCurrentSearchResults();
  }
  asyncCallToSearchCoreAPI(new ResultMatcher<List<SearchResult<?>>>(){
    @Override public boolean publish(    List<SearchResult<?>> object){
      return false;
    }
    @Override public boolean isCancelled(){
      return false;
    }
  }
,new ResultMatcher<SearchResult<?>>(){
    @Override public boolean publish(    SearchResult<?> object){
      if (filterOneResult(object)) {
        currentSearchResults.add(object);
        sortCurrentSearchResults();
        return true;
      }
      return false;
    }
    @Override public boolean isCancelled(){
      return false;
    }
  }
);
}
