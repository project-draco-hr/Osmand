{
  String url=MessageFormat.format(settings.LIVE_MONITORING_URL.get(),lat + "",lon + "",time + "",hdop + "",alt + "",speed + "");
  try {
    HttpParams params=new BasicHttpParams();
    HttpConnectionParams.setConnectionTimeout(params,15000);
    DefaultHttpClient httpclient=new DefaultHttpClient(params);
    HttpRequestBase method=new HttpGet(url);
    log.info("Monitor " + url);
    HttpResponse response=httpclient.execute(method);
    if (response.getStatusLine() == null || response.getStatusLine().getStatusCode() != 200) {
      String msg;
      if (response.getStatusLine() != null) {
        msg=ctx.getString(R.string.failed_op);
      }
 else {
        msg=response.getStatusLine().getStatusCode() + " : " + response.getStatusLine().getReasonPhrase();
      }
      log.error("Error sending monitor request request : " + msg);
    }
 else {
      InputStream is=response.getEntity().getContent();
      StringBuilder responseBody=new StringBuilder();
      if (is != null) {
        BufferedReader in=new BufferedReader(new InputStreamReader(is,"UTF-8"));
        String s;
        while ((s=in.readLine()) != null) {
          responseBody.append(s);
          responseBody.append("\n");
        }
        is.close();
      }
      httpclient.getConnectionManager().shutdown();
      log.info("Montior response : " + responseBody.toString());
    }
  }
 catch (  Exception e) {
    log.error("Failed connect to " + url,e);
  }
}
