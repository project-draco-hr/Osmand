{
  String[] entries;
  String[] entrieValues;
  DrivingRegion[] drs=DrivingRegion.values();
  entries=new String[drs.length];
  for (int i=0; i < entries.length; i++) {
    entries[i]=getString(drs[i].name);
  }
  registerListPreference(settings.DRIVING_REGION,screen,entries,drs);
  MetricsConstants[] mvls=MetricsConstants.values();
  entries=new String[mvls.length];
  for (int i=0; i < entries.length; i++) {
    entries[i]=mvls[i].toHumanString(getMyApplication());
  }
  registerListPreference(settings.METRIC_SYSTEM,screen,entries,mvls);
  String incompleteSuffix=" (" + getString(R.string.incomplete_locale) + ")";
  String latinSystemDefaultSuffix=" (" + getString(R.string.system_locale_no_translate) + ")";
  entrieValues=new String[]{"","en","af","ar","eu","be","be_BY","bg","ca","zh_CN","zh_TW","hr","cs","da","nl","en_GB","eo","fi","fr","gl","ka","de","el","he","hu","it","ja","kn","ko","lv","lt","mr","nb","nn","fa","pl","pt","pt_BR","ro","ru","sc","sr","sk","sl","es","es_US","es_AR","sv","tr","uk","vi","cy"};
  entries=new String[]{getString(R.string.system_locale) + latinSystemDefaultSuffix,getString(R.string.lang_en),getString(R.string.lang_af) + incompleteSuffix,getString(R.string.lang_ar) + incompleteSuffix,getString(R.string.lang_eu),getString(R.string.lang_be),getString(R.string.lang_be_BY),getString(R.string.lang_bg),getString(R.string.lang_ca),getString(R.string.lang_zh_CN) + incompleteSuffix,getString(R.string.lang_zh_TW),getString(R.string.lang_hr) + incompleteSuffix,getString(R.string.lang_cs),getString(R.string.lang_da),getString(R.string.lang_nl),getString(R.string.lang_en_gb),getString(R.string.lang_eo) + incompleteSuffix,getString(R.string.lang_fi) + incompleteSuffix,getString(R.string.lang_fr),getString(R.string.lang_gl),getString(R.string.lang_ka) + incompleteSuffix,getString(R.string.lang_de),getString(R.string.lang_el) + incompleteSuffix,getString(R.string.lang_he) + incompleteSuffix,getString(R.string.lang_hu),getString(R.string.lang_it),getString(R.string.lang_ja),getString(R.string.lang_kn) + incompleteSuffix,getString(R.string.lang_ko),getString(R.string.lang_lv),getString(R.string.lang_lt),getString(R.string.lang_mr) + incompleteSuffix,getString(R.string.lang_nb) + incompleteSuffix,getString(R.string.lang_nn) + incompleteSuffix,getString(R.string.lang_fa) + incompleteSuffix,getString(R.string.lang_pl),getString(R.string.lang_pt),getString(R.string.lang_pt_br),getString(R.string.lang_ro) + incompleteSuffix,getString(R.string.lang_ru),getString(R.string.lang_sc),getString(R.string.lang_sr) + incompleteSuffix,getString(R.string.lang_sk),getString(R.string.lang_sl),getString(R.string.lang_es),getString(R.string.lang_es_us),getString(R.string.lang_es_ar),getString(R.string.lang_sv),getString(R.string.lang_tr),getString(R.string.lang_uk),getString(R.string.lang_vi) + incompleteSuffix,getString(R.string.lang_cy) + incompleteSuffix};
  String[] valuesPl=ConfigureMapMenu.getSortedMapNamesIds(this,entries,entries);
  String[] idsPl=ConfigureMapMenu.getSortedMapNamesIds(this,entrieValues,entries);
  registerListPreference(settings.PREFERRED_LOCALE,screen,valuesPl,idsPl);
  if (!getResources().getString(R.string.preferred_locale).equals(getResources().getString(R.string.preferred_locale_no_translate))) {
    ((ListPreference)screen.findPreference(settings.PREFERRED_LOCALE.getId())).setTitle(getString(R.string.preferred_locale) + " (" + getString(R.string.preferred_locale_no_translate)+ ")");
  }
  String[] values=ConfigureMapMenu.getMapNamesValues(this,ConfigureMapMenu.mapNamesIds);
  String[] ids=ConfigureMapMenu.getSortedMapNamesIds(this,ConfigureMapMenu.mapNamesIds,values);
  registerListPreference(settings.MAP_PREFERRED_LOCALE,screen,ConfigureMapMenu.getMapNamesValues(this,ids),ids);
}
