{
  boolean inside=insideBox(topLatitude,leftLongitude,bottomLatitude,rightLongitude,zoom);
  cRotate=rotate < 0 ? rotate + 360 : rotate;
  if (!inside) {
    cBottomLatitude=bottomLatitude - (topLatitude - bottomLatitude) / 2;
    cTopLatitude=topLatitude + (topLatitude - bottomLatitude) / 2;
    cLeftLongitude=leftLongitude - (rightLongitude - leftLongitude);
    cRightLongitude=rightLongitude + (rightLongitude - leftLongitude);
    cZoom=zoom;
    log.info(String.format("BLat=%s, TLat=%s, LLong=%s, RLong=%s, zoom=%s",cBottomLatitude,cTopLatitude,cLeftLongitude,cRightLongitude,cZoom));
    long now=System.currentTimeMillis();
    PreparedStatement statement=null;
    if (zoom >= 15) {
      statement=pStatement;
    }
 else     if (zoom >= 10) {
      statement=pStatement2;
    }
 else     if (zoom >= 6) {
      statement=pStatement3;
    }
    if (statement == null || conn == null) {
      cObjects=new ArrayList<MapRenderObject>();
      return;
    }
    try {
      statement.setDouble(1,cBottomLatitude);
      statement.setDouble(2,cTopLatitude);
      statement.setDouble(3,cLeftLongitude);
      statement.setDouble(4,cRightLongitude);
      ResultSet result=statement.executeQuery();
      List<MapRenderObject> local=new ArrayList<MapRenderObject>();
      try {
        int count=0;
        while (result.next()) {
          long id=result.getLong(1);
          MapRenderObject obj=new MapRenderObject(id);
          obj.setData(result.getBytes(2));
          obj.setName(result.getString(3));
          obj.setType(result.getInt(4));
          count++;
          local.add(obj);
        }
        cObjects=local;
        log.info(String.format("Search has been done in %s ms. %s results were found.",System.currentTimeMillis() - now,count));
      }
  finally {
        result.close();
      }
    }
 catch (    java.sql.SQLException e) {
      log.debug("Search failed",e);
    }
  }
  RectF newLoc=new RectF((float)cLeftLongitude,(float)cTopLatitude,(float)cRightLongitude,(float)cBottomLatitude);
  Bitmap bmp=renderer.generateNewBitmap(newLoc,cObjects,cZoom,cRotate);
  Bitmap oldBmp=this.bmp;
  this.bmp=bmp;
  cachedWaysLoc=newLoc;
  if (oldBmp != null) {
    oldBmp.recycle();
  }
}
