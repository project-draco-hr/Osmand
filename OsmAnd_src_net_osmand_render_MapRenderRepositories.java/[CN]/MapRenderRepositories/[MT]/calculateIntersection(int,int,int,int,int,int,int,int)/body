{
  int by=-1;
  int bx=-1;
  if (py < topY && y >= topY) {
    int tx=(int)(px + ((double)(x - px) * (topY - py)) / (y - py));
    if (leftX <= tx && tx <= rightX) {
      bx=tx;
      by=topY;
      return (((long)bx) << 32) | ((long)by);
    }
  }
  if (py > bottomY && y <= bottomY) {
    int tx=(int)(px + ((double)(x - px) * (py - bottomY)) / (py - y));
    if (leftX <= tx && tx <= rightX) {
      bx=tx;
      by=bottomY;
      return (((long)bx) << 32) | ((long)by);
    }
  }
  if (px < leftX && x >= leftX) {
    int ty=(int)(py + ((double)(y - py) * (leftX - px)) / (x - px));
    if (ty >= topY && ty <= bottomY) {
      by=ty;
      bx=leftX;
      return (((long)bx) << 32) | ((long)by);
    }
  }
  if (px > rightX && x <= rightX) {
    int ty=(int)(py + ((double)(y - py) * (px - rightX)) / (px - x));
    if (ty >= topY && ty <= bottomY) {
      by=ty;
      bx=rightX;
      return (((long)bx) << 32) | ((long)by);
    }
  }
  if (py > topY && y <= topY) {
    int tx=(int)(px + ((double)(x - px) * (topY - py)) / (y - py));
    if (leftX <= tx && tx <= rightX) {
      bx=tx;
      by=topY;
      return (((long)bx) << 32) | ((long)by);
    }
  }
  if (py < bottomY && y >= bottomY) {
    int tx=(int)(px + ((double)(x - px) * (py - bottomY)) / (py - y));
    if (leftX <= tx && tx <= rightX) {
      bx=tx;
      by=bottomY;
      return (((long)bx) << 32) | ((long)by);
    }
  }
  if (px > leftX && x <= leftX) {
    int ty=(int)(py + ((double)(y - py) * (leftX - px)) / (x - px));
    if (ty >= topY && ty <= bottomY) {
      by=ty;
      bx=leftX;
      return (((long)bx) << 32) | ((long)by);
    }
  }
  if (px < rightX && x >= rightX) {
    int ty=(int)(py + ((double)(y - py) * (px - rightX)) / (px - x));
    if (ty >= topY && ty <= bottomY) {
      by=ty;
      bx=rightX;
      return (((long)bx) << 32) | ((long)by);
    }
  }
  if (px == rightX || px == leftX || py == topY || py == bottomY) {
    bx=px;
    by=py;
  }
  return -1l;
}
