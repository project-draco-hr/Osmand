{
  List<MultyPolygon> listPolygons=new ArrayList<MultyPolygon>(multyPolygons.size());
  List<List<Long>> completedRings=new ArrayList<List<Long>>();
  List<List<Long>> incompletedRings=new ArrayList<List<Long>>();
  for (  Integer type : multyPolygons.keySet()) {
    if (((type >> 15) & 1) == 1) {
      continue;
    }
    int inverseType=(type | (1 << 15));
    List<MapRenderObject> directList=multyPolygons.get(type);
    List<MapRenderObject> inverselist=Collections.emptyList();
    if (multyPolygons.containsKey(inverseType)) {
      inverselist=multyPolygons.get(inverseType);
    }
    completedRings.clear();
    incompletedRings.clear();
    MultyPolygon pl=processMultiPolygon(leftX,rightX,bottomY,topY,listPolygons,completedRings,incompletedRings,type,directList,inverselist);
    listPolygons.add(pl);
  }
  return listPolygons;
}
