{
  double cBottomLatitude=dataBox.bottom;
  double cTopLatitude=dataBox.top;
  double cLeftLongitude=dataBox.left;
  double cRightLongitude=dataBox.right;
  log.info(String.format("BLat=%s, TLat=%s, LLong=%s, RLong=%s, zoom=%s",cBottomLatitude,cTopLatitude,cLeftLongitude,cRightLongitude,zoom));
  long now=System.currentTimeMillis();
  if (files.isEmpty()) {
    cObjectsBox=dataBox;
    cObjects=new ArrayList<BinaryMapDataObject>();
    return true;
  }
  try {
    int count=0;
    ArrayList<BinaryMapDataObject> tempList=new ArrayList<BinaryMapDataObject>();
    System.gc();
    TLongSet ids=new TLongHashSet();
    Map<Integer,List<BinaryMapDataObject>> multiPolygons=new LinkedHashMap<Integer,List<BinaryMapDataObject>>();
    int leftX=MapUtils.get31TileNumberX(cLeftLongitude);
    int rightX=MapUtils.get31TileNumberX(cRightLongitude);
    int bottomY=MapUtils.get31TileNumberY(cBottomLatitude);
    int topY=MapUtils.get31TileNumberY(cTopLatitude);
    searchRequest=BinaryMapIndexReader.buildSearchRequest(leftX,rightX,topY,bottomY,zoom);
    for (    BinaryMapIndexReader c : files.values()) {
      List<BinaryMapDataObject> res=c.searchMapIndex(searchRequest);
      if (checkWhetherInterrupted()) {
        return false;
      }
      for (      BinaryMapDataObject r : res) {
        if (PerformanceFlags.checkForDuplicateObjectIds) {
          if (ids.contains(r.getId())) {
            continue;
          }
          ids.add(r.getId());
        }
        count++;
        for (int i=0; i < r.getTypes().length; i++) {
          registerMultipolygon(multiPolygons,r.getTypes()[i],r);
        }
        if (checkWhetherInterrupted()) {
          return false;
        }
        tempList.add(r);
      }
    }
    List<MultyPolygon> pMulti=proccessMultiPolygons(multiPolygons,leftX,rightX,bottomY,topY);
    tempList.addAll(pMulti);
    log.info(String.format("Search has been done in %s ms. %s results were found.",System.currentTimeMillis() - now,count));
    cObjects=tempList;
    cObjectsBox=dataBox;
  }
 catch (  IOException e) {
    log.debug("Search failed",e);
    return false;
  }
  return true;
}
