{
  app=getMyApplication();
  settings=app.getSettings();
  app.applyTheme(this);
  super.onCreate(savedInstanceState);
  requestWindowFeature(Window.FEATURE_NO_TITLE);
  setContentView(R.layout.main);
  mapActions=new MapActivityActions(this);
  mapLayers=new MapActivityLayers(this);
  startProgressDialog=new ProgressDialog(this);
  startProgressDialog.setCancelable(true);
  app.checkApplicationIsBeingInitialized(this,startProgressDialog);
  parseLaunchIntentLocation();
  if (settings.USE_NATIVE_RENDER.get() && NativeQtLibrary.isInit()) {
    ViewStub stub=(ViewStub)findViewById(R.id.glSurfaceStub);
    glSurfaceView=(GLSurfaceView)stub.inflate();
    OsmAndMapLayersView ml=(OsmAndMapLayersView)findViewById(R.id.MapLayersView);
    ml.setVisibility(View.VISIBLE);
    NativeQtLibrary.initView(glSurfaceView);
    mapView=ml.getMapView();
    mapView.setMapRender(NativeQtLibrary.getMapRenderer());
  }
 else {
    OsmAndMapSurfaceView surf=(OsmAndMapSurfaceView)findViewById(R.id.MapView);
    surf.setVisibility(View.VISIBLE);
    mapView=surf.getMapView();
  }
  mapView.setTrackBallDelegate(new OsmandMapTileView.OnTrackBallListener(){
    @Override public boolean onTrackBallEvent(    MotionEvent e){
      showAndHideMapPosition();
      return MapActivity.this.onTrackballEvent(e);
    }
  }
);
  mapView.setAccessibilityActions(new MapAccessibilityActions(this));
  if (mapViewTrackingUtilities == null) {
    mapViewTrackingUtilities=new MapViewTrackingUtilities(app);
  }
  mapViewTrackingUtilities.setMapView(mapView);
  startProgressDialog.setOnDismissListener(new DialogInterface.OnDismissListener(){
    @Override public void onDismiss(    DialogInterface dialog){
      app.getResourceManager().getRenderer().clearCache();
      mapView.refreshMap(true);
    }
  }
);
  app.getResourceManager().getMapTileDownloader().addDownloaderCallback(new IMapDownloaderCallback(){
    @Override public void tileDownloaded(    DownloadRequest request){
      if (request != null && !request.error && request.fileToSave != null) {
        ResourceManager mgr=app.getResourceManager();
        mgr.tileDownloaded(request);
      }
      if (request == null || !request.error) {
        mapView.tileDownloaded(request);
      }
    }
  }
);
  createProgressBarForRouting();
  mapLayers.createLayers(mapView);
  if (settings.FOLLOW_THE_ROUTE.get() && !app.getRoutingHelper().isRouteCalculated() && !app.getRoutingHelper().isRouteBeingCalculated()) {
    FailSafeFuntions.restoreRoutingMode(this);
  }
  if (!settings.isLastKnownMapLocation()) {
    net.osmand.Location location=app.getLocationProvider().getFirstTimeRunDefaultLocation();
    if (location != null) {
      mapView.setLatLon(location.getLatitude(),location.getLongitude());
      mapView.setIntZoom(14);
    }
  }
  addDialogProvider(mapActions);
  OsmandPlugin.onMapActivityCreate(this);
  if (lockView != null) {
    ((FrameLayout)mapView.getParent()).addView(lockView);
  }
  gpxImportHelper=new GpxImportHelper(this,getMyApplication(),getMapView());
  mapActions.prepareStartOptionsMenu();
}
