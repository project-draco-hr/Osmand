{
  super.onCreate(savedInstanceState);
  settings=getMyApplication().getSettings();
  requestWindowFeature(Window.FEATURE_NO_TITLE);
  setContentView(R.layout.main);
  startProgressDialog=new ProgressDialog(this);
  startProgressDialog.setCancelable(true);
  ((OsmandApplication)getApplication()).checkApplicationIsBeingInitialized(this,startProgressDialog);
  startProgressDialog.setOnDismissListener(new DialogInterface.OnDismissListener(){
    @Override public void onDismiss(    DialogInterface dialog){
      OsmandApplication app=((OsmandApplication)getApplication());
      if (settings.MAP_VECTOR_DATA.get() && app.getResourceManager().getRenderer().isEmpty()) {
        Toast.makeText(MapActivity.this,getString(R.string.no_vector_map_loaded),Toast.LENGTH_LONG).show();
      }
    }
  }
);
  parseLaunchIntentLocation();
  mapView=(OsmandMapTileView)findViewById(R.id.MapView);
  mapView.setTrackBallDelegate(new OsmandMapTileView.OnTrackBallListener(){
    @Override public boolean onTrackBallEvent(    MotionEvent e){
      showAndHideMapPosition();
      return MapActivity.this.onTrackballEvent(e);
    }
  }
);
  MapTileDownloader.getInstance().addDownloaderCallback(new IMapDownloaderCallback(){
    @Override public void tileDownloaded(    DownloadRequest request){
      if (request != null && !request.error && request.fileToSave != null) {
        ResourceManager mgr=getMyApplication().getResourceManager();
        mgr.tileDownloaded(request);
      }
      mapView.tileDownloaded(request);
    }
  }
);
  savingTrackHelper=new SavingTrackHelper(this);
  LatLon pointToNavigate=settings.getPointToNavigate();
  routingHelper=getMyApplication().getRoutingHelper();
  if (settings.FOLLOW_THE_ROUTE.get() && !routingHelper.isRouteCalculated()) {
    restoreRoutingMode(pointToNavigate);
  }
  mapView.setMapLocationListener(this);
  mapLayers.createLayers(mapView);
  if (!settings.isLastKnownMapLocation()) {
    LocationManager service=(LocationManager)getSystemService(LOCATION_SERVICE);
    Location location=null;
    for (    String provider : service.getAllProviders()) {
      try {
        Location loc=service.getLastKnownLocation(provider);
        if (location == null) {
          location=loc;
        }
 else         if (loc != null && location.getTime() < loc.getTime()) {
          location=loc;
        }
      }
 catch (      IllegalArgumentException e) {
        Log.d(LogUtil.TAG,"Location provider not available");
      }
    }
    if (location != null) {
      mapView.setLatLon(location.getLatitude(),location.getLongitude());
      mapView.setZoom(14);
    }
  }
  backToLocation=(ImageButton)findViewById(R.id.BackToLocation);
  backToLocation.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      backToLocationImpl();
    }
  }
);
}
