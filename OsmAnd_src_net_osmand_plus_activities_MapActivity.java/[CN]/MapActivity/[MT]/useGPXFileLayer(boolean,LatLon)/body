{
  final List<String> list=new ArrayList<String>();
  final File dir=settings.extendOsmandPath(ResourceManager.APP_DIR + SavingTrackHelper.TRACKS_PATH);
  if (dir != null && dir.canRead()) {
    File[] files=dir.listFiles();
    if (files != null) {
      Arrays.sort(files,new Comparator<File>(){
        @Override public int compare(        File object1,        File object2){
          if (object1.lastModified() > object2.lastModified()) {
            return -1;
          }
 else           if (object1.lastModified() == object2.lastModified()) {
            return 0;
          }
          return 1;
        }
      }
);
      for (      File f : files) {
        if (f.getName().endsWith(".gpx")) {
          list.add(f.getName());
        }
      }
    }
  }
  if (list.isEmpty()) {
    Toast.makeText(this,R.string.gpx_files_not_found,Toast.LENGTH_LONG).show();
  }
 else {
    Builder builder=new AlertDialog.Builder(this);
    builder.setItems(list.toArray(new String[list.size()]),new DialogInterface.OnClickListener(){
      @Override public void onClick(      DialogInterface dialog,      int which){
        dialog.dismiss();
        final ProgressDialog dlg=ProgressDialog.show(MapActivity.this,getString(R.string.loading),getString(R.string.loading_data));
        final File f=new File(dir,list.get(which));
        new Thread(new Runnable(){
          @Override public void run(){
            Looper.prepare();
            final GPXFileResult res=GPXUtilities.loadGPXFile(MapActivity.this,f);
            if (res.error != null) {
              runOnUiThread(new Runnable(){
                @Override public void run(){
                  Toast.makeText(MapActivity.this,res.error,Toast.LENGTH_LONG).show();
                }
              }
);
            }
            dlg.dismiss();
            if (useRouting) {
              runOnUiThread(new Runnable(){
                @Override public void run(){
                  useGPXRouting(endForRouting,res);
                }
              }
);
            }
 else {
              settings.SHOW_FAVORITES.set(true);
              List<FavouritePoint> pts=new ArrayList<FavouritePoint>();
              for (              WptPt p : res.wayPoints) {
                FavouritePoint pt=new FavouritePoint();
                pt.setLatitude(p.lat);
                pt.setLongitude(p.lon);
                pt.setName(p.name);
                pts.add(pt);
              }
              getFavoritesHelper().setFavoritePointsFromGPXFile(pts);
              gpxLayer.setTracks(res.locations);
            }
            mapView.refreshMap();
          }
        }
,"Loading gpx").start();
      }
    }
);
    builder.show();
  }
}
