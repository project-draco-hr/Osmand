{
  super.onResume();
  cancelNotification();
  if (settings.MAP_SCREEN_ORIENTATION.get() != getRequestedOrientation()) {
    setRequestedOrientation(settings.MAP_SCREEN_ORIENTATION.get());
  }
  app.getLocationProvider().checkIfLastKnownLocationIsValid();
  if (settings.AUDIO_STREAM_GUIDANCE.get() != null) {
    setVolumeControlStream(settings.AUDIO_STREAM_GUIDANCE.get());
  }
 else {
    setVolumeControlStream(AudioManager.STREAM_MUSIC);
  }
  applicationModeListener=new StateChangedListener<ApplicationMode>(){
    @Override public void stateChanged(    ApplicationMode change){
      updateApplicationModeSettings();
    }
  }
;
  settings.APPLICATION_MODE.addListener(applicationModeListener);
  updateApplicationModeSettings();
  String filterId=settings.getPoiFilterForMap();
  PoiFilter poiFilter=app.getPoiFilters().getFilterById(filterId);
  if (poiFilter == null) {
    poiFilter=new PoiFilter(null,app);
  }
  mapLayers.getPoiMapLayer().setFilter(poiFilter);
  TargetPointsHelper targets=app.getTargetPointsHelper();
  RoutingHelper routingHelper=app.getRoutingHelper();
  if (routingHelper.isFollowingMode() && (!Algorithms.objectEquals(targets.getPointToNavigate(),routingHelper.getFinalLocation()) || !Algorithms.objectEquals(targets.getIntermediatePoints(),routingHelper.getIntermediatePoints()))) {
    targets.updateRoutingHelper();
  }
  app.getLocationProvider().resumeAllUpdates();
  if (settings != null && settings.isLastKnownMapLocation()) {
    LatLon l=settings.getLastKnownMapLocation();
    mapView.setLatLon(l.getLatitude(),l.getLongitude());
    mapView.setIntZoom(settings.getLastKnownMapZoom());
  }
  settings.MAP_ACTIVITY_ENABLED.set(true);
  checkExternalStorage();
  showAndHideMapPosition();
  LatLon cur=new LatLon(mapView.getLatitude(),mapView.getLongitude());
  LatLon latLonToShow=settings.getAndClearMapLocationToShow();
  String mapLabelToShow=settings.getAndClearMapLabelToShow();
  Object toShow=settings.getAndClearObjectToShow();
  if (settings.isRouteToPointNavigateAndClear()) {
    Location loc=new Location("map");
    loc.setLatitude(mapView.getLatitude());
    loc.setLongitude(mapView.getLongitude());
    getMapActions().enterRoutePlanningMode(null,null);
  }
  if (mapLabelToShow != null && latLonToShow != null) {
    mapLayers.getContextMenuLayer().setSelectedObject(toShow);
    mapLayers.getContextMenuLayer().setLocation(latLonToShow,mapLabelToShow);
  }
  if (latLonToShow != null && !latLonToShow.equals(cur)) {
    mapView.getAnimatedDraggingThread().startMoving(latLonToShow.getLatitude(),latLonToShow.getLongitude(),settings.getMapZoomToShow(),true);
  }
  if (latLonToShow != null) {
    mapViewTrackingUtilities.setMapLinkedToLocation(false);
  }
  final Intent intent=getIntent();
  if (intent != null) {
    if (Intent.ACTION_VIEW.equals(intent.getAction())) {
      if (intent.getData() != null) {
        final Uri data=intent.getData();
        final String scheme=data.getScheme();
        if ("file".equals(scheme)) {
          if (data.getPath().endsWith("kml")) {
            showImportedKml(new File(data.getPath()));
          }
 else {
            showImportedGpx(new File(data.getPath()));
          }
        }
 else         if ("google.navigation".equals(scheme) || "osmand.navigation".equals(scheme)) {
          final String schemeSpecificPart=data.getSchemeSpecificPart();
          final Matcher matcher=Pattern.compile("q=(.+?),(.+?)").matcher(schemeSpecificPart);
          if (matcher.matches()) {
            try {
              final double lat=Double.valueOf(matcher.group(1));
              final double lon=Double.valueOf(matcher.group(2));
              getMyApplication().getTargetPointsHelper().navigateToPoint(new LatLon(lat,lon),false,-1);
              getMapActions().enterRoutePlanningMode(null,null);
            }
 catch (            NumberFormatException e) {
              AccessibleToast.makeText(this,getString(R.string.navigation_intent_invalid,schemeSpecificPart),Toast.LENGTH_LONG).show();
            }
          }
 else {
            AccessibleToast.makeText(this,getString(R.string.navigation_intent_invalid,schemeSpecificPart),Toast.LENGTH_LONG).show();
          }
        }
      }
    }
  }
  View progress=mapLayers.getMapInfoLayer().getProgressBar();
  if (progress != null) {
    app.getResourceManager().setBusyIndicator(new BusyIndicator(this,progress));
  }
  OsmandPlugin.onMapActivityResume(this);
  mapView.refreshMap(true);
}
