{
  super.onResume();
  cancelNotification();
  if (settings.MAP_SCREEN_ORIENTATION.get() != getRequestedOrientation()) {
    setRequestedOrientation(settings.MAP_SCREEN_ORIENTATION.get());
  }
  app.getLocationProvider().checkIfLastKnownLocationIsValid();
  if (settings.AUDIO_STREAM_GUIDANCE.get() != null) {
    setVolumeControlStream(settings.AUDIO_STREAM_GUIDANCE.get());
  }
 else {
    setVolumeControlStream(AudioManager.STREAM_MUSIC);
  }
  applicationModeListener=new StateChangedListener<ApplicationMode>(){
    @Override public void stateChanged(    ApplicationMode change){
      updateApplicationModeSettings();
    }
  }
;
  settings.APPLICATION_MODE.addListener(applicationModeListener);
  updateApplicationModeSettings();
  String filterId=settings.getPoiFilterForMap();
  PoiFilter poiFilter=app.getPoiFilters().getFilterById(filterId);
  if (poiFilter == null) {
    poiFilter=new PoiFilter(null,app);
  }
  mapLayers.getPoiMapLayer().setFilter(poiFilter);
  TargetPointsHelper targets=app.getTargetPointsHelper();
  RoutingHelper routingHelper=app.getRoutingHelper();
  if (routingHelper.isFollowingMode() && (!Algorithms.objectEquals(targets.getPointToNavigate(),routingHelper.getFinalLocation()) || !Algorithms.objectEquals(targets.getIntermediatePoints(),routingHelper.getIntermediatePoints()))) {
    routingHelper.setFinalAndCurrentLocation(targets.getPointToNavigate(),targets.getIntermediatePoints(),app.getLocationProvider().getLastKnownLocation(),routingHelper.getCurrentGPXRoute());
  }
  app.getLocationProvider().resumeAllUpdates();
  if (settings != null && settings.isLastKnownMapLocation()) {
    LatLon l=settings.getLastKnownMapLocation();
    mapView.setLatLon(l.getLatitude(),l.getLongitude());
    mapView.setZoom(settings.getLastKnownMapZoom());
  }
  settings.MAP_ACTIVITY_ENABLED.set(true);
  checkExternalStorage();
  showAndHideMapPosition();
  LatLon cur=new LatLon(mapView.getLatitude(),mapView.getLongitude());
  LatLon latLonToShow=settings.getAndClearMapLocationToShow();
  String mapLabelToShow=settings.getAndClearMapLabelToShow();
  Object toShow=settings.getAndClearObjectToShow();
  if (settings.isRouteToPointNavigateAndClear()) {
    Location loc=new Location("map");
    loc.setLatitude(mapView.getLatitude());
    loc.setLongitude(mapView.getLongitude());
    mapActions.getDirections(loc,DirectionDialogStyle.create());
  }
  if (mapLabelToShow != null && latLonToShow != null) {
    mapLayers.getContextMenuLayer().setSelectedObject(toShow);
    mapLayers.getContextMenuLayer().setLocation(latLonToShow,mapLabelToShow);
  }
  if (latLonToShow != null && !latLonToShow.equals(cur)) {
    mapView.getAnimatedDraggingThread().startMoving(latLonToShow.getLatitude(),latLonToShow.getLongitude(),settings.getMapZoomToShow(),true);
  }
  if (latLonToShow != null) {
    mapViewTrackingUtilities.setMapLinkedToLocation(false);
  }
  View progress=mapLayers.getMapInfoLayer().getProgressBar();
  if (progress != null) {
    app.getResourceManager().setBusyIndicator(new BusyIndicator(this,progress));
  }
  OsmandPlugin.onMapActivityResume(this);
  mapView.refreshMap(true);
}
