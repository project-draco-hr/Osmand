{
  if (Log.isLoggable(LogUtil.TAG,Log.DEBUG)) {
    Log.d(LogUtil.TAG,"Location changed " + location.getProvider());
  }
  if (location != null) {
    long locationTime=System.currentTimeMillis();
    if (!location.hasAccuracy() || location.getAccuracy() < ACCURACY_FOR_GPX_AND_ROUTING) {
      if (settings.SAVE_TRACK_TO_GPX.get()) {
        savingTrackHelper.insertData(location.getLatitude(),location.getLongitude(),location.getAltitude(),location.getSpeed(),location.getAccuracy(),locationTime,settings);
      }
      if (settings.LIVE_MONITORING.get()) {
        liveMonitoringHelper.insertData(location.getLatitude(),location.getLongitude(),location.getAltitude(),location.getSpeed(),location.getAccuracy(),location.getTime(),settings);
      }
    }
  }
  if (location != null && isRunningOnEmulator()) {
    updateSpeedBearingEmulator(location);
  }
  navigationInfo.setLocation(location);
  boolean enableSensorNavigation=routingHelper.isFollowingMode() && settings.USE_COMPASS_IN_NAVIGATION.get() ? location == null || !location.hasBearing() : false;
  registerUnregisterSensor(location,enableSensorNavigation);
  Location updatedLocation=location;
  if (routingHelper.isFollowingMode()) {
    if (location == null || !location.hasAccuracy() || location.getAccuracy() < ACCURACY_FOR_GPX_AND_ROUTING) {
      updatedLocation=routingHelper.setCurrentLocation(location,settings.SNAP_TO_ROAD.get());
      if (!routingHelper.isFollowingMode()) {
        Message msg=Message.obtain(uiHandler,new Runnable(){
          @Override public void run(){
            settings.APPLICATION_MODE.set(settings.PREV_APPLICATION_MODE.get());
            updateApplicationModeSettings();
          }
        }
);
        uiHandler.sendMessage(msg);
      }
      if (location != null && routingHelper.getLeftDistance() > 0) {
        final long fixTime=location.getTime();
        Message msg=Message.obtain(uiHandler,new Runnable(){
          @Override public void run(){
            Location lastKnown=getLastKnownLocation();
            if (lastKnown != null && lastKnown.getTime() - fixTime < LOST_LOCATION_CHECK_DELAY / 2) {
              return;
            }
            if (routingHelper.getLeftDistance() > 0 && settings.MAP_ACTIVITY_ENABLED.get()) {
              routingHelper.getVoiceRouter().gpsLocationLost();
            }
          }
        }
);
        msg.what=LOST_LOCATION_MSG_ID;
        uiHandler.removeMessages(LOST_LOCATION_MSG_ID);
        uiHandler.sendMessageDelayed(msg,LOST_LOCATION_CHECK_DELAY);
      }
    }
  }
  mapLayers.getLocationLayer().setLastKnownLocation(updatedLocation);
  if (location != null) {
    updateAutoMapViewConfiguration(updatedLocation);
  }
 else {
    if (mapLayers.getMapInfoLayer().getBackToLocation().isEnabled()) {
      mapLayers.getMapInfoLayer().getBackToLocation().setEnabled(false);
    }
  }
  mapView.refreshMap();
}
