{
  RoutingHelper rh=app.getRoutingHelper();
  if (newRoute && rh.isRoutePlanningMode() && mapView != null) {
    Location lt=rh.getLastProjection();
    if (lt == null) {
      lt=app.getTargetPointsHelper().getPointToStartLocation();
    }
    if (lt != null) {
      double left=lt.getLongitude(), right=lt.getLongitude();
      double top=lt.getLatitude(), bottom=lt.getLatitude();
      List<Location> list=rh.getCurrentCalculatedRoute();
      for (      Location l : list) {
        left=Math.min(left,l.getLongitude());
        right=Math.max(right,l.getLongitude());
        top=Math.max(top,l.getLatitude());
        bottom=Math.min(bottom,l.getLatitude());
      }
      List<TargetPoint> targetPoints=app.getTargetPointsHelper().getIntermediatePointsWithTarget();
      for (      TargetPoint l : targetPoints) {
        left=Math.min(left,l.getLongitude());
        right=Math.max(right,l.getLongitude());
        top=Math.max(top,l.getLatitude());
        bottom=Math.min(bottom,l.getLatitude());
      }
      RotatedTileBox tb=mapView.getCurrentRotatedTileBox().copy();
      int tileBoxWidthPx=0;
      int tileBoxHeightPx=0;
      MapRouteInfoMenu routeInfoMenu=mapLayers.getMapControlsLayer().getMapRouteInfoMenu();
      WeakReference<MapRouteInfoMenuFragment> fragmentRef=routeInfoMenu.findMenuFragment();
      if (fragmentRef != null) {
        MapRouteInfoMenuFragment f=fragmentRef.get();
        if (landscapeLayout) {
          tileBoxWidthPx=tb.getPixWidth() - f.getWidth();
        }
 else {
          tileBoxHeightPx=tb.getPixHeight() - f.getHeight();
        }
      }
      mapView.fitRectToMap(left,right,top,bottom,tileBoxWidthPx,tileBoxHeightPx,0);
    }
  }
}
