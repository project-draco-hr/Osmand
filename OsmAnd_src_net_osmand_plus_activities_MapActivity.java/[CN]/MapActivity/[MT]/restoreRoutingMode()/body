{
  final String gpxPath=settings.FOLLOW_THE_GPX_ROUTE.get();
  final TargetPointsHelper targetPoints=getTargetPoints();
  final LatLon pointToNavigate=targetPoints.getPointToNavigate();
  if (pointToNavigate == null && gpxPath == null) {
    notRestoreRoutingMode();
  }
 else {
    quitRouteRestoreDialog=false;
    Runnable encapsulate=new Runnable(){
      int delay=7;
      Runnable delayDisplay=null;
      @Override public void run(){
        Builder builder=new AccessibleAlertBuilder(MapActivity.this);
        final TextView tv=new TextView(MapActivity.this);
        tv.setText(getString(R.string.continue_follow_previous_route_auto,delay + ""));
        tv.setPadding(7,5,7,5);
        builder.setView(tv);
        builder.setPositiveButton(R.string.default_buttons_yes,new DialogInterface.OnClickListener(){
          @Override public void onClick(          DialogInterface dialog,          int which){
            quitRouteRestoreDialog=true;
            restoreRoutingModeInner();
          }
        }
);
        builder.setNegativeButton(R.string.default_buttons_no,new DialogInterface.OnClickListener(){
          @Override public void onClick(          DialogInterface dialog,          int which){
            quitRouteRestoreDialog=true;
            notRestoreRoutingMode();
          }
        }
);
        final AlertDialog dlg=builder.show();
        dlg.setOnDismissListener(new OnDismissListener(){
          @Override public void onDismiss(          DialogInterface dialog){
            quitRouteRestoreDialog=true;
          }
        }
);
        dlg.setOnCancelListener(new OnCancelListener(){
          @Override public void onCancel(          DialogInterface dialog){
            quitRouteRestoreDialog=true;
          }
        }
);
        delayDisplay=new Runnable(){
          @Override public void run(){
            if (!quitRouteRestoreDialog) {
              delay--;
              tv.setText(getString(R.string.continue_follow_previous_route_auto,delay + ""));
              if (delay <= 0) {
                if (dlg.isShowing() && !quitRouteRestoreDialog) {
                  dlg.dismiss();
                }
                quitRouteRestoreDialog=true;
                restoreRoutingModeInner();
              }
 else {
                uiHandler.postDelayed(delayDisplay,1000);
              }
            }
          }
        }
;
        delayDisplay.run();
      }
      private void restoreRoutingModeInner(){
        AsyncTask<String,Void,GPXFile> task=new AsyncTask<String,Void,GPXFile>(){
          @Override protected GPXFile doInBackground(          String... params){
            if (gpxPath != null) {
              GPXFile f=GPXUtilities.loadGPXFile(MapActivity.this,new File(gpxPath),false);
              if (f.warning != null) {
                return null;
              }
              return f;
            }
 else {
              return null;
            }
          }
          @Override protected void onPostExecute(          GPXFile result){
            final GPXRouteParams gpxRoute=result == null ? null : new GPXRouteParams(result,false,settings);
            LatLon endPoint=pointToNavigate != null ? pointToNavigate : gpxRoute.getLastPoint();
            Location startPoint=gpxRoute == null ? null : gpxRoute.getStartPointForRoute();
            if (endPoint == null) {
              notRestoreRoutingMode();
            }
 else {
              followRoute(settings.getApplicationMode(),endPoint,targetPoints.getIntermediatePoints(),startPoint,gpxRoute);
            }
          }
        }
;
        task.execute(gpxPath);
      }
    }
;
    encapsulate.run();
  }
}
