{
  Map<String,String> map=new LinkedHashMap<String,String>();
  for (  String tag : tags.keySet()) {
    String val=tags.get(tag);
    MapRulType rType=getAmenityRuleType(tag,val);
    if (rType != null && val != null && val.length() > 0) {
      if (rType == nameEnRuleType && Algorithms.objectEquals(val,tags.get(OSMTagKey.NAME))) {
        continue;
      }
      if (rType.targetTagValue != null) {
        rType=rType.targetTagValue;
      }
      if (rType.isAdditionalOrText()) {
        boolean applied=rType.applyToTagValue == null;
        if (!applied) {
          Iterator<TagValuePattern> it=rType.applyToTagValue.iterator();
          while (!applied && it.hasNext()) {
            TagValuePattern nv=it.next();
            applied=nv.isApplicable(tags);
          }
        }
        if (applied) {
          if (!rType.isText() && !Algorithms.isEmpty(rType.tagValuePattern.value)) {
            val=rType.tagValuePattern.value;
          }
          map.put(rType.tagValuePattern.tag,val);
        }
      }
    }
  }
  return map;
}
