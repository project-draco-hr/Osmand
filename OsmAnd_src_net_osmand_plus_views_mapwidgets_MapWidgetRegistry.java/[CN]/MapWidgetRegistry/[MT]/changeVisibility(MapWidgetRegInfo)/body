{
  boolean selecteable=m.selecteable();
  if (selecteable) {
    ApplicationMode mode=settings.APPLICATION_MODE.get();
    boolean visible=m.visible(mode);
    boolean collapseEnabled=m.collapseEnabled(mode);
    boolean collapse=m.visibleCollapsed(mode);
    if (this.visibleElements.get(mode) == null) {
      LinkedHashSet<String> set=new LinkedHashSet<String>();
      restoreModes(set,left,mode);
      restoreModes(set,right,mode);
      restoreModes(set,top,mode);
      this.visibleElements.put(mode,set);
    }
    this.visibleElements.get(mode).remove(m.key);
    this.visibleElements.get(mode).remove("+" + m.key);
    this.visibleElements.get(mode).remove("-" + m.key);
    m.visibleModes.remove(mode);
    if (m.visibleCollapsible != null) {
      m.visibleCollapsible.remove(mode);
    }
    if (visible || collapse) {
      if (collapseEnabled && !collapse) {
        m.visibleCollapsible.add(mode);
        this.visibleElements.get(mode).add("+" + m.key);
      }
 else {
        this.visibleElements.get(mode).add("-" + m.key);
      }
    }
 else {
      m.visibleModes.add(mode);
      this.visibleElements.get(mode).add("" + m.key);
    }
    StringBuilder bs=new StringBuilder();
    for (    String ks : this.visibleElements.get(mode)) {
      bs.append(ks).append(";");
    }
    settings.MAP_INFO_CONTROLS.set(bs.toString());
  }
  if (m.stateChangeListener != null) {
    m.stateChangeListener.run();
  }
}
