{
  MapWidgetRegInfo ii=new MapWidgetRegInfo();
  ii.key=key;
  ii.visibleModes=new LinkedHashSet<ApplicationMode>();
  ii.visibleCollapsible=new LinkedHashSet<ApplicationMode>();
  for (  ApplicationMode ms : ApplicationMode.values(settings)) {
    boolean collapse=ms.isWidgetCollapsible(key);
    boolean def=ms.isWidgetVisible(key);
    Set<String> set=visibleElementsFromSettings.get(ms);
    if (set != null) {
      if (set.contains(key)) {
        def=true;
        collapse=false;
      }
 else       if (set.contains("-" + key)) {
        def=false;
        collapse=false;
      }
 else       if (set.contains("+" + key)) {
        def=false;
        collapse=true;
      }
    }
    if (def) {
      ii.visibleModes.add(ms);
    }
 else     if (collapse) {
      ii.visibleCollapsible.add(ms);
    }
  }
  if (widget != null)   widget.setContentTitle(widget.getContext().getString(messageId));
  ii.drawableDark=drawableDark;
  ii.drawableLight=drawableLight;
  ii.messageId=messageId;
  ii.widget=widget;
  ii.priorityOrder=priorityOrder;
  if (left) {
    this.left.add(ii);
  }
 else {
    this.right.add(ii);
  }
}
