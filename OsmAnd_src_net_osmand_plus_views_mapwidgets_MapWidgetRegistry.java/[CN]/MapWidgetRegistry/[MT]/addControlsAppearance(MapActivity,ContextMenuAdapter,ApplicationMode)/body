{
  addControlId(map,cm,R.string.map_widget_show_destination_arrow,settings.SHOW_DESTINATION_ARROW);
  addControlId(map,cm,R.string.map_widget_transparent,settings.TRANSPARENT_MAP_THEME);
  addControlId(map,cm,R.string.always_center_position_on_map,settings.CENTER_POSITION_ON_MAP);
  if (mode != ApplicationMode.DEFAULT) {
    addControlId(map,cm,R.string.map_widget_top_text,settings.SHOW_STREET_NAME);
  }
  if (settings.USE_MAP_MARKERS.get()) {
    cm.item(R.string.map_markers).description(settings.MAP_MARKERS_MODE.get().toHumanString(map)).listen(new OnContextMenuClick(){
      @Override public boolean onContextMenuClick(      final ArrayAdapter<?> ad,      int itemId,      final int pos,      boolean isChecked){
        final OsmandMapTileView view=map.getMapView();
        AlertDialog.Builder bld=new AlertDialog.Builder(view.getContext());
        bld.setTitle(R.string.map_markers);
        final String[] items=new String[MapMarkersMode.values().length];
        for (int i=0; i < items.length; i++) {
          items[i]=MapMarkersMode.values()[i].toHumanString(map);
        }
        int i=settings.MAP_MARKERS_MODE.get().ordinal();
        bld.setSingleChoiceItems(items,i,new DialogInterface.OnClickListener(){
          @Override public void onClick(          DialogInterface dialog,          int which){
            settings.MAP_MARKERS_MODE.set(MapMarkersMode.values()[which]);
            for (            MapWidgetRegInfo info : right) {
              if ("map_marker_1st".equals(info.key) || "map_marker_2nd".equals(info.key)) {
                changeVisibility(info,settings.MAP_MARKERS_MODE.get().isWidgets());
              }
            }
            MapInfoLayer mil=map.getMapLayers().getMapInfoLayer();
            if (mil != null) {
              mil.recreateControls();
            }
            map.refreshMap();
            dialog.dismiss();
            cm.setItemDescription(pos,settings.MAP_MARKERS_MODE.get().toHumanString(map));
            ad.notifyDataSetChanged();
          }
        }
);
        bld.show();
        return false;
      }
    }
).layout(R.layout.drawer_list_doubleitem).reg();
  }
}
