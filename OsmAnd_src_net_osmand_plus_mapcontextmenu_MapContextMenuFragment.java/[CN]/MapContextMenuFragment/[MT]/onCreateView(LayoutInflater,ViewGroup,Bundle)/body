{
  view=inflater.inflate(R.layout.map_context_menu_fragment,container,false);
  View shadowView=view.findViewById(R.id.context_menu_shadow_view);
  shadowView.setOnTouchListener(new View.OnTouchListener(){
    public boolean onTouch(    View view,    MotionEvent event){
      dismissMenu();
      return true;
    }
  }
);
  View topView=view.findViewById(R.id.context_menu_top_view);
  mainView=view.findViewById(R.id.context_menu_main);
  topView.setOnTouchListener(new View.OnTouchListener(){
    private float dy;
    @Override public boolean onTouch(    View v,    MotionEvent event){
switch (event.getAction()) {
case MotionEvent.ACTION_DOWN:
        dy=event.getY();
      mainViewHeight=mainView.getHeight();
    break;
case MotionEvent.ACTION_MOVE:
  float y=event.getY();
mainView.setY(mainView.getY() + (y - dy));
break;
case MotionEvent.ACTION_UP:
case MotionEvent.ACTION_CANCEL:
float posY=view.getHeight() - mainViewHeight;
if (mainView.getY() != posY) mainView.animate().y(posY).setDuration(200).setInterpolator(new DecelerateInterpolator()).start();
break;
}
return true;
}
}
);
IconsCache iconsCache=getMyApplication().getIconsCache();
boolean light=getMyApplication().getSettings().isLightContent();
int iconId=MapContextMenu.getInstance().getLeftIconId();
final View iconLayout=view.findViewById(R.id.context_menu_icon_layout);
final ImageView iconView=(ImageView)view.findViewById(R.id.context_menu_icon_view);
if (iconId == 0) {
iconLayout.setVisibility(View.GONE);
}
 else {
iconView.setImageDrawable(iconsCache.getIcon(iconId,light ? R.color.icon_color : R.color.icon_color_light));
}
TextView line1=(TextView)view.findViewById(R.id.context_menu_line1);
line1.setText(MapContextMenu.getInstance().getAddressStr());
TextView line2=(TextView)view.findViewById(R.id.context_menu_line2);
line2.setText(MapContextMenu.getInstance().getLocationStr());
final ImageView closeButtonView=(ImageView)view.findViewById(R.id.context_menu_close_btn_view);
closeButtonView.setImageDrawable(iconsCache.getIcon(R.drawable.ic_action_remove_dark,light ? R.color.actionbar_dark_color : R.color.actionbar_light_color));
closeButtonView.setOnClickListener(new View.OnClickListener(){
@Override public void onClick(View v){
((MapActivity)getActivity()).getMapLayers().getContextMenuLayer().hideMapContextMenuMarker();
dismissMenu();
}
}
);
final ImageButton buttonNavigate=(ImageButton)view.findViewById(R.id.context_menu_route_button);
buttonNavigate.setImageDrawable(iconsCache.getIcon(R.drawable.map_directions,light ? R.color.actionbar_dark_color : R.color.actionbar_light_color));
buttonNavigate.setOnClickListener(new View.OnClickListener(){
@Override public void onClick(View v){
MapContextMenu.getInstance().buttonNavigatePressed();
}
}
);
final ImageButton buttonFavorite=(ImageButton)view.findViewById(R.id.context_menu_fav_button);
buttonFavorite.setImageDrawable(iconsCache.getIcon(R.drawable.ic_action_fav_dark,light ? R.color.actionbar_dark_color : R.color.actionbar_light_color));
buttonFavorite.setOnClickListener(new View.OnClickListener(){
@Override public void onClick(View v){
MapContextMenu.getInstance().buttonFavoritePressed();
}
}
);
final ImageButton buttonShare=(ImageButton)view.findViewById(R.id.context_menu_share_button);
buttonShare.setImageDrawable(iconsCache.getIcon(R.drawable.abc_ic_menu_share_mtrl_alpha,light ? R.color.actionbar_dark_color : R.color.actionbar_light_color));
buttonShare.setOnClickListener(new View.OnClickListener(){
@Override public void onClick(View v){
MapContextMenu.getInstance().buttonSharePressed();
}
}
);
final ImageButton buttonMore=(ImageButton)view.findViewById(R.id.context_menu_more_button);
buttonMore.setImageDrawable(iconsCache.getIcon(R.drawable.ic_action_core_overflow_dark,light ? R.color.actionbar_dark_color : R.color.actionbar_light_color));
buttonMore.setOnClickListener(new View.OnClickListener(){
@Override public void onClick(View v){
MapContextMenu.getInstance().buttonMorePressed();
}
}
);
BottomSectionBuilder bottomSectionBuilder=MapContextMenu.getInstance().getBottomSectionBuilder();
if (bottomSectionBuilder != null) {
View bottomView=view.findViewById(R.id.context_menu_bottom_view);
bottomView.setOnTouchListener(new View.OnTouchListener(){
@Override public boolean onTouch(View v,MotionEvent event){
return true;
}
}
);
bottomSectionBuilder.buildSection(bottomView);
}
return view;
}
