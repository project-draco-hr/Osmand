{
  boolean showTitleButtonsContainer=(leftTitleButtonController != null || rightTitleButtonController != null);
  final View titleButtonsContainer=view.findViewById(R.id.title_button_container);
  titleButtonsContainer.setVisibility(showTitleButtonsContainer ? View.VISIBLE : View.GONE);
  final Button leftTitleButton=(Button)view.findViewById(R.id.title_button);
  final TextView titleButtonRightText=(TextView)view.findViewById(R.id.title_button_right_text);
  if (leftTitleButtonController != null) {
    leftTitleButton.setText(leftTitleButtonController.caption);
    leftTitleButton.setVisibility(leftTitleButtonController.visible ? View.VISIBLE : View.GONE);
    Drawable leftIcon=leftTitleButtonController.getLeftIcon();
    if (leftIcon != null) {
      leftTitleButton.setCompoundDrawablesWithIntrinsicBounds(leftIcon,null,null,null);
      leftTitleButton.setCompoundDrawablePadding(dpToPx(4f));
    }
    if (leftTitleButtonController.needRightText) {
      titleButtonRightText.setText(leftTitleButtonController.rightTextCaption);
      titleButtonRightText.setVisibility(View.VISIBLE);
    }
 else {
      titleButtonRightText.setVisibility(View.GONE);
    }
  }
 else {
    leftTitleButton.setVisibility(View.GONE);
    titleButtonRightText.setVisibility(View.GONE);
  }
  final Button rightTitleButton=(Button)view.findViewById(R.id.title_button_right);
  if (rightTitleButtonController != null) {
    rightTitleButton.setText(rightTitleButtonController.caption);
    rightTitleButton.setVisibility(rightTitleButtonController.visible ? View.VISIBLE : View.GONE);
    Drawable leftIcon=rightTitleButtonController.getLeftIcon();
    rightTitleButton.setCompoundDrawablesWithIntrinsicBounds(leftIcon,null,null,null);
    rightTitleButton.setCompoundDrawablePadding(dpToPx(4f));
  }
 else {
    rightTitleButton.setVisibility(View.GONE);
  }
  final Button topRightTitleButton=(Button)view.findViewById(R.id.title_button_top_right);
  if (topRightTitleButtonController != null) {
    topRightTitleButton.setText(topRightTitleButtonController.caption);
    topRightTitleButton.setVisibility(topRightTitleButtonController.visible ? View.VISIBLE : View.INVISIBLE);
    Drawable leftIcon=topRightTitleButtonController.getLeftIcon();
    topRightTitleButton.setCompoundDrawablesWithIntrinsicBounds(leftIcon,null,null,null);
    topRightTitleButton.setCompoundDrawablePadding(dpToPx(4f));
  }
 else {
    topRightTitleButton.setVisibility(View.GONE);
  }
  boolean showDownloadButtonsContainer=((leftDownloadButtonController != null && leftDownloadButtonController.visible) || (rightDownloadButtonController != null && rightDownloadButtonController.visible)) && (titleProgressController == null || !titleProgressController.visible);
  final View downloadButtonsContainer=view.findViewById(R.id.download_buttons_container);
  downloadButtonsContainer.setVisibility(showDownloadButtonsContainer ? View.VISIBLE : View.GONE);
  if (showDownloadButtonsContainer) {
    view.findViewById(R.id.download_buttons_top_border).setVisibility(showTitleButtonsContainer ? View.VISIBLE : View.INVISIBLE);
    if (showTitleButtonsContainer) {
      LinearLayout.LayoutParams ll=(LinearLayout.LayoutParams)downloadButtonsContainer.getLayoutParams();
      if (ll.topMargin != 0) {
        ll.setMargins(0,0,0,0);
      }
    }
  }
  final Button leftDownloadButton=(Button)view.findViewById(R.id.download_button_left);
  if (leftDownloadButtonController != null) {
    leftDownloadButton.setText(leftDownloadButtonController.caption);
    leftDownloadButton.setVisibility(leftDownloadButtonController.visible ? View.VISIBLE : View.GONE);
    Drawable leftIcon=leftDownloadButtonController.getLeftIcon();
    if (leftIcon != null) {
      leftDownloadButton.setCompoundDrawablesWithIntrinsicBounds(leftIcon,null,null,null);
      leftDownloadButton.setCompoundDrawablePadding(dpToPx(4f));
    }
  }
 else {
    leftDownloadButton.setVisibility(View.GONE);
  }
  final Button rightDownloadButton=(Button)view.findViewById(R.id.download_button_right);
  if (rightDownloadButtonController != null) {
    rightDownloadButton.setText(rightDownloadButtonController.caption);
    rightDownloadButton.setVisibility(rightDownloadButtonController.visible ? View.VISIBLE : View.GONE);
    Drawable leftIcon=rightDownloadButtonController.getLeftIcon();
    rightDownloadButton.setCompoundDrawablesWithIntrinsicBounds(leftIcon,null,null,null);
    rightDownloadButton.setCompoundDrawablePadding(dpToPx(4f));
  }
 else {
    rightDownloadButton.setVisibility(View.GONE);
  }
  final View titleProgressContainer=view.findViewById(R.id.title_progress_container);
  if (titleProgressController != null) {
    titleProgressContainer.setVisibility(titleProgressController.visible ? View.VISIBLE : View.GONE);
    if (titleProgressController.visible && showTitleButtonsContainer) {
      LinearLayout.LayoutParams ll=(LinearLayout.LayoutParams)titleProgressContainer.getLayoutParams();
      if (ll.topMargin != 0) {
        ll.setMargins(0,0,0,0);
      }
    }
    final ProgressBar progressBar=(ProgressBar)view.findViewById(R.id.progressBar);
    final TextView progressTitle=(TextView)view.findViewById(R.id.progressTitle);
    progressTitle.setText(titleProgressController.caption);
    progressBar.setIndeterminate(titleProgressController.indeterminate);
    progressBar.setProgress(titleProgressController.progress);
    final ImageView progressButton=(ImageView)view.findViewById(R.id.progressButton);
    progressButton.setVisibility(titleProgressController.buttonVisible ? View.VISIBLE : View.GONE);
  }
 else {
    titleProgressContainer.setVisibility(View.GONE);
  }
}
