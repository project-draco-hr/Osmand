{
  if (id == -1) {
    return null;
  }
  if (id < -1 && name != null) {
    name=name.toUpperCase();
  }
  final String cmpName=name;
  preloadCities(null);
  if (!cities.containsKey(id)) {
    try {
      getOpenFile().getCities(BinaryMapIndexReader.buildAddressRequest(new ResultMatcher<City>(){
        boolean canceled=false;
        @Override public boolean isCancelled(){
          return canceled;
        }
        @Override public boolean publish(        City object){
          if (id < -1) {
            if (object.getName().toUpperCase().equals(cmpName)) {
              addCityToPreloadedList(object);
              canceled=true;
            }
          }
 else           if (object.getId() != null && object.getId().longValue() == id) {
            addCityToPreloadedList((City)object);
            canceled=true;
          }
          return false;
        }
      }
),id < -1 ? BinaryMapAddressReaderAdapter.POSTCODES_TYPE : BinaryMapAddressReaderAdapter.VILLAGES_TYPE);
    }
 catch (    IOException e) {
      log.error("Disk operation failed",e);
    }
  }
  return cities.get(id);
}
