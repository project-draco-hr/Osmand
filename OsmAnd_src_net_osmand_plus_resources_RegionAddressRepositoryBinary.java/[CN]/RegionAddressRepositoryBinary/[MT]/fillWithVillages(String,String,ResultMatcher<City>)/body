{
  List<City> result=new ArrayList<City>();
  List<City> foundCities=file.getCities(BinaryMapIndexReader.buildAddressRequest(new ResultMatcher<City>(){
    List<City> cache=new ArrayList<City>();
    @Override public boolean publish(    City c){
      if (c.getLocation() != null) {
        City ct=getClosestCity(c.getLocation(),cache);
        c.setClosestCity(ct);
      }
      return resultMatcher.publish(c);
    }
    @Override public boolean isCancelled(){
      return resultMatcher.isCancelled();
    }
  }
),new CollatorStringMatcher(name,StringMatcherMode.CHECK_STARTS_FROM_SPACE),lang,BinaryMapAddressReaderAdapter.VILLAGES_TYPE);
  for (  City c : foundCities) {
    result.add(c);
    if (resultMatcher.isCancelled()) {
      return result;
    }
  }
  return result;
}
