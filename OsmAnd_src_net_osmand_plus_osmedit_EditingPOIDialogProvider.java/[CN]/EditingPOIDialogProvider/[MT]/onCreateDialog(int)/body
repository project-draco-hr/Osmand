{
  Bundle args=dialogBundle;
switch (id) {
case DIALOG_DELETE_POI:
    return createDeleteDialog(args);
case DIALOG_SUB_CATEGORIES:
{
    Builder builder=new AlertDialog.Builder(activity);
    final Amenity a=(Amenity)args.getSerializable(KEY_AMENITY);
    final Map<String,PoiType> allTranslatedNames=poiTypes.getAllTranslatedNames(a.getType(),true);
    final String[] subCats=allTranslatedNames.keySet().toArray(new String[0]);
    builder.setItems(subCats,new DialogInterface.OnClickListener(){
      @Override public void onClick(      DialogInterface dialog,      int which){
        PoiType poiType=allTranslatedNames.get(subCats[which]);
        typeText.setText(poiType.getKeyName());
        a.setSubType(subCats[which]);
        activity.removeDialog(DIALOG_SUB_CATEGORIES);
      }
    }
);
    builder.setOnCancelListener(new DialogInterface.OnCancelListener(){
      @Override public void onCancel(      DialogInterface dialog){
        activity.removeDialog(DIALOG_SUB_CATEGORIES);
      }
    }
);
    return builder.create();
  }
case DIALOG_POI_TYPES:
{
  final Amenity a=(Amenity)args.getSerializable(KEY_AMENITY);
  Builder builder=new AlertDialog.Builder(activity);
  final List<PoiCategory> categories=poiTypes.getCategories();
  String[] vals=new String[categories.size()];
  for (int i=0; i < vals.length; i++) {
    vals[i]=categories.get(i).getTranslation();
  }
  builder.setItems(vals,new Dialog.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      PoiCategory aType=categories.get(which);
      if (aType != a.getType()) {
        a.setType(aType);
        a.setSubType("");
        updateType(a);
      }
      activity.removeDialog(DIALOG_POI_TYPES);
    }
  }
);
  builder.setOnCancelListener(new DialogInterface.OnCancelListener(){
    @Override public void onCancel(    DialogInterface dialog){
      activity.removeDialog(DIALOG_POI_TYPES);
    }
  }
);
  return builder.create();
}
case DIALOG_OPENING_HOURS:
{
return createOpenHoursDlg();
}
}
return null;
}
