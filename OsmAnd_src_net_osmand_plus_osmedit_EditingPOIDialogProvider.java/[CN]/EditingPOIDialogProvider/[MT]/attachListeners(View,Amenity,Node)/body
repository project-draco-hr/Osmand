{
  typeText.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showSubCategory(a);
    }
  }
);
  typeText.setOnLongClickListener(new View.OnLongClickListener(){
    @Override public boolean onLongClick(    View v){
      showSubCategory(a);
      return true;
    }
  }
);
  openHoursButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      activity.showDialog(DIALOG_OPENING_HOURS);
    }
  }
);
  typeText.addTextChangedListener(new TextWatcher(){
    @Override public void afterTextChanged(    Editable s){
      String str=s.toString();
      a.setSubType(str);
      PoiType st=allTranslatedSubTypes.get(str.trim().toLowerCase());
      if (st != null && a.getType() != st.getCategory() && st.getCategory() != null) {
        a.setType(st.getCategory());
        typeButton.setText(st.getCategory().getTranslation());
        updateSubTypesAdapter(st.getCategory());
      }
      updateOsmTagValue(a);
    }
    @Override public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){
    }
    @Override public void onTextChanged(    CharSequence s,    int start,    int before,    int count){
    }
  }
);
  typeButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      activity.showDialog(DIALOG_POI_TYPES);
    }
  }
);
  final Button advancedModeButton=((Button)dlg.findViewById(R.id.advancedMode));
  advancedModeButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      final TableLayout layout=((TableLayout)dlg.findViewById(R.id.advancedModeTable));
      TableLayout.LayoutParams tlParams=new TableLayout.LayoutParams(TableLayout.LayoutParams.FILL_PARENT,TableLayout.LayoutParams.WRAP_CONTENT);
      layout.setLayoutParams(tlParams);
      layout.setColumnStretchable(1,true);
      layout.setVisibility((layout.getVisibility() == View.VISIBLE) ? View.GONE : View.VISIBLE);
      Button addTag=(Button)dlg.findViewById(R.id.addTag);
      addTag.setVisibility((layout.getVisibility() == View.VISIBLE) ? View.VISIBLE : View.GONE);
      if (layout.getVisibility() == View.VISIBLE) {
        addTag.setOnClickListener(new View.OnClickListener(){
          @Override public void onClick(          View v){
            addTagValueRow(n,layout,null,null);
          }
        }
);
      }
      while (layout.getChildCount() > 0) {
        layout.removeViewAt(0);
      }
      layout.requestLayout();
      for (      String tg : n.getTagKeySet()) {
        if (!tg.equals(OSMTagKey.NAME.getValue()) && !tg.equals(OSMTagKey.OPENING_HOURS.getValue()) && !tg.equals(OSMTagKey.PHONE.getValue())&& !tg.equals(OSMTagKey.WEBSITE.getValue())) {
          if (a == null || a.getType() == null || !a.getType().getDefaultTag().equals(tg)) {
            addTagValueRow(n,layout,tg,n.getTag(tg));
          }
        }
      }
    }
  }
);
}
