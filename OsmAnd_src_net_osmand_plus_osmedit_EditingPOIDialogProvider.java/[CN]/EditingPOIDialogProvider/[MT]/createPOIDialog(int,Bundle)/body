{
  final View view=activity.getLayoutInflater().inflate(R.layout.editing_poi,null);
  final Builder dlg=new Builder(activity);
  dlg.setView(view);
switch (dialogID) {
case DIALOG_CREATE_POI:
    dlg.setTitle(R.string.poi_create_title);
  break;
case DIALOG_EDIT_POI:
dlg.setTitle(R.string.poi_edit_title);
break;
}
nameText=((EditText)view.findViewById(R.id.Name));
openingHours=((EditText)view.findViewById(R.id.OpeningHours));
typeText=((AutoCompleteTextView)view.findViewById(R.id.Type));
typeButton=((Button)view.findViewById(R.id.TypeButton));
osmTagValue=((TextView)view.findViewById(R.id.OsmTagValue));
openHoursButton=((Button)view.findViewById(R.id.OpenHoursButton));
typeText=((AutoCompleteTextView)view.findViewById(R.id.Type));
typeText.setThreshold(1);
commentText=((EditText)view.findViewById(R.id.Comment));
phoneText=((EditText)view.findViewById(R.id.Phone));
hnoText=((EditText)view.findViewById(R.id.HouseNumber));
streetNameText=((EditText)view.findViewById(R.id.StreetName));
websiteText=((EditText)view.findViewById(R.id.Website));
closeChange=((CheckBox)view.findViewById(R.id.CloseChangeset));
closeChange.setVisibility(isLocalEdit ? View.GONE : View.VISIBLE);
TextView linkToOsmDoc=(TextView)view.findViewById(R.id.LinkToOsmDoc);
linkToOsmDoc.setOnClickListener(new View.OnClickListener(){
@Override public void onClick(View v){
activity.startActivity(new Intent(Intent.ACTION_VIEW,Uri.parse("https://wiki.openstreetmap.org/wiki/Map_Features")));
}
}
);
linkToOsmDoc.setMovementMethod(LinkMovementMethod.getInstance());
final Amenity amenity=(Amenity)args.getSerializable(KEY_AMENITY);
final Node node=(Node)args.getSerializable(KEY_AMENITY_NODE);
dlg.setNegativeButton(R.string.shared_string_cancel,null);
dlg.setPositiveButton(isLocalEdit ? R.string.shared_string_save : R.string.default_buttons_commit,new DialogInterface.OnClickListener(){
@Override public void onClick(DialogInterface dialog,int which){
Resources resources=view.getResources();
final String msg=node.getId() == -1 ? resources.getString(R.string.poi_action_add) : resources.getString(R.string.poi_action_change);
OsmPoint.Action action=node.getId() == -1 ? OsmPoint.Action.CREATE : OsmPoint.Action.MODIFY;
String subType=typeText.getText().toString().trim().toLowerCase();
if (allTranslatedSubTypes.get(subType) != null) {
PoiType pt=allTranslatedSubTypes.get(subType);
node.putTag(pt.getOsmTag(),pt.getOsmValue());
if (pt.getOsmTag2() != null) {
  node.putTag(pt.getOsmTag2(),pt.getOsmValue2());
}
}
 else {
node.putTag(amenity.getType().getDefaultTag(),subType);
}
String name=nameText.getText().toString();
if (name.length() > 0) {
node.putTag(OSMTagKey.NAME.getValue(),name);
}
if (openingHours.getText().toString().length() == 0) {
node.removeTag(OSMTagKey.OPENING_HOURS.getValue());
}
 else {
node.putTag(OSMTagKey.OPENING_HOURS.getValue(),openingHours.getText().toString());
}
String website=websiteText.getText().toString();
if (website.length() > 0) {
node.putTag(OSMTagKey.WEBSITE.getValue(),website);
}
 else {
node.removeTag(OSMTagKey.WEBSITE.getValue());
}
String phone=phoneText.getText().toString();
if (phone.length() > 0) {
node.putTag(OSMTagKey.PHONE.getValue(),phone);
}
 else {
node.removeTag(OSMTagKey.PHONE.getValue());
}
String str=streetNameText.getText().toString();
if (str.length() > 0) {
node.putTag(OSMTagKey.ADDR_STREET.getValue(),str);
}
 else {
node.removeTag(OSMTagKey.ADDR_STREET.getValue());
}
String hno=hnoText.getText().toString();
if (hno.length() > 0) {
node.putTag(OSMTagKey.ADDR_HOUSE_NUMBER.getValue(),hno);
}
 else {
node.removeTag(OSMTagKey.ADDR_HOUSE_NUMBER.getValue());
}
commitNode(action,node,openstreetmapUtil.getEntityInfo(),commentText.getText().toString(),closeChange.isSelected(),new Runnable(){
@Override public void run(){
  if (isLocalEdit) {
    AccessibleToast.makeText(activity,R.string.osm_changes_added_to_local_edits,Toast.LENGTH_LONG).show();
  }
 else {
    AccessibleToast.makeText(activity,MessageFormat.format(activity.getResources().getString(R.string.poi_action_succeded_template),msg),Toast.LENGTH_LONG).show();
  }
  if (activity instanceof MapActivity) {
    ((MapActivity)activity).getMapView().refreshMap(true);
  }
  activity.removeDialog(dialogID);
}
}
);
}
}
);
preparePOIDialog(view,args);
attachListeners(view,amenity,node);
updateOsmTagValue(amenity);
return dlg;
}
