{
  RenderingRuleProperty[] properties=rule.getProperties();
  for (int i=0; i < properties.length; i++) {
    RenderingRuleProperty rp=properties[i];
    if (rp.isOutputProperty()) {
      if (!isSpecified(rp) || override) {
        RenderingRule rr=rule.getAttrProp(i);
        if (rr != null) {
          visitRule(rr,true);
          if (isSpecified(storage.PROPS.R_ATTR_COLOR_VALUE)) {
            values[rp.getId()]=getIntPropertyValue(storage.PROPS.R_ATTR_COLOR_VALUE);
          }
 else           if (isSpecified(storage.PROPS.R_ATTR_INT_VALUE)) {
            values[rp.getId()]=getIntPropertyValue(storage.PROPS.R_ATTR_INT_VALUE);
            fvalues[rp.getId()]=getFloatPropertyValue(storage.PROPS.R_ATTR_INT_VALUE);
          }
        }
 else         if (rp.isFloat()) {
          fvalues[rp.getId()]=rule.getFloatProp(i);
          values[rp.getId()]=rule.getIntProp(i);
        }
 else {
          values[rp.getId()]=rule.getIntProp(i);
        }
      }
    }
  }
}
