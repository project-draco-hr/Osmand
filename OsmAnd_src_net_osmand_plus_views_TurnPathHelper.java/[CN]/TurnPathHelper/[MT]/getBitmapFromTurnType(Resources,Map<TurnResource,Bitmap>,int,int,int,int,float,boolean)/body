{
  int firstTurnType=TurnType.valueOf(firstTurn,leftSide).getValue();
  int secondTurnType=TurnType.valueOf(secondTurn,leftSide).getValue();
  int thirdTurnType=TurnType.valueOf(thirdTurn,leftSide).getValue();
  TurnResource turnResource=null;
  if (turnIndex == FIRST_TURN) {
    if (secondTurnType == 0) {
      turnResource=getTallArrow(firstTurnType);
    }
 else     if (secondTurnType == TurnType.C || thirdTurnType == TurnType.C) {
      turnResource=getShortArrow(firstTurnType);
    }
 else {
      if (firstTurnType == TurnType.TU || firstTurnType == TurnType.TRU) {
        turnResource=getShortArrow(firstTurnType);
      }
 else {
        turnResource=getTallArrow(firstTurnType);
      }
    }
  }
 else   if (turnIndex == SECOND_TURN) {
    if (TurnType.isLeftTurn(firstTurnType) && TurnType.isLeftTurn(secondTurnType)) {
      turnResource=null;
    }
 else     if (TurnType.isRightTurn(firstTurnType) && TurnType.isRightTurn(secondTurnType)) {
      turnResource=null;
    }
 else     if (firstTurnType == TurnType.C || thirdTurnType == TurnType.C) {
      turnResource=getShortArrow(secondTurnType);
    }
 else {
      turnResource=getTallArrow(secondTurnType);
    }
  }
 else   if (turnIndex == THIRD_TURN) {
    if ((TurnType.isLeftTurn(firstTurnType) || TurnType.isLeftTurn(secondTurnType)) && TurnType.isLeftTurn(thirdTurnType)) {
      turnResource=null;
    }
 else     if ((TurnType.isRightTurn(firstTurnType) || TurnType.isRightTurn(secondTurnType)) && TurnType.isRightTurn(thirdTurnType)) {
      turnResource=null;
    }
 else {
      turnResource=getShortArrow(thirdTurnType);
    }
  }
  if (turnResource == null) {
    return null;
  }
  Bitmap b=cache.get(turnResource);
  if (b == null) {
    b=turnResource.flip ? getFlippedBitmap(res,turnResource.resourceId) : BitmapFactory.decodeResource(res,turnResource.resourceId);
    cache.put(turnResource,b);
  }
  return b;
}
