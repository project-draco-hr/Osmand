{
  View row=convertView;
  final BasicOpeningHourRule item=getItem(position);
  if (item == null) {
    TextView text=new TextView(getContext());
    text.setText(ctx.getString(R.string.add_new_rule));
    text.setTextSize(21);
    text.setTypeface(null,Typeface.ITALIC);
    text.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        BasicOpeningHourRule r=new BasicOpeningHourRule();
        r.setStartTime(timePickerStart.getCurrentHour() * 60 + timePickerStart.getCurrentMinute());
        r.setEndTime(timePickerEnd.getCurrentHour() * 60 + timePickerEnd.getCurrentMinute());
        boolean[] days=r.getDays();
        if (position == 0) {
          Arrays.fill(days,true);
        }
        showDaysDialog(r,position);
      }
    }
);
    return text;
  }
  if (row == null || row instanceof TextView) {
    LayoutInflater inflater=(LayoutInflater)ctx.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
    row=inflater.inflate(R.layout.open_hours_list_item,parent,false);
  }
  TextView label=(TextView)row.findViewById(R.id.label);
  ImageView icon=(ImageView)row.findViewById(R.id.remove);
  icon.setBackgroundDrawable(app.getIconsCache().getContentIcon(R.drawable.ic_action_remove_dark));
  if (selectedRule == position) {
    label.setTypeface(null,Typeface.BOLD);
    label.setTextSize(22);
  }
 else {
    label.setTypeface(null);
    label.setTextSize(20);
  }
  label.setText(item.toRuleString(false));
  icon.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      time.remove(item);
      selectedRule=time.getPosition(null);
      updateTimePickers();
    }
  }
);
  View.OnClickListener clickListener=new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (selectedRule == position) {
        showDaysDialog(item,-1);
      }
 else {
        selectedRule=position;
        updateTimePickers();
        time.notifyDataSetChanged();
      }
    }
  }
;
  label.setOnClickListener(clickListener);
  return row;
}
