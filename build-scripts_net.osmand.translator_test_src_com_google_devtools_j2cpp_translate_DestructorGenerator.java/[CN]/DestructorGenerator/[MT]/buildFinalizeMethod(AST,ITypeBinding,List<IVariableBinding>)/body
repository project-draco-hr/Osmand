{
  ITypeBinding voidType=Types.mapTypeName("void");
  GeneratedMethodBinding binding=new GeneratedMethodBinding(destructorName,Modifier.PUBLIC,voidType,declaringClass,false,false,true);
  MethodDeclaration method=ast.newMethodDeclaration();
  Types.addBinding(method,binding);
  method.setName(ast.newSimpleName(destructorName));
  Types.addBinding(method.getName(),binding);
  @SuppressWarnings("unchecked") List<Modifier> modifiers=method.modifiers();
  modifiers.add(ast.newModifier(ModifierKeyword.PUBLIC_KEYWORD));
  method.setBody(ast.newBlock());
  addReleaseStatements(method,fields);
  Type returnType=ast.newPrimitiveType(PrimitiveType.VOID);
  Types.addBinding(returnType,ast.resolveWellKnownType("void"));
  method.setReturnType2(returnType);
  return method;
}
