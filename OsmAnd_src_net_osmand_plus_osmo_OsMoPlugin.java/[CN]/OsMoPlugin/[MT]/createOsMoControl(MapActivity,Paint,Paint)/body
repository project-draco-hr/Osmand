{
  final Drawable srcSmall=map.getResources().getDrawable(R.drawable.mon_osmo_conn_small);
  final Drawable srcSignalSmall=map.getResources().getDrawable(R.drawable.mon_osmo_conn_signal_small);
  final Drawable srcBig=map.getResources().getDrawable(R.drawable.mon_osmo_conn_big);
  final Drawable srcSignalBig=map.getResources().getDrawable(R.drawable.mon_osmo_conn_signal_big);
  final Drawable srcinactive=map.getResources().getDrawable(R.drawable.monitoring_rec_inactive);
  final TextInfoWidget osmoControl=new TextInfoWidget(map,0,paintText,paintSubText){
    long lastUpdateTime;
    private Drawable blinkImg;
    @Override public boolean updateInfo(    DrawSettings drawSettings){
      boolean visible=true;
      String txt="OsMo";
      String subtxt="";
      SessionInfo si=getService().getCurrentSessionInfo();
      if (si != null) {
        String uname=si.username;
        if (uname != null && uname.length() > 0) {
          if (uname.length() > 7 && uname.indexOf(' ') != -1) {
            uname=uname.substring(0,uname.indexOf(' '));
          }
          if (uname.length() > 4 && uname.indexOf(' ') != -1) {
            txt="";
            subtxt=uname;
          }
 else {
            txt=uname;
          }
        }
      }
      Drawable small=srcinactive;
      Drawable big=srcinactive;
      long last=service.getLastCommandTime();
      if (service.isActive()) {
        small=tracker.isEnabledTracker() ? srcSignalSmall : srcSmall;
        big=tracker.isEnabledTracker() ? srcSignalBig : srcBig;
      }
      setText(txt,subtxt);
      if (blinkImg != small) {
        setImageDrawable(small);
      }
      if (last != lastUpdateTime) {
        lastUpdateTime=last;
        blink(big,small);
      }
      updateVisibility(visible);
      return true;
    }
    private void blink(    Drawable bigger,    final Drawable smaller){
      blinkImg=smaller;
      setImageDrawable(bigger);
      invalidate();
      postDelayed(new Runnable(){
        @Override public void run(){
          blinkImg=null;
          setImageDrawable(smaller);
          requestLayout();
          invalidate();
        }
      }
,500);
    }
  }
;
  osmoControl.updateInfo(null);
  osmoControl.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      Intent intent=new Intent(map,OsMoGroupsActivity.class);
      map.startActivity(intent);
    }
  }
);
  return osmoControl;
}
