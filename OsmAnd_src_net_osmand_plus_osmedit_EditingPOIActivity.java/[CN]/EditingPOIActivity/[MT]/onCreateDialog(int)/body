{
  Bundle args=dialogBundle;
switch (id) {
case DIALOG_CREATE_POI:
case DIALOG_EDIT_POI:
    return createPOIDialog(id,args);
case DIALOG_DELETE_POI:
  return createDeleteDialog(args);
case DIALOG_SUB_CATEGORIES:
{
  Builder builder=new AlertDialog.Builder(ctx);
  final Amenity a=(Amenity)args.getSerializable(KEY_AMENITY);
  final String[] subCats=MapRenderingTypes.getDefault().getAmenitySubCategories(a.getType()).toArray(new String[0]);
  builder.setItems(subCats,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      typeText.setText(subCats[which]);
      a.setSubType(subCats[which]);
      ctx.removeDialog(DIALOG_SUB_CATEGORIES);
    }
  }
);
  builder.setOnCancelListener(new DialogInterface.OnCancelListener(){
    @Override public void onCancel(    DialogInterface dialog){
      ctx.removeDialog(DIALOG_SUB_CATEGORIES);
    }
  }
);
  return builder.create();
}
case DIALOG_POI_TYPES:
{
final Amenity a=(Amenity)args.getSerializable(KEY_AMENITY);
Builder builder=new AlertDialog.Builder(ctx);
final AmenityType[] categories=AmenityType.getCategories();
String[] vals=new String[categories.length];
for (int i=0; i < vals.length; i++) {
  vals[i]=OsmAndFormatter.toPublicString(categories[i],ctx.getMyApplication());
}
builder.setItems(vals,new Dialog.OnClickListener(){
  @Override public void onClick(  DialogInterface dialog,  int which){
    AmenityType aType=categories[which];
    if (aType != a.getType()) {
      a.setType(aType);
      a.setSubType("");
      updateType(a);
    }
    ctx.removeDialog(DIALOG_POI_TYPES);
  }
}
);
builder.setOnCancelListener(new DialogInterface.OnCancelListener(){
  @Override public void onCancel(  DialogInterface dialog){
    ctx.removeDialog(DIALOG_POI_TYPES);
  }
}
);
return builder.create();
}
case DIALOG_OPENING_HOURS:
{
return createOpenHoursDlg();
}
}
return null;
}
