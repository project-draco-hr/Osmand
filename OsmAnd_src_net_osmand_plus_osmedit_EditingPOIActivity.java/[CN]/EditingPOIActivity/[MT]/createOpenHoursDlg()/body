{
  OpeningHours time=OpeningHoursParser.parseOpenedHours(openingHours.getText().toString());
  if (time == null) {
    AccessibleToast.makeText(ctx,ctx.getString(R.string.opening_hours_not_supported),Toast.LENGTH_LONG).show();
    return null;
  }
  List<BasicOpeningHourRule> simple=null;
  if (time != null) {
    simple=new ArrayList<BasicOpeningHourRule>();
    for (    OpeningHoursRule r : time.getRules()) {
      if (r instanceof BasicOpeningHourRule) {
        simple.add((BasicOpeningHourRule)r);
      }
 else {
        time=null;
        break;
      }
    }
  }
  Builder builder=new AlertDialog.Builder(ctx);
  final OpeningHoursView v=new OpeningHoursView(ctx);
  builder.setView(v.createOpeningHoursEditView(simple));
  builder.setPositiveButton(ctx.getString(R.string.default_buttons_apply),new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      OpeningHours oh=new OpeningHours((ArrayList<OpeningHoursRule>)v.getTime());
      openingHours.setText(oh.toString());
      ctx.removeDialog(DIALOG_OPENING_HOURS);
    }
  }
);
  builder.setNegativeButton(ctx.getString(R.string.shared_string_cancel),new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      ctx.removeDialog(DIALOG_OPENING_HOURS);
    }
  }
);
  return builder.create();
}
