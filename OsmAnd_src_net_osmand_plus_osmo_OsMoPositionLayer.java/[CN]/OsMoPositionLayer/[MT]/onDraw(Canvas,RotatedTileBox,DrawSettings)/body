{
  final int r=getRadiusPoi(tb);
  long treshold=System.currentTimeMillis() - 15000;
  for (  OsMoDevice t : getTrackingDevices()) {
    Location l=t.getLastLocation();
    if (l != null) {
      ConcurrentLinkedQueue<Location> plocations=t.getPreviousLocations(treshold);
      int x=(int)tb.getPixXFromLatLon(l.getLatitude(),l.getLongitude());
      int y=(int)tb.getPixYFromLatLon(l.getLatitude(),l.getLongitude());
      if (plocations.size() > 0) {
        pth.rewind();
        Iterator<Location> it=plocations.iterator();
        boolean f=true;
        while (it.hasNext()) {
          Location lo=it.next();
          int xt=(int)tb.getPixXFromLatLon(lo.getLatitude(),lo.getLongitude());
          int yt=(int)tb.getPixYFromLatLon(lo.getLatitude(),lo.getLongitude());
          if (f) {
            f=false;
            pth.moveTo(xt,yt);
          }
 else {
            pth.lineTo(xt,yt);
          }
        }
        pth.lineTo(x,y);
        paintPath.setColor(t.getColor());
        canvas.drawPath(pth,paintPath);
      }
      pointInnerCircle.setColor(t.getColor());
      canvas.drawCircle(x,y,r + 2,pointOuter);
      canvas.drawCircle(x,y,r - 2,pointInnerCircle);
      paintTextIcon.setTextSize(r);
      canvas.drawText(t.getVisibleName().substring(0,1),x,y,paintTextIcon);
    }
  }
}
