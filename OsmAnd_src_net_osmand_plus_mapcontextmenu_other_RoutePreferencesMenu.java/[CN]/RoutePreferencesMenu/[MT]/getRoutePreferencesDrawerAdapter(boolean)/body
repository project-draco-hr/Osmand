{
  listAdapter=new ArrayAdapter<LocalRoutingParameter>(mapActivity,R.layout.layers_list_activity_item,R.id.title,getRoutingParameters(routingHelper.getAppMode())){
    @Override public View getView(    final int position,    View convertView,    ViewGroup parent){
      LocalRoutingParameter parameter=getItem(position);
      if (parameter instanceof MuteSoundRoutingParameter) {
        View v=mapActivity.getLayoutInflater().inflate(R.layout.switch_select_list_item,null);
        AndroidUtils.setListItemBackground(mapActivity,v,nightMode);
        v.findViewById(R.id.description_text).setVisibility(View.GONE);
        v.findViewById(R.id.select_button).setVisibility(View.GONE);
        ((ImageView)v.findViewById(R.id.icon)).setImageDrawable(app.getIconsCache().getContentIcon(R.drawable.ic_action_volume_up,!nightMode));
        final CompoundButton btn=(CompoundButton)v.findViewById(R.id.check_item);
        btn.setVisibility(View.VISIBLE);
        btn.setChecked(!routingHelper.getVoiceRouter().isMute());
        btn.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){
          @Override public void onCheckedChanged(          CompoundButton buttonView,          boolean isChecked){
            switchSound();
          }
        }
);
        TextView tv=(TextView)v.findViewById(R.id.header_text);
        AndroidUtils.setTextPrimaryColor(mapActivity,tv,nightMode);
        tv.setText(getString(R.string.shared_string_sound));
        return v;
      }
      if (parameter instanceof AvoidRoadsRoutingParameter) {
        View v=mapActivity.getLayoutInflater().inflate(R.layout.switch_select_list_item,null);
        AndroidUtils.setListItemBackground(mapActivity,v,nightMode);
        ((ImageView)v.findViewById(R.id.icon)).setImageDrawable(app.getIconsCache().getContentIcon(R.drawable.ic_action_road_works_dark,!nightMode));
        v.findViewById(R.id.check_item).setVisibility(View.GONE);
        final TextView btn=(TextView)v.findViewById(R.id.select_button);
        btn.setTextColor(btn.getLinkTextColors());
        btn.setOnClickListener(new View.OnClickListener(){
          @Override public void onClick(          View v){
            selectRestrictedRoads();
          }
        }
);
        TextView tv=(TextView)v.findViewById(R.id.header_text);
        AndroidUtils.setTextPrimaryColor(mapActivity,tv,nightMode);
        tv.setText(getString(R.string.impassable_road));
        TextView tvDesc=(TextView)v.findViewById(R.id.description_text);
        AndroidUtils.setTextSecondaryColor(mapActivity,tvDesc,nightMode);
        tvDesc.setText(getString(R.string.impassable_road_desc));
        return v;
      }
      if (parameter instanceof VoiceGuidanceRoutingParameter) {
        View v=mapActivity.getLayoutInflater().inflate(R.layout.switch_select_list_item,null);
        AndroidUtils.setListItemBackground(mapActivity,v,nightMode);
        v.findViewById(R.id.icon).setVisibility(View.GONE);
        v.findViewById(R.id.description_text).setVisibility(View.GONE);
        v.findViewById(R.id.check_item).setVisibility(View.GONE);
        final TextView btn=(TextView)v.findViewById(R.id.select_button);
        btn.setTextColor(btn.getLinkTextColors());
        String voiceProvider=settings.VOICE_PROVIDER.get();
        String voiceProviderStr;
        if (voiceProvider != null) {
          if (OsmandSettings.VOICE_PROVIDER_NOT_USE.equals(voiceProvider)) {
            voiceProviderStr=getString(R.string.shared_string_do_not_use);
          }
 else {
            voiceProviderStr=FileNameTranslationHelper.getVoiceName(mapActivity,voiceProvider);
          }
          voiceProviderStr+=voiceProvider.contains("tts") ? " TTS" : "";
        }
 else {
          voiceProviderStr=getString(R.string.shared_string_not_selected);
        }
        btn.setText(voiceProviderStr);
        btn.setOnClickListener(new View.OnClickListener(){
          @Override public void onClick(          View v){
            doSelectVoiceGuidance();
          }
        }
);
        TextView tv=(TextView)v.findViewById(R.id.header_text);
        AndroidUtils.setTextPrimaryColor(mapActivity,tv,nightMode);
        tv.setText(getString(R.string.voice_provider));
        return v;
      }
      if (parameter instanceof InterruptMusicRoutingParameter) {
        View v=mapActivity.getLayoutInflater().inflate(R.layout.switch_select_list_item,null);
        AndroidUtils.setListItemBackground(mapActivity,v,nightMode);
        v.findViewById(R.id.select_button).setVisibility(View.GONE);
        v.findViewById(R.id.icon).setVisibility(View.GONE);
        final CompoundButton btn=(CompoundButton)v.findViewById(R.id.check_item);
        btn.setVisibility(View.VISIBLE);
        btn.setChecked(settings.INTERRUPT_MUSIC.get());
        btn.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){
          @Override public void onCheckedChanged(          CompoundButton buttonView,          boolean isChecked){
            switchMusic();
          }
        }
);
        TextView tv=(TextView)v.findViewById(R.id.header_text);
        AndroidUtils.setTextPrimaryColor(mapActivity,tv,nightMode);
        tv.setText(getString(R.string.interrupt_music));
        TextView tvDesc=(TextView)v.findViewById(R.id.description_text);
        AndroidUtils.setTextSecondaryColor(mapActivity,tvDesc,nightMode);
        tvDesc.setText(getString(R.string.interrupt_music_descr));
        return v;
      }
      if (parameter instanceof GpxLocalRoutingParameter) {
        View v=mapActivity.getLayoutInflater().inflate(R.layout.plan_route_gpx,null);
        AndroidUtils.setListItemBackground(mapActivity,v,nightMode);
        AndroidUtils.setTextPrimaryColor(mapActivity,(TextView)v.findViewById(R.id.GPXRouteTitle),nightMode);
        final TextView gpxSpinner=(TextView)v.findViewById(R.id.GPXRouteSpinner);
        AndroidUtils.setTextPrimaryColor(mapActivity,gpxSpinner,nightMode);
        ((ImageView)v.findViewById(R.id.dropDownIcon)).setImageDrawable(app.getIconsCache().getContentIcon(R.drawable.ic_action_arrow_drop_down,!nightMode));
        updateSpinnerItems(gpxSpinner);
        return v;
      }
      if (parameter instanceof OtherSettingsRoutingParameter) {
        View v=mapActivity.getLayoutInflater().inflate(R.layout.layers_list_activity_item,null);
        AndroidUtils.setListItemBackground(mapActivity,v,nightMode);
        final ImageView icon=(ImageView)v.findViewById(R.id.icon);
        icon.setImageDrawable(app.getIconsCache().getContentIcon(R.drawable.map_action_settings,!nightMode));
        icon.setVisibility(View.VISIBLE);
        TextView titleView=(TextView)v.findViewById(R.id.title);
        titleView.setText(R.string.routing_settings_2);
        AndroidUtils.setTextPrimaryColor(mapActivity,titleView,nightMode);
        v.findViewById(R.id.check_item).setVisibility(View.GONE);
        return v;
      }
      return inflateRoutingParameter(position);
    }
    private View inflateRoutingParameter(    final int position){
      View v=mapActivity.getLayoutInflater().inflate(R.layout.layers_list_activity_item,null);
      AndroidUtils.setListItemBackground(mapActivity,v,nightMode);
      final TextView tv=(TextView)v.findViewById(R.id.title);
      final CheckBox ch=((CheckBox)v.findViewById(R.id.check_item));
      final LocalRoutingParameter rp=getItem(position);
      AndroidUtils.setTextPrimaryColor(mapActivity,tv,nightMode);
      tv.setText(rp.getText(mapActivity));
      ch.setOnCheckedChangeListener(null);
      if (rp.routingParameter != null && rp.routingParameter.getId().equals("short_way")) {
        ch.setChecked(!settings.FAST_ROUTE_MODE.get());
      }
 else {
        ch.setChecked(rp.isSelected(settings));
      }
      ch.setVisibility(View.VISIBLE);
      ch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener(){
        @Override public void onCheckedChanged(        CompoundButton buttonView,        boolean isChecked){
          if (rp.routingParameter != null && rp.routingParameter.getId().equals("short_way")) {
            settings.FAST_ROUTE_MODE.set(!isChecked);
          }
          rp.setSelected(settings,isChecked);
          if (rp instanceof OtherLocalRoutingParameter) {
            updateGpxRoutingParameter((OtherLocalRoutingParameter)rp);
          }
          mapActivity.getRoutingHelper().recalculateRouteDueToSettingsChange();
        }
      }
);
      return v;
    }
  }
;
  return listAdapter;
}
