{
  View row=convertView;
  if (row == null) {
    LayoutInflater inflater=getLayoutInflater();
    row=inflater.inflate(R.layout.searchpoi_list,parent,false);
  }
  TextView label=(TextView)row.findViewById(R.id.poi_label);
  TextView distanceLabel=(TextView)row.findViewById(R.id.poidistance_label);
  ImageView icon=(ImageView)row.findViewById(R.id.poi_icon);
  Amenity amenity=getItem(position);
  LatLon lastKnownMapLocation=OsmandSettings.getLastKnownMapLocation(SearchPOIActivity.this);
  int dist=(int)(MapUtils.getDistance(amenity.getLocation(),lastKnownMapLocation.getLatitude(),lastKnownMapLocation.getLongitude()));
  String str=amenity.getStringWithoutType(OsmandSettings.usingEnglishNames(SearchPOIActivity.this));
  label.setText(str);
  if (amenity.getOpeningHours() != null) {
    List<OpeningHoursRule> rs=OpeningHoursParser.parseOpenedHours(amenity.getOpeningHours());
    if (rs == null) {
      icon.setImageResource(R.drawable.poi);
    }
 else {
      Calendar inst=Calendar.getInstance();
      inst.setTimeInMillis(System.currentTimeMillis());
      boolean work=false;
      for (      OpeningHoursRule p : rs) {
        if (p.isOpenedForTime(inst)) {
          work=true;
          break;
        }
      }
      if (work) {
        icon.setImageResource(R.drawable.opened_poi);
      }
 else {
        icon.setImageResource(R.drawable.closed_poi);
      }
    }
  }
 else {
    icon.setImageResource(R.drawable.poi);
  }
  distanceLabel.setText(" " + MapUtils.getFormattedDistance(dist));
  return (row);
}
