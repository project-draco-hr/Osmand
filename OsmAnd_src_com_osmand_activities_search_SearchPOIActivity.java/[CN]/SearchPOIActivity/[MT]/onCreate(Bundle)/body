{
  super.onCreate(icicle);
  setContentView(R.layout.searchpoi);
  searchPOILevel=(Button)findViewById(R.id.SearchPOILevelButton);
  searchArea=(TextView)findViewById(R.id.SearchAreaText);
  searchPOILevel.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      amenityAdapter.setNewModel(filter.searchFurther(lastKnownMapLocation.getLatitude(),lastKnownMapLocation.getLongitude()));
      searchArea.setText(filter.getSearchArea());
      searchPOILevel.setEnabled(filter.isSearchFurtherAvailable());
    }
  }
);
  Bundle bundle=this.getIntent().getExtras();
  String filterId=bundle.getString(AMENITY_FILTER);
  filter=PoiFiltersHelper.getFilterById(this,filterId);
  if (filter != null) {
    amenityAdapter=new AmenityAdapter(new ArrayList<Amenity>());
    setListAdapter(amenityAdapter);
    searchArea.setText(filter.getSearchArea());
  }
  ListView lv=getListView();
  lv.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener(){
    @Override public boolean onItemLongClick(    AdapterView<?> av,    View v,    int pos,    long id){
      Amenity amenity=((AmenityAdapter)getListAdapter()).getItem(pos);
      String format=amenity.getSimpleFormat(OsmandSettings.usingEnglishNames(v.getContext()));
      if (amenity.getOpeningHours() != null) {
        format+="\n" + getString(R.id.OpeningHours) + amenity.getOpeningHours();
      }
      Toast.makeText(v.getContext(),format,Toast.LENGTH_LONG).show();
      return true;
    }
  }
);
}
