{
  super.onCreate(icicle);
  setContentView(R.layout.searchpoi);
  uiHandler=new Handler();
  searchPOILevel=(Button)findViewById(R.id.SearchPOILevelButton);
  searchArea=(TextView)findViewById(R.id.SearchAreaText);
  searchPOILevel.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      amenityAdapter.setNewModel(filter.searchFurther(location.getLatitude(),location.getLongitude()));
      searchedLocation=location;
      searchArea.setText(filter.getSearchArea());
      searchPOILevel.setEnabled(filter.isSearchFurtherAvailable());
    }
  }
);
  Bundle bundle=this.getIntent().getExtras();
  String filterId=bundle.getString(AMENITY_FILTER);
  filter=PoiFiltersHelper.getFilterById(this,filterId);
  if (bundle.containsKey(SEARCH_LAT) && bundle.containsKey(SEARCH_LON)) {
    location=new Location("internal");
    location.setLatitude(bundle.getDouble(SEARCH_LAT));
    location.setLongitude(bundle.getDouble(SEARCH_LON));
    searchNearBy=false;
  }
 else {
    location=null;
    searchNearBy=true;
  }
  showOnMap=(Button)findViewById(R.id.ShowOnMap);
  showOnMap.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      OsmandSettings.setPoiFilterForMap(SearchPOIActivity.this,filter.getFilterId());
      OsmandSettings.setShowPoiOverMap(SearchPOIActivity.this,true);
      if (searchNearBy && location != null) {
        OsmandSettings.setMapLocationToShow(SearchPOIActivity.this,location.getLatitude(),location.getLongitude(),15);
      }
      Intent newIntent=new Intent(SearchPOIActivity.this,MapActivity.class);
      startActivity(newIntent);
    }
  }
);
  showOnMap.setEnabled(filter != null);
  if (filter != null) {
    amenityAdapter=new AmenityAdapter(new ArrayList<Amenity>());
    if (location == null) {
      filter.clearPreviousZoom();
    }
 else {
      searchedLocation=location;
      amenityAdapter.setNewModel(filter.initializeNewSearch(location.getLatitude(),location.getLongitude(),40));
    }
    setListAdapter(amenityAdapter);
    searchPOILevel.setEnabled(filter.isSearchFurtherAvailable());
    searchArea.setText(filter.getSearchArea());
  }
 else {
    searchPOILevel.setEnabled(false);
  }
  ListView lv=getListView();
  lv.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener(){
    @Override public boolean onItemLongClick(    AdapterView<?> av,    View v,    int pos,    long id){
      Amenity amenity=((AmenityAdapter)getListAdapter()).getItem(pos);
      String format=amenity.getSimpleFormat(OsmandSettings.usingEnglishNames(v.getContext()));
      if (amenity.getOpeningHours() != null) {
        format+="\n" + getString(R.string.opening_hours) + " : "+ amenity.getOpeningHours();
      }
      Toast.makeText(v.getContext(),format,Toast.LENGTH_LONG).show();
      return true;
    }
  }
);
}
