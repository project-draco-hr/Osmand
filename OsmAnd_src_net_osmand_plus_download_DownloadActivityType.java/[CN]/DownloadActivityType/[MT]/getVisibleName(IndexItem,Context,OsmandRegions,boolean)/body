{
  if (this == VOICE_FILE) {
    String fileName=indexItem.fileName;
    if (fileName.endsWith(IndexConstants.VOICE_INDEX_EXT_ZIP)) {
      return FileNameTranslationHelper.getVoiceName(ctx,getBasename(indexItem));
    }
 else     if (fileName.endsWith(IndexConstants.TTSVOICE_INDEX_EXT_ZIP)) {
      return FileNameTranslationHelper.getVoiceName(ctx,getBasename(indexItem));
    }
    return getBasename(indexItem);
  }
  final String basename=getBasename(indexItem);
  if (basename.endsWith(FileNameTranslationHelper.WIKI_NAME)) {
    return FileNameTranslationHelper.getWikiName(ctx,basename);
  }
  final String lc=basename.toLowerCase();
  String std=FileNameTranslationHelper.getStandardMapName(ctx,lc);
  if (std != null) {
    return std;
  }
  if (basename.contains("addresses-nationwide")) {
    final int ind=basename.indexOf("addresses-nationwide");
    String downloadName=basename.substring(0,ind - 1) + basename.substring(ind + "addresses-nationwide".length());
    return osmandRegions.getLocaleName(downloadName,includingParent) + " " + ctx.getString(R.string.index_item_nation_addresses);
  }
  return osmandRegions.getLocaleName(basename,includingParent);
}
