{
  Builder builder=new AlertDialog.Builder(this);
  ScrollView scroll=new ScrollView(this);
  ListView listView=new ListView(this);
  final LinkedHashSet<String> subCategories=new LinkedHashSet<String>(AmenityType.getSubCategories(amenity,MapRenderingTypes.getDefault()));
  List<String> subtypes=filter.getAcceptedSubtypes(amenity);
  boolean allSubTypesAccepted=subtypes == null;
  LinkedHashSet<String> acceptedCategories=subtypes == null ? null : new LinkedHashSet<String>(subtypes);
  if (subtypes != null) {
    for (    String s : acceptedCategories) {
      if (!subCategories.contains(s)) {
        subCategories.add(s);
      }
    }
  }
  final String[] array=subCategories.toArray(new String[0]);
  final boolean[] selected=new boolean[array.length];
  for (int i=0; i < selected.length; i++) {
    if (allSubTypesAccepted) {
      selected[i]=true;
    }
 else {
      selected[i]=acceptedCategories.contains(array[i]);
    }
  }
  scroll.addView(listView);
  builder.setView(scroll);
  builder.setNeutralButton(EditPOIFilterActivity.this.getText(R.string.close),new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      List<String> accepted=new ArrayList<String>();
      for (int i=0; i < selected.length; i++) {
        if (selected[i]) {
          accepted.add(array[i]);
        }
      }
      if (subCategories.size() == accepted.size()) {
        filter.selectSubTypesToAccept(amenity,null);
      }
 else       if (accepted.size() == 0) {
        filter.setTypeToAccept(amenity,false);
      }
 else {
        filter.selectSubTypesToAccept(amenity,accepted);
      }
      helper.editPoiFilter(filter);
      ((AmenityAdapter)EditPOIFilterActivity.this.getListAdapter()).notifyDataSetInvalidated();
    }
  }
);
  builder.setPositiveButton(EditPOIFilterActivity.this.getText(R.string.default_buttons_selectall),new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      filter.selectSubTypesToAccept(amenity,null);
      helper.editPoiFilter(filter);
      ((AmenityAdapter)EditPOIFilterActivity.this.getListAdapter()).notifyDataSetInvalidated();
    }
  }
);
  builder.setMultiChoiceItems(array,selected,new DialogInterface.OnMultiChoiceClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int item,    boolean isChecked){
      selected[item]=isChecked;
    }
  }
);
  builder.show();
}
