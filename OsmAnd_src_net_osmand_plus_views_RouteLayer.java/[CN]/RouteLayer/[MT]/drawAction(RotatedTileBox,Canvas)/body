{
  if (actionPoints.size() > 0) {
    canvas.rotate(-tb.getRotate(),tb.getCenterPixelX(),tb.getCenterPixelY());
    try {
      Path pth=new Path();
      Matrix matrix=new Matrix();
      boolean first=true;
      int x=0, px=0, py=0, y=0;
      for (int i=0; i < actionPoints.size(); i++) {
        Location o=actionPoints.get(i);
        if (o == null) {
          first=true;
          canvas.drawPath(pth,actionPaint);
          double angleRad=Math.atan2(y - py,x - px);
          double angle=(angleRad * 180 / Math.PI) + 90f;
          double distSegment=FloatMath.sqrt((y - py) * (y - py) + (x - px) * (x - px));
          if (distSegment == 0) {
            continue;
          }
          float pdx=x - px;
          float pdy=y - py;
          matrix.reset();
          matrix.postTranslate(0,-actionArrow.getHeight() / 2);
          matrix.postRotate((float)angle,actionArrow.getWidth() / 2,0);
          matrix.postTranslate(px + pdx - actionArrow.getWidth() / 2,py + pdy);
          canvas.drawBitmap(actionArrow,matrix,paintIconAction);
        }
 else {
          px=x;
          py=y;
          x=(int)tb.getPixXFromLatLon(o.getLatitude(),o.getLongitude());
          y=(int)tb.getPixYFromLatLon(o.getLatitude(),o.getLongitude());
          if (first) {
            pth.reset();
            pth.moveTo(x,y);
            first=false;
          }
 else {
            pth.lineTo(x,y);
          }
        }
      }
    }
  finally {
      canvas.rotate(tb.getRotate(),tb.getCenterPixelX(),tb.getCenterPixelY());
    }
  }
}
