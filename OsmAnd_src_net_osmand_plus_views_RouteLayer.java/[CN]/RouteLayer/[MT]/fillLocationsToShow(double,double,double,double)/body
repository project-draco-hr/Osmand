{
  points.clear();
  boolean previousVisible=false;
  Location lastFixedLocation=helper.getLastFixedLocation();
  if (lastFixedLocation != null) {
    if (leftLongitude <= lastFixedLocation.getLongitude() && lastFixedLocation.getLongitude() <= rightLongitude && bottomLatitude <= lastFixedLocation.getLatitude() && lastFixedLocation.getLatitude() <= topLatitude) {
      points.add(lastFixedLocation);
      previousVisible=true;
    }
  }
  List<Location> routeNodes=helper.getRoute().getNextLocations();
  for (int i=0; i < routeNodes.size(); i++) {
    Location ls=routeNodes.get(i);
    if (leftLongitude <= ls.getLongitude() && ls.getLongitude() <= rightLongitude && bottomLatitude <= ls.getLatitude() && ls.getLatitude() <= topLatitude) {
      points.add(ls);
      if (!previousVisible) {
        if (i > 0) {
          points.add(0,routeNodes.get(i - 1));
        }
 else         if (lastFixedLocation != null) {
          points.add(0,lastFixedLocation);
        }
      }
      previousVisible=true;
    }
 else     if (previousVisible) {
      points.add(ls);
      previousVisible=false;
      break;
    }
  }
}
