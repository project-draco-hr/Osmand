{
  View mainView=getView();
  final FavouritesDbHelper helper=getMyApplication().getFavorites();
  points=new ArrayList<FavouritePoint>(helper.getFavouritePoints());
  arrows.clear();
  if (points.size() == 0) {
    (mainView.findViewById(R.id.main_fav)).setVisibility(View.GONE);
    return;
  }
 else {
    (mainView.findViewById(R.id.main_fav)).setVisibility(View.VISIBLE);
  }
  Collections.sort(points,new Comparator<FavouritePoint>(){
    @Override public int compare(    FavouritePoint point,    FavouritePoint point2){
      int dist=(int)(MapUtils.getDistance(point.getLatitude(),point.getLongitude(),loc.getLatitude(),loc.getLongitude()));
      int dist2=(int)(MapUtils.getDistance(point2.getLatitude(),point2.getLongitude(),loc.getLatitude(),loc.getLongitude()));
      return (dist - dist2);
    }
  }
);
  LinearLayout favorites=(LinearLayout)mainView.findViewById(R.id.items);
  favorites.removeAllViews();
  if (points.size() > 3) {
    while (points.size() != 3) {
      points.remove(3);
    }
  }
  for (  final FavouritePoint point : points) {
    LayoutInflater inflater=getActivity().getLayoutInflater();
    View view=inflater.inflate(R.layout.favorites_list_item,null,false);
    TextView name=(TextView)view.findViewById(R.id.favourite_label);
    TextView label=(TextView)view.findViewById(R.id.distance);
    ImageView direction=(ImageView)view.findViewById(R.id.direction);
    view.findViewById(R.id.divider).setVisibility(View.VISIBLE);
    if (point.getCategory().length() > 0) {
      ((TextView)view.findViewById(R.id.group_name)).setText(point.getCategory());
    }
 else {
      view.findViewById(R.id.group_image).setVisibility(View.GONE);
    }
    ((ImageView)view.findViewById(R.id.favourite_icon)).setImageDrawable(FavoriteImageDrawable.getOrCreate(getActivity(),point.getColor()));
    if (loc != null) {
      direction.setVisibility(View.VISIBLE);
      updateArrow(getActivity(),loc,new LatLon(point.getLatitude(),point.getLongitude()),direction,10,R.drawable.ic_destination_arrow,heading);
    }
    arrows.add(direction);
    name.setText(point.getName());
    int dist=(int)(MapUtils.getDistance(point.getLatitude(),point.getLongitude(),loc.getLatitude(),loc.getLongitude()));
    String distance=OsmAndFormatter.getFormattedDistance(dist,getMyApplication()) + "  ";
    view.findViewById(R.id.navigate_to).setVisibility(View.VISIBLE);
    view.findViewById(R.id.navigate_to).setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View view){
        DirectionsDialogs.directionsToDialogAndLaunchMap(getActivity(),point.getLatitude(),point.getLongitude(),new PointDescription(PointDescription.POINT_TYPE_FAVORITE,point.getName()));
      }
    }
);
    label.setText(distance,TextView.BufferType.SPANNABLE);
    label.setTypeface(Typeface.DEFAULT,point.isVisible() ? Typeface.NORMAL : Typeface.ITALIC);
    view.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View view){
        getMyApplication().getSettings().setMapLocationToShow(point.getLatitude(),point.getLongitude(),15,new PointDescription(PointDescription.POINT_TYPE_FAVORITE,point.getName()),true,point);
        MapActivity.launchMapActivityMoveToTop(getActivity());
      }
    }
);
    favorites.addView(view);
  }
  updateLocation(location);
}
