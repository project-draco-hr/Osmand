{
  List<RegionCountry> countries=parseRegions();
  OsmAndRegions.Builder regions=OsmAndRegions.newBuilder();
  for (  RegionCountry c : countries) {
    regions.addRegions(c.convert());
  }
  String filePath="../OsmAnd-java/src/net/osmand/map/" + RegionRegistry.fileName;
  long t=-System.currentTimeMillis();
  FileOutputStream out=new FileOutputStream(filePath);
  OsmAndRegionInfo.newBuilder().setRegionInfo(regions).build().writeTo(out);
  out.close();
  InputStream in=RegionRegistry.class.getResourceAsStream(RegionRegistry.fileName);
  OsmAndRegionInfo regInfo=OsmAndRegionInfo.newBuilder().mergeFrom(in).build();
  t+=System.currentTimeMillis();
  for (int j=0; j < regInfo.getRegionInfo().getRegionsCount(); j++) {
    RegionCountry.construct(regInfo.getRegionInfo().getRegions(j));
  }
  System.out.println("Read countries " + regInfo.getRegionInfo().getRegionsCount() + " "+ countries.size());
  System.out.println("Timing " + t);
}
