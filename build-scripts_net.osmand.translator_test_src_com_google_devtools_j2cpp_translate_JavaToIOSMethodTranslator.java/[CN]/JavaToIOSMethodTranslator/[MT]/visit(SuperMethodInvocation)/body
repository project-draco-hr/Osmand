{
  @SuppressWarnings("unchecked") List<Expression> args=node.arguments();
  for (  Expression e : args) {
    e.accept(this);
  }
  IMethodBinding binding=Types.getMethodBinding(node);
  JavaMethod md=descriptions.get(binding);
  if (md != null) {
    String key=md.getKey();
    String value=methodMappings.get(key);
    if (value == null) {
      return super.visit(node);
    }
    IOSMethod iosMethod=new IOSMethod(value,binding,ast);
    node.setName(NameTable.unsafeSimpleName(iosMethod.getName(),ast));
    SimpleName name=node.getName();
    if (name.getIdentifier().equals(binding.getDeclaringClass().getName()) || name.getIdentifier().equals(binding.getDeclaringClass().getQualifiedName())) {
      node.setName(NameTable.unsafeSimpleName(iosMethod.getDeclaringClass(),ast));
    }
    Types.addMappedIOSMethod(binding,iosMethod);
    IMethodBinding newBinding=iosMethod.resolveBinding();
    Types.addMappedInvocation(node,newBinding);
    Types.addBinding(node,newBinding);
    Types.addBinding(name,newBinding);
  }
 else {
    for (    IMethodBinding methodBinding : mappedMethods) {
      if (binding.overrides(methodBinding)) {
        JavaMethod desc=getDescription(methodBinding);
        String value=methodMappings.get(desc.getKey());
        if (value != null) {
          IOSMethod iosMethod=new IOSMethod(value,binding,ast);
          node.setName(NameTable.unsafeSimpleName(iosMethod.getName(),ast));
          Types.addMappedIOSMethod(binding,iosMethod);
          IMethodBinding newBinding=iosMethod.resolveBinding();
          Types.addBinding(node,newBinding);
          Types.addBinding(node.getName(),newBinding);
        }
      }
    }
  }
  return false;
}
