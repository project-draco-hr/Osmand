{
  this.view=view;
  paintBlack=new Paint();
  paintBlack.setStyle(Style.STROKE);
  paintBlack.setColor(Color.BLACK);
  paintBlack.setTextSize(23);
  paintBlack.setAntiAlias(true);
  paintAlphaGray=new Paint();
  paintAlphaGray.setStyle(Style.FILL_AND_STROKE);
  paintAlphaGray.setColor(Color.LTGRAY);
  paintAlphaGray.setAlpha(180);
  paintRouteDirection=new Paint();
  paintRouteDirection.setStyle(Style.FILL_AND_STROKE);
  paintRouteDirection.setColor(Color.rgb(100,0,255));
  paintRouteDirection.setAntiAlias(true);
  fillBlack=new Paint();
  fillBlack.setStyle(Style.FILL_AND_STROKE);
  fillBlack.setColor(Color.BLACK);
  fillBlack.setAntiAlias(true);
  paintMiniRoute=new Paint();
  paintMiniRoute.setStyle(Style.STROKE);
  paintMiniRoute.setStrokeWidth(35);
  paintMiniRoute.setColor(Color.BLUE);
  paintMiniRoute.setAntiAlias(true);
  fillRed=new Paint();
  fillRed.setStyle(Style.FILL_AND_STROKE);
  fillRed.setColor(Color.RED);
  fillRed.setAntiAlias(true);
  boundsForCompass=new RectF(0,0,35,32);
  boundsForDist=new RectF(35,0,110,32);
  boundsForZoom=new RectF(0,32,35,64);
  boundsForSpeed=new RectF(35,32,110,64);
  boundsForMiniRoute=new RectF(0,64,96,196);
  boundsForLeftTime=new RectF(0,0,75,32);
  centerMiniRouteX=48;
  centerMiniRouteY=160;
  scaleMiniRoute=0.15f;
  pathForCompass=new Path();
  pathForCompass.moveTo(9,15.5f);
  pathForCompass.lineTo(22f,15.5f);
  pathForCompass.lineTo(15.5f,30f);
  pathForCompass.lineTo(9,15.5f);
  pathForCompass2=new Path();
  pathForCompass2.moveTo(9,15.5f);
  pathForCompass2.lineTo(22f,15.5f);
  pathForCompass2.lineTo(15.5f,2f);
  pathForCompass2.lineTo(9,15);
  pathForTurn=new Path();
  pathTransform=new Matrix();
  pathTransform.setTranslate(boundsForMiniRoute.left,boundsForMiniRoute.top);
  showArrivalTime=OsmandSettings.isShowingArrivalTime(view.getContext());
}
