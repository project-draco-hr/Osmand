{
  if (routeLayer != null && routeLayer.getHelper().isRouterEnabled() && routeLayer.getHelper().isFollowingMode()) {
    int d=routeLayer.getHelper().getDistanceToNextRouteDirection();
    if (showMiniMap || d == 0) {
      if (!routeLayer.getPath().isEmpty()) {
        canvas.save();
        canvas.clipRect(boundsForMiniRoute);
        canvas.drawRoundRect(boundsForMiniRoute,3,3,paintAlphaGray);
        canvas.drawRoundRect(boundsForMiniRoute,3,3,paintBlack);
        canvas.translate(centerMiniRouteX - view.getCenterPointX(),centerMiniRouteY - view.getCenterPointY());
        canvas.scale(scaleMiniRoute,scaleMiniRoute,view.getCenterPointX(),view.getCenterPointY());
        canvas.rotate(view.getRotate(),view.getCenterPointX(),view.getCenterPointY());
        canvas.drawCircle(view.getCenterPointX(),view.getCenterPointY(),3 / scaleMiniRoute,fillBlack);
        canvas.drawPath(routeLayer.getPath(),paintMiniRoute);
        canvas.restore();
      }
    }
 else {
      canvas.drawRoundRect(boundsForMiniRoute,3,3,paintAlphaGray);
      canvas.drawRoundRect(boundsForMiniRoute,3,3,paintBlack);
      RouteDirectionInfo next=routeLayer.getHelper().getNextRouteDirectionInfo();
      if (next != null) {
        if (!Algoritms.objectEquals(cachedTurnType,next.turnType)) {
          cachedTurnType=next.turnType;
          calcTurnPath(pathForTurn,cachedTurnType,pathTransform);
          if (cachedTurnType.getExitOut() > 0) {
            cachedExitOut=cachedTurnType.getExitOut() + "";
          }
 else {
            cachedExitOut=null;
          }
        }
        canvas.drawPath(pathForTurn,paintRouteDirection);
        canvas.drawPath(pathForTurn,paintBlack);
        if (cachedExitOut != null) {
          canvas.drawText(cachedExitOut,boundsForMiniRoute.centerX() - 6,boundsForMiniRoute.centerY() - 9,paintBlack);
        }
        canvas.drawText(MapUtils.getFormattedDistance(d),boundsForMiniRoute.left + 10,boundsForMiniRoute.bottom - 9,paintBlack);
      }
    }
    boolean followingMode=routeLayer.getHelper().isFollowingMode();
    int time=routeLayer.getHelper().getLeftTime() * 1000;
    if (time == 0) {
      cachedLeftTime=0;
      cachedLeftTimeString=null;
    }
 else {
      long toFindTime=time;
      if (followingMode) {
        toFindTime+=System.currentTimeMillis();
      }
      if (Math.abs(toFindTime - cachedLeftTime) > 30000) {
        cachedLeftTime=toFindTime;
        Calendar c=Calendar.getInstance();
        cachedLeftTimeString=DateFormat.format("kk:mm",cachedLeftTime - c.getTimeZone().getOffset(0)).toString();
      }
    }
    if (cachedLeftTimeString != null) {
      int w=(int)(boundsForLeftTime.right - boundsForLeftTime.left);
      boundsForLeftTime.right=view.getWidth();
      boundsForLeftTime.left=view.getWidth() - w;
      canvas.drawRoundRect(boundsForLeftTime,3,3,paintAlphaGray);
      canvas.drawRoundRect(boundsForLeftTime,3,3,paintBlack);
      canvas.drawText(cachedLeftTimeString,boundsForLeftTime.left + 5,boundsForLeftTime.bottom - 9,paintBlack);
    }
  }
}
