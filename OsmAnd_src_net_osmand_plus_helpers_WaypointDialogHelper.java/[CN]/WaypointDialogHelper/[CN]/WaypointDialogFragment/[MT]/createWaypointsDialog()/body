{
  final List<Object> points=getPoints();
  final List<LocationPointWrapper> deletedPoints=new ArrayList<WaypointHelper.LocationPointWrapper>();
  final FragmentActivity ctx=getActivity();
  final ListView listView=new ListView(ctx);
  final int[] running=new int[]{-1};
  final ArrayAdapter<Object> listAdapter=new ArrayAdapter<Object>(ctx,R.layout.waypoint_reached,R.id.title,points){
    @Override public View getView(    final int position,    View convertView,    ViewGroup parent){
      View v=convertView;
      final ArrayAdapter<Object> thisAdapter=this;
      boolean labelView=(getItem(position) instanceof Integer);
      boolean viewText=v != null && v.findViewById(R.id.info_close) == null;
      if (getItem(position) instanceof RadiusItem) {
        final int type=((RadiusItem)getItem(position)).type;
        v=createItemForRadiusProximity(ctx,type,running,position,thisAdapter);
      }
 else       if (labelView) {
        v=createItemForCategory(ctx,(Integer)getItem(position),running,position,thisAdapter);
      }
 else {
        v=ctx.getLayoutInflater().inflate(R.layout.waypoint_reached,null);
        updatePointInfoView(app,ctx,v,(LocationPointWrapper)getItem(position),WaypointDialogFragment.this);
        View remove=v.findViewById(R.id.info_close);
        ((ImageButton)remove).setImageDrawable(ctx.getResources().getDrawable(app.getSettings().isLightContent() ? R.drawable.ic_action_gremove_light : R.drawable.ic_action_gremove_dark));
        remove.setOnClickListener(new View.OnClickListener(){
          @Override public void onClick(          View view){
            LocationPointWrapper point=(LocationPointWrapper)points.get(position);
            remove(point);
            deletedPoints.add(point);
            notifyDataSetChanged();
          }
        }
);
      }
      return v;
    }
  }
;
  listView.setAdapter(listAdapter);
  listView.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> adapterView,    View view,    int item,    long l){
      if (listAdapter.getItem(item) instanceof LocationPointWrapper) {
        LocationPointWrapper ps=(LocationPointWrapper)listAdapter.getItem(item);
        showOnMap(app,ctx,ps.getPoint(),WaypointDialogFragment.this);
      }
    }
  }
);
  AlertDialog.Builder builder=new AlertDialog.Builder(ctx);
  builder.setView(listView);
  builder.setNeutralButton(R.string.flat_list_waypoints,new OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      showWaypointsDialogFlat(getActivity());
    }
  }
);
  builder.setPositiveButton(R.string.default_buttons_ok,new OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      waypointHelper.removeVisibleLocationPoint(deletedPoints);
    }
  }
);
  builder.setNegativeButton(ctx.getString(R.string.default_buttons_cancel),null);
  return builder.create();
}
