{
  final List<LocationPointWrapper> deletedPoints=new ArrayList<WaypointHelper.LocationPointWrapper>();
  final FragmentActivity ctx=getActivity();
  final ListView listView=new ListView(ctx);
  final int[] running=new int[]{-1};
  final AlertDialog[] srcDialog=new AlertDialog[1];
  final ArrayAdapter<Object> listAdapter=getWaypointsAdapter(edit,deletedPoints,ctx,running,srcDialog,WaypointDialogFragment.this);
  listView.setAdapter(listAdapter);
  listView.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> adapterView,    View view,    int item,    long l){
      if (listAdapter.getItem(item) instanceof LocationPointWrapper) {
        LocationPointWrapper ps=(LocationPointWrapper)listAdapter.getItem(item);
        showOnMap(app,ctx,ps.getPoint(),WaypointDialogFragment.this);
      }
 else       if (new Integer(WaypointHelper.TARGETS).equals(listAdapter.getItem(item))) {
        IntermediatePointsDialog.openIntermediatePointsDialog(ctx,app,true);
        if (srcDialog[0] != null) {
          srcDialog[0].dismiss();
        }
      }
 else       if (listAdapter.getItem(item) instanceof RadiusItem) {
        selectDifferentRadius(((RadiusItem)listAdapter.getItem(item)).type,running,item,listAdapter,ctx);
      }
    }
  }
);
  AlertDialog.Builder builder=new AlertDialog.Builder(ctx);
  builder.setView(listView);
  builder.setPositiveButton(R.string.shared_string_ok,new OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      waypointHelper.removeVisibleLocationPoint(deletedPoints);
    }
  }
);
  if (edit) {
    builder.setNegativeButton(ctx.getString(R.string.default_buttons_cancel),null);
  }
  AlertDialog dlg=builder.create();
  srcDialog[0]=dlg;
  return dlg;
}
