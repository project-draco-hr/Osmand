{
  final int[] running=new int[]{-1};
  for (int i=0; i < WaypointHelper.MAX; i++) {
    if (waypointHelper.isTypeVisible(i)) {
      List<LocationPointWrapper> tp=waypointHelper.getWaypoints(i);
      final boolean checked=waypointHelper.isTypeEnabled(i);
      final int type=i;
      adapter.item(getHeader(ctx,i,checked)).layout(R.layout.drawer_list_poi_header).listen(new ContextMenuAdapter.OnContextMenuClick(){
        @Override public boolean onContextMenuClick(        ArrayAdapter<?> ra,        int itemId,        int pos,        boolean isChecked){
          running[0]=pos;
          ra.notifyDataSetChanged();
          if (type == WaypointHelper.POI && isChecked) {
            selectPoi(running,adapter,type,isChecked,mapActivity,drawerList);
          }
 else {
            enableType(running,adapter,type,isChecked,drawerList);
          }
          return false;
        }
      }
).loading(0).reg();
      if (i == WaypointHelper.POI && checked) {
        Item item=createRadiusProximityItem(adapter,ctx,drawerList,running,WaypointHelper.POI);
        item.loading(0).selected(app.getSettings().SHOW_POI_OVER_MAP.get() ? 1 : 0).reg();
      }
 else       if (i == WaypointHelper.FAVORITES && checked) {
        Item item=createRadiusProximityItem(adapter,ctx,drawerList,running,WaypointHelper.FAVORITES);
        item.loading(0).selected(app.getSettings().SHOW_FAVORITES.get() ? 1 : 0).reg();
      }
      if (tp != null && tp.size() > 0) {
        for (        LocationPointWrapper p : tp) {
          WaypointHelper wh=app.getWaypointHelper();
          int dist=wh.getRouteDistance(p);
          String dd=OsmAndFormatter.getFormattedDistance(dist,app);
          if (p.deviationDistance > 0) {
            dd+="\n+" + OsmAndFormatter.getFormattedDistance(p.deviationDistance,app);
          }
          adapter.item(p.getPoint().getName(ctx)).icon(p.getDrawableId(ctx)).description(dd).layout(R.layout.drawer_list_waypoint).reg();
        }
      }
    }
  }
}
