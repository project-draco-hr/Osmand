{
  final List<Object> points=getPoints();
  return new ArrayAdapter<Object>(ctx,R.layout.waypoint_reached,R.id.title,points){
    @Override public View getView(    final int position,    View convertView,    ViewGroup parent){
      View v=convertView;
      final ArrayAdapter<Object> thisAdapter=this;
      boolean labelView=(getItem(position) instanceof Integer);
      if (position == 0) {
        v=createDialogHeader(ctx,edit,false,srcDialog[0]);
      }
 else       if (getItem(position) instanceof RadiusItem) {
        final int type=((RadiusItem)getItem(position)).type;
        v=createItemForRadiusProximity(ctx,type,running,position,thisAdapter);
      }
 else       if (labelView) {
        v=createItemForCategory(ctx,(Integer)getItem(position),running,position,thisAdapter);
      }
 else {
        if (v == null || v.findViewById(R.id.info_close) == null) {
          v=ctx.getLayoutInflater().inflate(R.layout.waypoint_reached,null);
        }
        updatePointInfoView(app,ctx,v,(LocationPointWrapper)getItem(position),dialogFragment);
        View remove=v.findViewById(R.id.info_close);
        if (!edit) {
          remove.setVisibility(View.GONE);
        }
 else {
          remove.setVisibility(View.VISIBLE);
          ((ImageButton)remove).setImageDrawable(ctx.getResources().getDrawable(app.getSettings().isLightContent() ? R.drawable.ic_action_gremove_light : R.drawable.ic_action_gremove_dark));
          remove.setOnClickListener(new View.OnClickListener(){
            @Override public void onClick(            View view){
              LocationPointWrapper point=(LocationPointWrapper)points.get(position);
              remove(point);
              deletedPoints.add(point);
              notifyDataSetChanged();
            }
          }
);
        }
      }
      return v;
    }
  }
;
}
