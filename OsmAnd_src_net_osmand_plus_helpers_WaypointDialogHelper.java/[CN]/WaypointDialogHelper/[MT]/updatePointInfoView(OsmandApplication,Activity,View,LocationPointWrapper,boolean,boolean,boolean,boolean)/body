{
  WaypointHelper wh=app.getWaypointHelper();
  final LocationPoint point=ps.getPoint();
  TextView text=(TextView)localView.findViewById(R.id.waypoint_text);
  if (!topBar) {
    AndroidUtils.setTextPrimaryColor(activity,text,nightMode);
  }
  TextView textShadow=(TextView)localView.findViewById(R.id.waypoint_text_shadow);
  if (!edit) {
    localView.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View view){
        showOnMap(app,activity,point,mapCenter);
      }
    }
);
  }
  TextView textDist=(TextView)localView.findViewById(R.id.waypoint_dist);
  ((ImageView)localView.findViewById(R.id.waypoint_icon)).setImageDrawable(ps.getDrawable(activity,app,nightMode));
  int dist=-1;
  boolean startPoint=ps.type == WaypointHelper.TARGETS && ((TargetPoint)ps.point).start;
  if (!startPoint) {
    if (!wh.isRouteCalculated()) {
      if (activity instanceof MapActivity) {
        dist=(int)MapUtils.getDistance(((MapActivity)activity).getMapView().getLatitude(),((MapActivity)activity).getMapView().getLongitude(),point.getLatitude(),point.getLongitude());
      }
    }
 else {
      dist=wh.getRouteDistance(ps);
    }
  }
  if (dist > 0) {
    textDist.setText(OsmAndFormatter.getFormattedDistance(dist,app));
  }
 else {
    textDist.setText("");
  }
  TextView textDeviation=(TextView)localView.findViewById(R.id.waypoint_deviation);
  if (textDeviation != null) {
    if (dist > 0 && ps.deviationDistance > 0) {
      String devStr="+" + OsmAndFormatter.getFormattedDistance(ps.deviationDistance,app);
      textDeviation.setText(devStr);
      int colorId=R.color.wpt_distance_color;
      if (!topBar) {
        colorId=nightMode ? R.color.secondary_text_dark : R.color.secondary_text_light;
        AndroidUtils.setTextSecondaryColor(activity,textDeviation,nightMode);
      }
      if (ps.deviationDirectionRight) {
        textDeviation.setCompoundDrawablesWithIntrinsicBounds(app.getIconsCache().getIcon(R.drawable.ic_small_turn_right,colorId),null,null,null);
      }
 else {
        textDeviation.setCompoundDrawablesWithIntrinsicBounds(app.getIconsCache().getIcon(R.drawable.ic_small_turn_left,colorId),null,null,null);
      }
      textDeviation.setVisibility(View.VISIBLE);
    }
 else {
      textDeviation.setText("");
      textDeviation.setVisibility(View.GONE);
    }
  }
  String descr;
  PointDescription pd=point.getPointDescription(app);
  if (Algorithms.isEmpty(pd.getName())) {
    descr=pd.getTypeName();
  }
 else {
    descr=pd.getName();
  }
  if (textShadow != null) {
    textShadow.setText(descr);
  }
  text.setText(descr);
  String pointDescription="";
  TextView descText=(TextView)localView.findViewById(R.id.waypoint_desc_text);
  if (descText != null) {
    AndroidUtils.setTextSecondaryColor(activity,descText,nightMode);
switch (ps.type) {
case WaypointHelper.TARGETS:
      TargetPoint targetPoint=(TargetPoint)ps.point;
    if (targetPoint.start) {
      pointDescription=activity.getResources().getString(R.string.starting_point);
    }
 else {
      pointDescription=targetPoint.getPointDescription(activity).getTypeName();
    }
  break;
case WaypointHelper.FAVORITES:
FavouritePoint favPoint=(FavouritePoint)ps.point;
pointDescription=Algorithms.isEmpty(favPoint.getCategory()) ? activity.getResources().getString(R.string.shared_string_favorites) : favPoint.getCategory();
break;
}
}
if (descr.equals(pointDescription)) {
pointDescription="";
}
if (dist > 0 && !Algorithms.isEmpty(pointDescription)) {
pointDescription="  ???  " + pointDescription;
}
if (descText != null) {
descText.setText(pointDescription);
}
}
