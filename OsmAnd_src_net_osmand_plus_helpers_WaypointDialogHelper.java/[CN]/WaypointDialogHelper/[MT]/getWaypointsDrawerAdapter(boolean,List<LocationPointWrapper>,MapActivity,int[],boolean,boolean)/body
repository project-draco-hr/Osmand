{
  this.flat=flat;
  this.deletedPoints=deletedPoints;
  final List<Object> points=getPoints();
  List<Object> activePoints=getActivePoints(points);
  final WaypointDialogHelper helper=this;
  final StableArrayAdapter listAdapter=new StableArrayAdapter(ctx,R.layout.waypoint_reached,R.id.title,points,activePoints){
    @Override public void buildDividers(){
      dividers=getCustomDividers(ctx,getObjects(),nightMode);
    }
    @Override public boolean isEnabled(    int position){
      Object obj=getItem(position);
      boolean labelView=(obj instanceof Integer);
      boolean topDividerView=(obj instanceof Boolean) && ((Boolean)obj);
      boolean bottomDividerView=(obj instanceof Boolean) && !((Boolean)obj);
      boolean enabled=!labelView && !topDividerView && !bottomDividerView;
      if (enabled && obj instanceof RadiusItem) {
        int type=((RadiusItem)obj).type;
        enabled=type != WaypointHelper.POI;
      }
      return enabled;
    }
    @Override public View getView(    final int position,    View convertView,    ViewGroup parent){
      View v=convertView;
      final ArrayAdapter<Object> thisAdapter=this;
      Object obj=getItem(position);
      boolean labelView=(obj instanceof Integer);
      boolean topDividerView=(obj instanceof Boolean) && ((Boolean)obj);
      boolean bottomDividerView=(obj instanceof Boolean) && !((Boolean)obj);
      if (obj instanceof RadiusItem) {
        final int type=((RadiusItem)obj).type;
        v=createItemForRadiusProximity(ctx,type,running,position,thisAdapter,nightMode);
        AndroidUtils.setListItemBackground(mapActivity,v,nightMode);
      }
 else       if (labelView) {
        v=createItemForCategory(ctx,(Integer)obj,running,position,thisAdapter,nightMode);
        AndroidUtils.setListItemBackground(mapActivity,v,nightMode);
      }
 else       if (topDividerView) {
        v=ctx.getLayoutInflater().inflate(R.layout.card_top_divider,null);
        AndroidUtils.setListBackground(mapActivity,v,nightMode);
      }
 else       if (bottomDividerView) {
        v=ctx.getLayoutInflater().inflate(R.layout.card_bottom_divider,null);
        AndroidUtils.setListBackground(mapActivity,v,nightMode);
      }
 else       if (obj instanceof LocationPointWrapper) {
        LocationPointWrapper point=(LocationPointWrapper)obj;
        v=updateWaypointItemView(edit,deletedPoints,app,ctx,helper,v,point,this,nightMode,flat);
        AndroidUtils.setListItemBackground(mapActivity,v,nightMode);
      }
      return v;
    }
  }
;
  for (  Object p : points) {
    if (p instanceof LocationPointWrapper) {
      LocationPointWrapper w=(LocationPointWrapper)p;
      if (w.type == WaypointHelper.TARGETS) {
        final TargetPoint t=(TargetPoint)w.point;
        if (t.getOriginalPointDescription() != null && t.getOriginalPointDescription().isSearchingAddress(mapActivity)) {
          GeocodingLookupService.AddressLookupRequest lookupRequest=new GeocodingLookupService.AddressLookupRequest(t.point,new GeocodingLookupService.OnAddressLookupResult(){
            @Override public void geocodingDone(            String address){
              if (helperCallbacks != null) {
                helperCallbacks.reloadAdapter();
              }
 else {
                reloadListAdapter(listAdapter);
              }
            }
          }
,null);
          app.getGeocodingLookupService().lookupAddress(lookupRequest);
        }
      }
    }
  }
  return listAdapter;
}
