{
  SQLiteDatabase db=getReadableDatabase();
  File file=Environment.getExternalStorageDirectory();
  if (db != null && file.canWrite()) {
    file=new File(file,"/osmand/" + TRACKS_PATH);
    file.mkdirs();
    if (file.exists()) {
      Cursor query=db.rawQuery("SELECT " + TRACK_COL_LAT + ","+ TRACK_COL_LON+ ","+ TRACK_COL_ALTITUDE+ ","+ TRACK_COL_SPEED+ ","+ TRACK_COL_DATE+ " FROM "+ TRACK_NAME,null);
      long previousTime=0;
      Map<String,List<List<TrkPt>>> data=new LinkedHashMap<String,List<List<TrkPt>>>();
      List<TrkPt> segment=new ArrayList<TrkPt>();
      List<List<TrkPt>> track=new ArrayList<List<TrkPt>>();
      track.add(segment);
      if (query.moveToFirst()) {
        do {
          TrkPt pt=new TrkPt();
          pt.lat=query.getDouble(0);
          pt.lon=query.getDouble(1);
          pt.ele=query.getDouble(2);
          pt.speed=query.getDouble(3);
          long time=query.getLong(4);
          pt.time=time;
          if (previousTime == 0) {
            data.put(DateFormat.format("yyyy-MM-dd",time).toString(),track);
            segment.add(pt);
          }
 else           if (Math.abs(time - previousTime) < 60000) {
            segment.add(pt);
          }
 else           if (Math.abs(time - previousTime) < 3600000) {
            segment=new ArrayList<TrkPt>();
            segment.add(pt);
            track.add(segment);
          }
 else {
            String date=DateFormat.format("yyyy-MM-dd",time).toString();
            if (data.containsKey(date)) {
              track=data.get(date);
            }
 else {
              track=new ArrayList<List<TrkPt>>();
              data.put(date,track);
            }
            segment=new ArrayList<TrkPt>();
            segment.add(pt);
            track.add(segment);
          }
          previousTime=time;
        }
 while (query.moveToNext());
      }
      query.close();
      saveToXMLFiles(file,data);
    }
  }
  db=getWritableDatabase();
  if (db != null) {
    Calendar cal=Calendar.getInstance();
    cal.setTime(new java.util.Date());
    cal.set(Calendar.HOUR_OF_DAY,0);
    cal.set(Calendar.MINUTE,0);
    cal.set(Calendar.SECOND,0);
    cal.set(Calendar.MILLISECOND,0);
    db.execSQL("DELETE FROM " + TRACK_NAME + " WHERE "+ TRACK_COL_DATE+ " <= ?",new Object[]{cal.getTimeInMillis()});
  }
}
