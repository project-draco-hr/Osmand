{
  OsmandSettings prefs=app.getSettings();
  RenderingRulesStorage storage=app.getRendererRegistry().getCurrentSelectedRenderer();
  Map<String,String> props=new HashMap<String,String>();
  for (  RenderingRuleProperty customProp : storage.PROPS.getCustomRules()) {
    if (customProp.isBoolean()) {
      CommonPreference<Boolean> pref=prefs.getCustomRenderBooleanProperty(customProp.getAttrName());
      props.put(customProp.getAttrName(),pref.get() + "");
    }
 else {
      CommonPreference<String> settings=prefs.getCustomRenderProperty(customProp.getAttrName());
      String res=settings.get();
      if (!Algorithms.isEmpty(res)) {
        props.put(customProp.getAttrName(),res);
      }
    }
  }
  QStringStringHash convertedStyleSettings=new QStringStringHash();
  for (  Map.Entry<String,String> setting : props.entrySet()) {
    convertedStyleSettings.set(setting.getKey(),setting.getValue());
  }
  if (nightMode) {
    convertedStyleSettings.set("nightMode","true");
  }
  return convertedStyleSettings;
}
