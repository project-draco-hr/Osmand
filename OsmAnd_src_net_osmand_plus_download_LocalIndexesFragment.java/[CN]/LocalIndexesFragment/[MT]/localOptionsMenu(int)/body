{
  if (itemId == R.string.local_index_download) {
    asyncLoader.setResult(null);
    startActivity(new Intent(getMyActivity(),DownloadIndexActivity.class));
  }
 else   if (itemId == R.string.local_index_mi_reload) {
    reloadIndexes();
  }
 else   if (itemId == R.string.local_index_mi_delete) {
    openSelectionMode(itemId,R.drawable.ic_action_delete_dark,R.drawable.ic_action_delete_light,new DialogInterface.OnClickListener(){
      @Override public void onClick(      DialogInterface dialog,      int which){
        doAction(itemId);
      }
    }
,null,null);
  }
 else   if (itemId == R.string.local_index_mi_backup) {
    openSelectionMode(itemId,R.drawable.ic_action_undo_dark,R.drawable.ic_action_undo_light,new DialogInterface.OnClickListener(){
      @Override public void onClick(      DialogInterface dialog,      int which){
        doAction(itemId);
      }
    }
,Boolean.FALSE,LocalIndexType.MAP_DATA);
  }
 else   if (itemId == R.string.local_index_mi_restore) {
    openSelectionMode(itemId,R.drawable.ic_action_redo_dark,R.drawable.ic_action_redo_light,new DialogInterface.OnClickListener(){
      @Override public void onClick(      DialogInterface dialog,      int which){
        doAction(itemId);
      }
    }
,Boolean.TRUE,LocalIndexType.MAP_DATA);
    listAdapter.filterCategories(true);
  }
}
