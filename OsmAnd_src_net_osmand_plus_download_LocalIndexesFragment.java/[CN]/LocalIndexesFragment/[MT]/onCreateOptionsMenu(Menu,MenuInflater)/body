{
  if (listAdapter.getGroupCount() == 0 && getDownloadActivity().getLocalIndexInfos().size() > 0) {
    for (    LocalIndexInfo info : getDownloadActivity().getLocalIndexInfos()) {
      listAdapter.addLocalIndexInfo(info);
    }
    listAdapter.notifyDataSetChanged();
  }
  ActionBar actionBar=getDownloadActivity().getSupportActionBar();
  actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);
  optionsMenuAdapter=new ContextMenuAdapter(getDownloadActivity());
  OnContextMenuClick listener=new OnContextMenuClick(){
    @Override public boolean onContextMenuClick(    int itemId,    int pos,    boolean isChecked){
      localOptionsMenu(itemId);
      return true;
    }
  }
;
  optionsMenuAdapter.item(R.string.local_index_mi_reload).icons(R.drawable.ic_action_refresh_dark,R.drawable.ic_action_refresh_light).listen(listener).position(1).reg();
  optionsMenuAdapter.item(R.string.local_index_mi_backup).icons(R.drawable.ic_action_undo_dark,R.drawable.ic_action_undo_light).listen(listener).position(2).reg();
  optionsMenuAdapter.item(R.string.local_index_mi_restore).icons(R.drawable.ic_action_redo_dark,R.drawable.ic_action_redo_dark).listen(listener).position(3).reg();
  optionsMenuAdapter.item(R.string.local_index_mi_delete).icons(R.drawable.ic_action_delete_dark,R.drawable.ic_action_delete_light).listen(listener).position(4).reg();
  OsmandPlugin.onOptionsMenuActivity(getDownloadActivity(),null,optionsMenuAdapter);
  int max=getResources().getInteger(R.integer.abs__max_action_buttons);
  SubMenu split=null;
  for (int j=0; j < optionsMenuAdapter.length(); j++) {
    MenuItem item;
    if (j + 1 >= max && optionsMenuAdapter.length() > max) {
      if (split == null) {
        split=menu.addSubMenu(0,1,0,R.string.default_buttons_other_actions);
        split.setIcon(isLightActionBar() ? R.drawable.abs__ic_menu_moreoverflow_holo_light : R.drawable.abs__ic_menu_moreoverflow_holo_dark);
        split.getItem().setShowAsAction(MenuItem.SHOW_AS_ACTION_IF_ROOM);
      }
      item=split.add(0,optionsMenuAdapter.getElementId(j),j + 1,optionsMenuAdapter.getItemName(j));
      item.setShowAsAction(MenuItem.SHOW_AS_ACTION_IF_ROOM);
    }
 else {
      item=menu.add(0,optionsMenuAdapter.getElementId(j),j + 1,optionsMenuAdapter.getItemName(j));
      item.setShowAsAction(MenuItem.SHOW_AS_ACTION_IF_ROOM);
    }
    if (optionsMenuAdapter.getImageId(j,isLightActionBar()) != 0) {
      item.setIcon(optionsMenuAdapter.getImageId(j,isLightActionBar()));
    }
  }
  if (operationTask == null || operationTask.getStatus() == AsyncTask.Status.FINISHED) {
    menu.setGroupVisible(0,true);
  }
 else {
    menu.setGroupVisible(0,false);
  }
}
