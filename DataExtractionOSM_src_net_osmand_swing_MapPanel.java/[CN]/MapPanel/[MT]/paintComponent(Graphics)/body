{
  if (nativeLibRendering != null) {
    if (zoom == nativeZoom) {
      int shx=(int)((-MapUtils.getTileNumberX(zoom,longitude) + MapUtils.getTileNumberX(zoom,nativeLatLon.getLongitude())) * getTileSize());
      int shy=(int)((-MapUtils.getTileNumberY(zoom,latitude) + MapUtils.getTileNumberY(zoom,nativeLatLon.getLatitude())) * getTileSize());
      shx-=EXPAND_X;
      shy-=EXPAND_Y;
      g.drawImage(nativeRenderingImg,shx,shy,this);
    }
  }
 else   if (images != null) {
    for (int i=0; i < images.length; i++) {
      for (int j=0; j < images[i].length; j++) {
        if (images[i][j] == null) {
          int div=divNonLoadedImage;
          int tileDiv=getTileSize() / div;
          for (int k1=0; k1 < div; k1++) {
            for (int k2=0; k2 < div; k2++) {
              if ((k1 + k2) % 2 == 0) {
                g.setColor(Color.gray);
              }
 else {
                g.setColor(Color.white);
              }
              g.fillRect(i * getTileSize() + xStartingImage + k1 * tileDiv,j * getTileSize() + yStartingImage + k2 * tileDiv,tileDiv,tileDiv);
            }
          }
        }
 else {
          g.drawImage(images[i][j],i * getTileSize() + xStartingImage,j * getTileSize() + yStartingImage,this);
        }
      }
    }
  }
  for (  MapPanelLayer l : layers) {
    l.paintLayer((Graphics2D)g);
  }
  if (selectionArea.isVisible()) {
    g.setColor(new Color(0,0,230,50));
    Rectangle r=selectionArea.getSelectedArea();
    g.fillRect(r.x,r.y,r.width,r.height);
  }
  super.paintComponent(g);
}
