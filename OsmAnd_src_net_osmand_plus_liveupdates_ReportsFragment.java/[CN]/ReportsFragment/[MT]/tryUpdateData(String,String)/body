{
  GetJsonAsyncTask.OnResponseListener<Protocol.TotalChangesByMonthResponse> onResponseListener=new GetJsonAsyncTask.OnResponseListener<Protocol.TotalChangesByMonthResponse>(){
    @Override public void onResponse(    Protocol.TotalChangesByMonthResponse response){
      if (response != null) {
        if (contributorsTextView != null) {
          contributorsTextView.setText(String.valueOf(response.users));
        }
        if (editsTextView != null) {
          editsTextView.setText(String.valueOf(response.changes));
        }
      }
      disableProgress();
    }
  }
;
  GetJsonAsyncTask.OnErrorListener onErrorListener=new GetJsonAsyncTask.OnErrorListener(){
    @Override public void onError(    String error){
      if (contributorsTextView != null) {
        contributorsTextView.setText(R.string.data_is_not_available);
      }
      if (editsTextView != null) {
        editsTextView.setText(R.string.data_is_not_available);
      }
      disableProgress();
    }
  }
;
  enableProgress();
  GetJsonAsyncTask<Protocol.TotalChangesByMonthResponse> totalChangesByMontAsyncTask=new GetJsonAsyncTask<>(Protocol.TotalChangesByMonthResponse.class);
  totalChangesByMontAsyncTask.setOnResponseListener(onResponseListener);
  totalChangesByMontAsyncTask.setOnErrorListener(onErrorListener);
  String finalUrl=String.format(TOTAL_CHANGES_BY_MONTH_URL_PATTERN,monthUrlString,regionUrlString);
  totalChangesByMontAsyncTask.execute(finalUrl);
  GetJsonAsyncTask<Protocol.RecipientsByMonth> recChangesByMontAsyncTask=new GetJsonAsyncTask<>(Protocol.RecipientsByMonth.class);
  GetJsonAsyncTask.OnResponseListener<Protocol.RecipientsByMonth> recResponseListener=new GetJsonAsyncTask.OnResponseListener<Protocol.RecipientsByMonth>(){
    @Override public void onResponse(    Protocol.RecipientsByMonth response){
      if (response != null) {
        if (recipientsTextView != null) {
          recipientsTextView.setText(String.valueOf(response.regionCount));
        }
        if (donationsTextView != null) {
          donationsTextView.setText(String.format("%.3f",response.regionBtc * 1000.0) + " mBTC");
        }
      }
      disableProgress();
    }
  }
;
  recChangesByMontAsyncTask.setOnResponseListener(recResponseListener);
  if (recipientsTextView != null) {
    recipientsTextView.setText("-");
  }
  if (donationsTextView != null) {
    donationsTextView.setText("-");
  }
  String recfinalUrl=String.format(RECIPIENTS_BY_MONTH,monthUrlString,regionUrlString);
  recChangesByMontAsyncTask.execute(recfinalUrl);
}
