{
  if (!visible) {
    return;
  }
  final MapRendererView mapRenderer=view.getMapRenderer();
  if (mapRenderer != null && !oldRender) {
    NativeCoreContext.getMapRendererContext().setNightMode(drawSettings.isNightMode());
    OsmandSettings st=view.getApplication().getSettings();
    if (!Algorithms.objectEquals(st.MAP_UNDERLAY.get(),cachedUnderlay)) {
      cachedUnderlay=st.MAP_UNDERLAY.get();
      ITileSource tileSource=st.getTileSourceByName(cachedUnderlay,false);
      if (tileSource != null) {
        TileSourceProxyProvider prov=new TileSourceProxyProvider(view.getApplication(),tileSource);
        mapRenderer.setMapLayerProvider(-1,prov.instantiateProxy(true));
        prov.swigReleaseOwnership();
      }
 else {
        mapRenderer.resetMapLayerProvider(-1);
      }
    }
    if (!Algorithms.objectEquals(st.MAP_TRANSPARENCY.get(),cachedMapTransparency)) {
      cachedMapTransparency=st.MAP_TRANSPARENCY.get();
      MapLayerConfiguration mapLayerConfiguration=new MapLayerConfiguration();
      mapLayerConfiguration.setOpacityFactor(((float)cachedMapTransparency) / 255.0f);
      mapRenderer.setMapLayerConfiguration(0,mapLayerConfiguration);
    }
    if (!Algorithms.objectEquals(st.MAP_OVERLAY.get(),cachedOverlay)) {
      cachedOverlay=st.MAP_OVERLAY.get();
      ITileSource tileSource=st.getTileSourceByName(cachedOverlay,false);
      if (tileSource != null) {
        TileSourceProxyProvider prov=new TileSourceProxyProvider(view.getApplication(),tileSource);
        mapRenderer.setMapLayerProvider(1,prov.instantiateProxy(true));
        prov.swigReleaseOwnership();
      }
 else {
        mapRenderer.resetMapLayerProvider(1);
      }
    }
    if (!Algorithms.objectEquals(st.MAP_OVERLAY_TRANSPARENCY.get(),cachedOverlayTransparency)) {
      cachedOverlayTransparency=st.MAP_OVERLAY_TRANSPARENCY.get();
      MapLayerConfiguration mapLayerConfiguration=new MapLayerConfiguration();
      mapLayerConfiguration.setOpacityFactor(((float)cachedOverlayTransparency) / 255.0f);
      mapRenderer.setMapLayerConfiguration(1,mapLayerConfiguration);
    }
    LatLon ll=tilesRect.getLatLonFromPixel(tilesRect.getPixWidth() / 2,tilesRect.getPixHeight() / 2);
    mapRenderer.setTarget(new PointI(MapUtils.get31TileNumberX(ll.getLongitude()),MapUtils.get31TileNumberY(ll.getLatitude())));
    mapRenderer.setAzimuth(-tilesRect.getRotate());
    mapRenderer.setZoom((float)(tilesRect.getZoom() + tilesRect.getZoomAnimation() + tilesRect.getZoomFloatPart()));
    float zoomMagnifier=st.MAP_DENSITY.get();
    mapRenderer.setVisualZoomShift(zoomMagnifier - 1.0f);
  }
 else {
    if (!view.isZooming()) {
      if (resourceManager.updateRenderedMapNeeded(tilesRect,drawSettings)) {
        final RotatedTileBox copy=tilesRect.copy();
        copy.increasePixelDimensions(copy.getPixWidth() / 3,copy.getPixHeight() / 4);
        resourceManager.updateRendererMap(copy);
      }
    }
    MapRenderRepositories renderer=resourceManager.getRenderer();
    drawRenderedMap(canvas,renderer.getBitmap(),renderer.getBitmapLocation(),tilesRect);
    drawRenderedMap(canvas,renderer.getPrevBitmap(),renderer.getPrevBmpLocation(),tilesRect);
  }
}
