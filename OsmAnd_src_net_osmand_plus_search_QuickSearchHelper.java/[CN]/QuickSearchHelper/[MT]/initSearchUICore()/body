{
  mapsIndexed=false;
  setRepositoriesForSearchUICore(app);
  core.init();
  core.registerAPI(new SearchCoreFactory.SearchBaseAPI(){
    @Override public boolean search(    SearchPhrase phrase,    SearchUICore.SearchResultMatcher resultMatcher){
      List<FavouritePoint> favList=app.getFavorites().getFavouritePoints();
      for (      FavouritePoint point : favList) {
        SearchResult sr=new SearchResult(phrase);
        sr.localeName=point.getName();
        sr.object=point;
        sr.priority=SEARCH_FAVORITE_OBJECT_PRIORITY;
        sr.objectType=ObjectType.FAVORITE;
        sr.location=new LatLon(point.getLatitude(),point.getLongitude());
        sr.preferredZoom=17;
        if (phrase.getUnknownSearchWordLength() <= 1 && phrase.isNoSelectedType()) {
          resultMatcher.publish(sr);
        }
 else         if (phrase.getNameStringMatcher().matches(sr.localeName)) {
          resultMatcher.publish(sr);
        }
      }
      return true;
    }
    @Override public int getSearchPriority(    SearchPhrase p){
      if (!p.isNoSelectedType() || !p.isUnknownSearchWordPresent()) {
        return -1;
      }
      return SEARCH_FAVORITE_API_PRIORITY;
    }
  }
);
  core.registerAPI(new SearchCoreFactory.SearchBaseAPI(){
    @Override public boolean search(    SearchPhrase phrase,    SearchUICore.SearchResultMatcher resultMatcher){
      List<FavouritePoint> favList=app.getFavorites().getFavouritePoints();
      for (      FavouritePoint point : favList) {
        SearchResult sr=new SearchResult(phrase);
        sr.localeName=point.getName();
        sr.object=point;
        sr.priority=SEARCH_FAVORITE_OBJECT_PRIORITY;
        sr.objectType=ObjectType.FAVORITE;
        sr.location=new LatLon(point.getLatitude(),point.getLongitude());
        sr.preferredZoom=17;
        if (point.getCategory() != null && phrase.getNameStringMatcher().matches(point.getCategory())) {
          resultMatcher.publish(sr);
        }
      }
      return true;
    }
    @Override public int getSearchPriority(    SearchPhrase p){
      if (!p.isNoSelectedType() || !p.isUnknownSearchWordPresent()) {
        return -1;
      }
      return SEARCH_FAVORITE_API_CATEGORY_PRIORITY;
    }
  }
);
  core.registerAPI(new SearchWptAPI(app));
}
