{
  Bounds bounds=stackBounds.peek();
  int sizeCoordinates=0;
  int allSize=0;
  int px=bounds.leftX;
  int py=bounds.topY;
  for (int i=0; i < nodes.length / 8; i++) {
    int x=Algoritms.parseIntFromBytes(nodes,i * 8);
    int y=Algoritms.parseIntFromBytes(nodes,i * 8 + 4);
    sizeCoordinates+=CodedOutputStream.computeSInt32SizeNoTag(codeCoordinateDifference(x,px));
    sizeCoordinates+=CodedOutputStream.computeSInt32SizeNoTag(codeCoordinateDifference(y,py));
    px=x;
    py=y;
    COORDINATES_COUNT+=2;
  }
  allSize+=CodedOutputStream.computeRawVarint32Size(sizeCoordinates) + CodedOutputStream.computeTagSize(OsmandOdb.MapData.COORDINATES_FIELD_NUMBER) + sizeCoordinates;
  COORDINATES_SIZE+=allSize;
  allSize+=CodedOutputStream.computeTagSize(OsmandOdb.MapData.TYPES_FIELD_NUMBER);
  allSize+=CodedOutputStream.computeRawVarint32Size(types.length);
  allSize+=types.length;
  TYPES_SIZE+=CodedOutputStream.computeTagSize(OsmandOdb.MapData.TYPES_FIELD_NUMBER) + CodedOutputStream.computeRawVarint32Size(types.length) + types.length;
  allSize+=CodedOutputStream.computeSInt64Size(OsmandOdb.MapData.ID_FIELD_NUMBER,diffId);
  ID_SIZE+=CodedOutputStream.computeSInt64Size(OsmandOdb.MapData.ID_FIELD_NUMBER,diffId);
  int nameId=0;
  if (name != null) {
    if (stringTable.containsKey(name)) {
      nameId=stringTable.get(name);
    }
 else {
      nameId=stringTable.size();
      stringTable.put(name,nameId);
    }
    allSize+=CodedOutputStream.computeUInt32Size(OsmandOdb.MapData.S,nameId);
  }
  MAP_DATA_SIZE+=allSize;
  codedOutStream.writeTag(MapDataBlock.DATAOBJECTS_FIELD_NUMBER,WireFormat.FieldType.MESSAGE.getWireType());
  codedOutStream.writeRawVarint32(allSize);
  codedOutStream.writeTag(OsmandOdb.MapData.COORDINATES_FIELD_NUMBER,WireFormat.FieldType.BYTES.getWireType());
  codedOutStream.writeRawVarint32(sizeCoordinates);
  px=bounds.leftX;
  py=bounds.topY;
  for (int i=0; i < nodes.length / 8; i++) {
    int x=Algoritms.parseIntFromBytes(nodes,i * 8);
    int y=Algoritms.parseIntFromBytes(nodes,i * 8 + 4);
    codedOutStream.writeSInt32NoTag(codeCoordinateDifference(x,px));
    codedOutStream.writeSInt32NoTag(codeCoordinateDifference(y,py));
    px=x;
    py=y;
  }
  codedOutStream.writeTag(OsmandOdb.MapData.TYPES_FIELD_NUMBER,WireFormat.FieldType.BYTES.getWireType());
  codedOutStream.writeRawVarint32(types.length);
  codedOutStream.writeRawBytes(types);
  if (name != null) {
    codedOutStream.writeUInt32(OsmandOdb.MapData.STRINGID_FIELD_NUMBER,nameId);
  }
  codedOutStream.writeSInt64(OsmandOdb.MapData.ID_FIELD_NUMBER,diffId);
}
