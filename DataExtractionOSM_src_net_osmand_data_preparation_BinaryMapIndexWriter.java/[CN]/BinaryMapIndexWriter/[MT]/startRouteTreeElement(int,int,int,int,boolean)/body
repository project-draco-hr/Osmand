{
  checkPeekState(ROUTE_TREE,ROUTE_INDEX_INIT);
  if (state.peek() == ROUTE_INDEX_INIT) {
    codedOutStream.writeTag(OsmAndRoutingIndex.ROOTBOXES_FIELD_NUMBER,WireFormat.WIRETYPE_FIXED32_LENGTH_DELIMITED);
  }
 else {
    codedOutStream.writeTag(RouteDataBox.BOXES_FIELD_NUMBER,WireFormat.WIRETYPE_FIXED32_LENGTH_DELIMITED);
  }
  state.push(ROUTE_TREE);
  preserveInt32Size();
  long fp=getFilePointer();
  Bounds bounds;
  if (stackBounds.isEmpty()) {
    bounds=new Bounds(0,0,0,0);
  }
 else {
    bounds=stackBounds.peek();
  }
  codedOutStream.writeSInt32(RouteDataBox.LEFT_FIELD_NUMBER,leftX - bounds.leftX);
  codedOutStream.writeSInt32(RouteDataBox.RIGHT_FIELD_NUMBER,rightX - bounds.rightX);
  codedOutStream.writeSInt32(RouteDataBox.TOP_FIELD_NUMBER,topY - bounds.topY);
  codedOutStream.writeSInt32(RouteDataBox.BOTTOM_FIELD_NUMBER,bottomY - bounds.bottomY);
  stackBounds.push(new Bounds(leftX,rightX,topY,bottomY));
  BinaryFileReference ref=null;
  if (containsObjects) {
    codedOutStream.writeTag(RouteDataBox.SHIFTTODATA_FIELD_NUMBER,WireFormat.WIRETYPE_FIXED32_LENGTH_DELIMITED);
    ref=BinaryFileReference.createShiftReference(getFilePointer(),fp);
    codedOutStream.writeFixed32NoTag(0);
  }
  return ref;
}
