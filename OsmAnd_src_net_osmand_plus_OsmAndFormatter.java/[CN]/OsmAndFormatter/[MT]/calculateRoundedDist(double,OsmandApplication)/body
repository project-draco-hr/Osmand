{
  OsmandSettings settings=ctx.getSettings();
  MetricsConstants mc=settings.METRIC_SYSTEM.get();
  double mainUnitInMeter=1;
  double metersInSecondUnit=METERS_IN_KILOMETER;
  if (mc == MetricsConstants.MILES_AND_FOOTS) {
    mainUnitInMeter=FOOTS_IN_ONE_METER;
    metersInSecondUnit=METERS_IN_ONE_MILE;
  }
 else   if (mc == MetricsConstants.MILES_AND_METERS) {
    mainUnitInMeter=1;
    metersInSecondUnit=METERS_IN_ONE_MILE;
  }
 else   if (mc == MetricsConstants.NAUTICAL_MILES) {
    mainUnitInMeter=1;
    metersInSecondUnit=METERS_IN_ONE_NAUTICALMILE;
  }
 else   if (mc == MetricsConstants.MILES_AND_YARDS) {
    mainUnitInMeter=YARDS_IN_ONE_METER;
    metersInSecondUnit=METERS_IN_ONE_MILE;
  }
  int generator=1;
  byte pointer=1;
  double point=mainUnitInMeter;
  double roundDist=1;
  while (distInMeters * point > generator) {
    roundDist=(generator / point);
    if (pointer++ % 3 == 2) {
      generator=generator * 5 / 2;
    }
 else {
      generator*=2;
    }
    if (point == mainUnitInMeter && metersInSecondUnit * mainUnitInMeter * 0.9f <= generator) {
      point=1 / metersInSecondUnit;
      generator=1;
      pointer=1;
    }
  }
  if (mc == MetricsConstants.MILES_AND_METERS && roundDist == 1000) {
    roundDist=0.5f * METERS_IN_ONE_MILE;
  }
 else   if (mc == MetricsConstants.MILES_AND_METERS && roundDist == 500) {
    roundDist=0.25f * METERS_IN_ONE_MILE;
  }
 else   if (mc == MetricsConstants.MILES_AND_FOOTS && roundDist == 2000 / (double)FOOTS_IN_ONE_METER) {
    roundDist=0.5f * METERS_IN_ONE_MILE;
  }
 else   if (mc == MetricsConstants.MILES_AND_FOOTS && roundDist == 1000 / (double)FOOTS_IN_ONE_METER) {
    roundDist=0.25f * METERS_IN_ONE_MILE;
  }
 else   if (mc == MetricsConstants.MILES_AND_YARDS && roundDist == 1000 / (double)YARDS_IN_ONE_METER) {
    roundDist=0.5f * METERS_IN_ONE_MILE;
  }
 else   if (mc == MetricsConstants.MILES_AND_YARDS && roundDist == 500 / (double)YARDS_IN_ONE_METER) {
    roundDist=0.25f * METERS_IN_ONE_MILE;
  }
  return roundDist;
}
