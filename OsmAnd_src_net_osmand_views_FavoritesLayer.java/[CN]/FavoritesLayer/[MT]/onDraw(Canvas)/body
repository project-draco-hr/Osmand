{
  if (view.getZoom() >= startZoom) {
    pixRect.set(0,0,view.getWidth(),view.getHeight());
    view.calculateTileRectangle(pixRect,view.getCenterPointX(),view.getCenterPointY(),view.getXTile(),view.getYTile(),tileRect);
    double topLatitude=MapUtils.getLatitudeFromTile(view.getZoom(),tileRect.top);
    double leftLongitude=MapUtils.getLongitudeFromTile(view.getZoom(),tileRect.left);
    double bottomLatitude=MapUtils.getLatitudeFromTile(view.getZoom(),tileRect.bottom);
    double rightLongitude=MapUtils.getLongitudeFromTile(view.getZoom(),tileRect.right);
    for (    FavouritePoint o : favouritePoints) {
      if (o.getLatitude() <= topLatitude && o.getLatitude() >= bottomLatitude && o.getLongitude() >= leftLongitude && o.getLongitude() <= rightLongitude) {
        int x=view.getMapXForPoint(o.getLongitude());
        int y=view.getMapYForPoint(o.getLatitude());
        matrix.setTranslate(x,y);
        path.transform(matrix,pathDst);
        canvas.drawPath(pathDst,paint);
        canvas.drawPath(pathDst,paintBlack);
      }
    }
    if (additionalPoints != null) {
      for (      FavouritePoint o : additionalPoints) {
        if (o.getLatitude() <= topLatitude && o.getLatitude() >= bottomLatitude && o.getLongitude() >= leftLongitude && o.getLongitude() <= rightLongitude) {
          int x=view.getMapXForPoint(o.getLongitude());
          int y=view.getMapYForPoint(o.getLatitude());
          matrix.setTranslate(x,y);
          path.transform(matrix,pathDst);
          canvas.drawPath(pathDst,paint);
          canvas.drawPath(pathDst,paintBlack);
        }
      }
    }
  }
}
