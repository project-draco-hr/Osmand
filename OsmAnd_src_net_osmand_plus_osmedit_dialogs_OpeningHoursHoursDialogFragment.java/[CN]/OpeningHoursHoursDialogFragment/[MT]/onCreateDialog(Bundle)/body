{
  Bundle args=getArguments();
  final boolean isStart=args.getBoolean(IS_START);
  final OpeningHoursParser.BasicOpeningHourRule item=(OpeningHoursParser.BasicOpeningHourRule)args.getSerializable(BASIC_OPENING_HOUR_RULE);
  TimePickerDialog.OnTimeSetListener callback=new TimePickerDialog.OnTimeSetListener(){
    @Override public void onTimeSet(    TimePicker view,    int hourOfDay,    int minute){
      int time=minute + hourOfDay * 60;
      if (isStart) {
        item.setStartTime(time);
        OpeningHoursHoursDialogFragment.createInstance(item,null,false).show(getFragmentManager(),"TimePickerDialogFragment");
      }
 else {
        item.setEndTime(time);
        ((NormalDataFragment)getParentFragment()).addBasicOpeningHoursRule(item);
      }
    }
  }
;
  Calendar initialState=(Calendar)args.getSerializable(INITIAL_TIME);
  if (initialState == null)   initialState=Calendar.getInstance();
  TimePickerDialog timePickerDialog=new TimePickerDialog(getActivity(),callback,initialState.get(Calendar.HOUR_OF_DAY),initialState.get(Calendar.MINUTE),DateFormat.is24HourFormat(getActivity()));
  timePickerDialog.setTitle(isStart ? "Opening" : "Closing");
  return timePickerDialog;
}
