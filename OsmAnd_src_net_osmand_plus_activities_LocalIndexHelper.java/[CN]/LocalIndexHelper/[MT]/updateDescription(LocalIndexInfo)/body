{
  File f=new File(info.getPathToData());
  if (info.getType() == LocalIndexType.MAP_DATA) {
    updateObfFileInformation(info,f);
    info.setDescription(info.getDescription() + getInstalledDate(f));
  }
 else   if (info.getType() == LocalIndexType.POI_DATA) {
    checkPoiFileVersion(info,f);
    info.setDescription(getInstalledDate(f));
  }
 else   if (info.getType() == LocalIndexType.GPX_DATA) {
    updateGpxInfo(info,f);
  }
 else   if (info.getType() == LocalIndexType.VOICE_DATA) {
    info.setDescription(getInstalledDate(f));
  }
 else   if (info.getType() == LocalIndexType.TTS_VOICE_DATA) {
    info.setDescription(getInstalledDate(f));
  }
 else   if (info.getType() == LocalIndexType.TILES_DATA) {
    if (f.isDirectory() && TileSourceManager.isTileSourceMetaInfoExist(f)) {
      TileSourceTemplate template=TileSourceManager.createTileSourceTemplate(new File(info.getPathToData()));
      Set<Integer> zooms=new TreeSet<Integer>();
      for (      String s : f.list()) {
        try {
          zooms.add(Integer.parseInt(s));
        }
 catch (        NumberFormatException e) {
        }
      }
      String descr=app.getString(R.string.local_index_tile_data,template.getName(),template.getMinimumZoomSupported(),template.getMaximumZoomSupported(),template.getUrlTemplate() != null,zooms.toString());
      info.setDescription(descr);
    }
 else     if (f.isFile() && f.getName().endsWith(SQLiteTileSource.EXT)) {
      SQLiteTileSource template=new SQLiteTileSource(f,TileSourceManager.getKnownSourceTemplates());
      String descr=app.getString(R.string.local_index_tile_data,template.getName(),template.getMinimumZoomSupported(),template.getMaximumZoomSupported(),template.couldBeDownloadedFromInternet(),"");
      info.setDescription(descr);
    }
  }
}
