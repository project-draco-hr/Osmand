{
  File f=new File(info.getPathToData());
  if (info.getType() == LocalIndexType.MAP_DATA) {
    updateObfFileInformation(info,f);
  }
 else   if (info.getType() == LocalIndexType.GPX_DATA) {
    updateGpxInfo(info,f);
  }
 else   if (info.getType() == LocalIndexType.VOICE_DATA) {
    info.setDescription(getInstalledDate(f));
  }
 else   if (info.getType() == LocalIndexType.TTS_VOICE_DATA) {
    info.setDescription(getInstalledDate(f));
  }
 else   if (info.getType() == LocalIndexType.TILES_DATA) {
    Set<Integer> zooms=new TreeSet<Integer>();
    ITileSource template;
    if (f.isDirectory() && TileSourceManager.isTileSourceMetaInfoExist(f)) {
      template=TileSourceManager.createTileSourceTemplate(new File(info.getPathToData()));
      for (      String s : f.list()) {
        try {
          zooms.add(Integer.parseInt(s));
        }
 catch (        NumberFormatException e) {
        }
      }
    }
 else     if (f.isFile() && f.getName().endsWith(SQLiteTileSource.EXT)) {
      template=new SQLiteTileSource(app,f,TileSourceManager.getKnownSourceTemplates());
    }
 else {
      return;
    }
    String descr="";
    descr+=app.getString(R.string.local_index_tile_data_name,template.getName());
    descr+="\n" + app.getString(R.string.local_index_tile_data_minzoom,template.getMinimumZoomSupported());
    descr+="\n" + app.getString(R.string.local_index_tile_data_maxzoom,template.getMaximumZoomSupported());
    descr+="\n" + app.getString(R.string.local_index_tile_data_downloadable,template.couldBeDownloadedFromInternet());
    if (template.getExpirationTimeMinutes() >= 0) {
      descr+="\n" + app.getString(R.string.local_index_tile_data_expire,template.getExpirationTimeMinutes());
    }
    descr+="\n" + app.getString(R.string.local_index_tile_data_zooms,zooms.toString());
    info.setDescription(descr);
  }
 else {
    OsmandPlugin.onUpdateLocalIndexDescription(info);
  }
}
