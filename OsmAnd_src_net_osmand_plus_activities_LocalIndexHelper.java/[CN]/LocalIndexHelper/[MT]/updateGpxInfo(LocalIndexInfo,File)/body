{
  if (info.getGpxFile() == null) {
    info.setGpxFile(GPXUtilities.loadGPXFile(app,f));
  }
  GPXFileResult result=info.getGpxFile();
  if (result.error != null) {
    info.setCorrupted(true);
    info.setDescription(result.error);
  }
 else {
    int totalDistance=0;
    long startTime=Long.MAX_VALUE;
    long endTime=Long.MIN_VALUE;
    double diffElevationUp=0;
    double diffElevationDown=0;
    double totalElevation=0;
    double minElevation=0;
    double maxElevation=0;
    float maxSpeed=0;
    int speedCount=0;
    double totalSpeedSum=0;
    int points=0;
    for (int i=0; i < result.locations.size(); i++) {
      List<Location> subtrack=result.locations.get(i);
      points+=subtrack.size();
      int distance=0;
      for (int j=0; j < subtrack.size(); j++) {
        long time=subtrack.get(j).getTime();
        if (time != 0) {
          startTime=Math.min(startTime,time);
          endTime=Math.max(startTime,time);
        }
        float speed=subtrack.get(j).getSpeed();
        if (speed > 0) {
          totalSpeedSum+=speed;
          maxSpeed=Math.max(speed,maxSpeed);
          speedCount++;
        }
        totalElevation+=subtrack.get(j).getAltitude();
        minElevation=Math.min(totalElevation,minElevation);
        maxElevation=Math.max(totalElevation,maxElevation);
        if (j > 0) {
          double diff=subtrack.get(j).getAltitude() - subtrack.get(j - 1).getAltitude();
          if (diff > 0) {
            diffElevationUp+=diff;
          }
 else {
            diffElevationDown-=diff;
          }
          distance+=MapUtils.getDistance(subtrack.get(j - 1).getLatitude(),subtrack.get(j - 1).getLongitude(),subtrack.get(j).getLatitude(),subtrack.get(j).getLongitude());
        }
      }
      totalDistance+=distance;
    }
    if (startTime == Long.MAX_VALUE) {
      startTime=f.lastModified();
    }
    if (endTime == Long.MIN_VALUE) {
      endTime=f.lastModified();
    }
    info.setDescription(app.getString(R.string.local_index_gpx_info,result.locations.size(),points,result.wayPoints.size(),OsmAndFormatter.getFormattedDistance(totalDistance,app),startTime,endTime));
    if (totalElevation != 0 || diffElevationUp != 0 || diffElevationDown != 0) {
      info.setDescription(info.getDescription() + app.getString(R.string.local_index_gpx_info_elevation,totalElevation / points,minElevation,maxElevation,diffElevationUp,diffElevationDown));
    }
    if (speedCount > 0) {
      info.setDescription(info.getDescription() + app.getString(R.string.local_index_gpx_info_speed,OsmAndFormatter.getFormattedSpeed((float)(totalSpeedSum / speedCount),app),OsmAndFormatter.getFormattedSpeed(maxSpeed,app)));
    }
    info.setDescription(info.getDescription() + app.getString(R.string.local_index_gpx_info_show));
  }
}
