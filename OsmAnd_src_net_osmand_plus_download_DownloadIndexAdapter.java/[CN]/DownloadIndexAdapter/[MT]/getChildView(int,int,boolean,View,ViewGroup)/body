{
  View v=convertView;
  if (v == null) {
    LayoutInflater inflater=(LayoutInflater)downloadFragment.getDownloadActivity().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
    v=inflater.inflate(net.osmand.plus.R.layout.download_index_list_item,parent,false);
  }
  final View row=v;
  TextView name=(TextView)row.findViewById(R.id.name);
  TextView update=(TextView)row.findViewById(R.id.update_descr);
  update.setText("");
  TextView uptodate=(TextView)row.findViewById(R.id.uptodate_descr);
  uptodate.setText("");
  TextView description=(TextView)row.findViewById(R.id.download_descr);
  IndexItem e=(IndexItem)getChild(groupPosition,childPosition);
  OsmandApplication clctx=downloadFragment.getMyApplication();
  String eName=e.getVisibleName(clctx,osmandRegions);
  name.setText(eName.trim());
  String d=e.getDate(format) + " " + e.getSizeDescription(clctx);
  description.setText(d.trim());
  CheckBox ch=(CheckBox)row.findViewById(R.id.check_download_item);
  ch.setChecked(downloadFragment.getDownloadActivity().getEntriesToDownload().containsKey(e));
  ch.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      final CheckBox ch=(CheckBox)v.findViewById(R.id.check_download_item);
      ch.setChecked(!ch.isChecked());
      downloadFragment.onChildClick(downloadFragment.getExpandableListView(),row,groupPosition,childPosition,getChildId(groupPosition,childPosition));
    }
  }
);
  if (indexFileNames != null) {
    if (e.isAlreadyDownloaded(indexFileNames)) {
      if (e.getType() == DownloadActivityType.HILLSHADE_FILE || e.getType() == DownloadActivityType.SRTM_COUNTRY_FILE) {
        String sfName=e.getTargetFileName();
        if (indexActivatedFileNames.containsKey(sfName)) {
          name.setTypeface(Typeface.DEFAULT,Typeface.NORMAL);
        }
 else         if (e.getType() == DownloadActivityType.HILLSHADE_FILE) {
          name.setTypeface(Typeface.DEFAULT,Typeface.NORMAL);
        }
 else {
          name.setTypeface(Typeface.DEFAULT,Typeface.ITALIC);
        }
      }
 else       if (e.getDate(format) != null) {
        String sfName=e.getTargetFileName();
        final boolean updatableResource=indexActivatedFileNames.containsKey(sfName);
        if (updatableResource && !DownloadActivity.downloadListIndexThread.checkIfItemOutdated(e)) {
          description.setText(indexActivatedFileNames.get(sfName) + " " + e.getSizeDescription(clctx));
          uptodate.setText(downloadFragment.getResources().getString(R.string.local_index_installed) + ": " + indexActivatedFileNames.get(sfName));
          uptodate.setVisibility(View.VISIBLE);
          update.setVisibility(View.GONE);
        }
 else         if (indexFileNames.containsKey(sfName) && !DownloadActivity.downloadListIndexThread.checkIfItemOutdated(e)) {
          description.setText(indexFileNames.get(sfName) + " " + e.getSizeDescription(clctx));
          uptodate.setText(downloadFragment.getResources().getString(R.string.local_index_installed) + ": " + indexFileNames.get(sfName));
          uptodate.setVisibility(View.VISIBLE);
          update.setVisibility(View.GONE);
        }
 else         if (updatableResource) {
          String updatedDescr=indexActivatedFileNames.get(sfName) + " " + e.getSizeDescription(clctx);
          description.setText(updatedDescr);
          update.setText(downloadFragment.getResources().getString(R.string.local_index_installed) + ": " + e.getDate(format));
          uptodate.setVisibility(View.GONE);
          update.setVisibility(View.VISIBLE);
        }
 else {
          description.setText(name.getText() + "\n" + downloadFragment.getResources().getString(R.string.local_index_installed)+ ": "+ indexFileNames.get(sfName));
          update.setText(downloadFragment.getResources().getString(R.string.local_index_installed) + ": " + e.getDate(format));
          uptodate.setVisibility(View.GONE);
          update.setVisibility(View.VISIBLE);
        }
      }
    }
  }
  return row;
}
