{
  View row=convertView;
  if (row == null) {
    LayoutInflater inflater=getMyActivity().getLayoutInflater();
    row=inflater.inflate(R.layout.gpx_item_list_item,parent,false);
  }
  GpxDisplayItem child=getChild(groupPosition,childPosition);
  TextView label=(TextView)row.findViewById(R.id.name);
  TextView description=(TextView)row.findViewById(R.id.description);
  TextView additional=(TextView)row.findViewById(R.id.additional);
  ImageView icon=(ImageView)row.findViewById(R.id.icon);
  if (child.splitMetric >= 0 && child.splitName != null) {
    additional.setVisibility(View.VISIBLE);
    icon.setVisibility(View.INVISIBLE);
    additional.setText(child.splitName);
  }
 else {
    icon.setVisibility(View.VISIBLE);
    additional.setVisibility(View.INVISIBLE);
    if (child.group.getType() == GpxDisplayItemType.TRACK_SEGMENT) {
      icon.setImageResource(!lightContent ? R.drawable.ic_action_polygom_dark : R.drawable.ic_action_polygom_light);
    }
 else     if (child.group.getType() == GpxDisplayItemType.TRACK_ROUTE_POINTS) {
      icon.setImageResource(!lightContent ? R.drawable.ic_action_markers_dark : R.drawable.ic_action_markers_light);
    }
 else {
      int groupColor=child.group.getColor();
      if (child.locationStart != null) {
        groupColor=child.locationStart.getColor(groupColor);
      }
      if (groupColor == 0) {
        groupColor=getMyActivity().getResources().getColor(R.color.gpx_track);
      }
      icon.setImageDrawable(FavoriteImageDrawable.getOrCreate(getMyActivity(),groupColor));
    }
  }
  row.setTag(child);
  label.setText(Html.fromHtml(child.name.replace("\n","<br/>")));
  if ((child.expanded || isArgumentTrue(ARG_TO_EXPAND_TRACK_INFO)) && !Algorithms.isEmpty(child.description)) {
    String d=child.description;
    if (child.group.getType() == GpxDisplayItemType.TRACK_SEGMENT) {
      d+="<br/>" + app.getString(R.string.local_index_gpx_info_show);
    }
    description.setText(Html.fromHtml(d));
    description.setVisibility(View.VISIBLE);
  }
 else {
    description.setVisibility(View.GONE);
  }
  return row;
}
