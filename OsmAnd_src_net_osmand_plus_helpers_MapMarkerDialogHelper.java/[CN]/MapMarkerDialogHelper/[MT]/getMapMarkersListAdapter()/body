{
  screenOrientation=DashLocationFragment.getScreenOrientation(mapActivity);
  calculateLocationParams();
  final List<Object> objects=getListObjects();
  List<Object> activeObjects=getActiveObjects(objects);
  return new StableArrayAdapter(mapActivity,R.layout.map_marker_item,R.id.title,objects,activeObjects){
    @Override public void buildDividers(){
      dividers=getCustomDividers(getObjects());
    }
    @Override public boolean isEnabled(    int position){
      Object obj=getItem(position);
      return obj instanceof MapMarker;
    }
    @Override public View getView(    final int position,    View convertView,    ViewGroup parent){
      View v=convertView;
      Object obj=getItem(position);
      boolean labelView=(obj instanceof Integer);
      boolean topDividerView=(obj instanceof Boolean) && ((Boolean)obj);
      boolean bottomDividerView=(obj instanceof Boolean) && !((Boolean)obj);
      if (labelView) {
        v=createItemForCategory(this,(Integer)obj);
        AndroidUtils.setListItemBackground(mapActivity,v,nightMode);
      }
 else       if (topDividerView) {
        v=mapActivity.getLayoutInflater().inflate(R.layout.card_top_divider,null);
        AndroidUtils.setListBackground(mapActivity,v,nightMode);
      }
 else       if (bottomDividerView) {
        v=mapActivity.getLayoutInflater().inflate(R.layout.card_bottom_divider,null);
        AndroidUtils.setListBackground(mapActivity,v,nightMode);
      }
 else       if (obj instanceof MapMarker) {
        MapMarker marker=(MapMarker)obj;
        v=updateMapMarkerItemView(this,v,marker);
        AndroidUtils.setListItemBackground(mapActivity,v,nightMode);
      }
      return v;
    }
  }
;
}
