{
  final int deviceApiVersion=android.os.Build.VERSION.SDK_INT;
  String SITE_API;
  if (deviceApiVersion >= android.os.Build.VERSION_CODES.GINGERBREAD) {
    SITE_API="https://api.openstreetmap.org/";
  }
 else {
    SITE_API="http://api.openstreetmap.org/";
  }
  List<OpenStreetNote> bugs=new ArrayList<>();
  StringBuilder b=new StringBuilder();
  b.append(SITE_API).append("api/0.6/notes?bbox=");
  b.append(leftLongitude);
  b.append(",").append(bottomLatitude);
  b.append(",").append(rightLongitude);
  b.append(",").append(topLatitude);
  try {
    log.info("Loading bugs " + b);
    URLConnection connection=NetworkUtils.getHttpURLConnection(b.toString());
    BufferedReader reader=new BufferedReader(new InputStreamReader(connection.getInputStream()));
    XmlPullParser parser=Xml.newPullParser();
    parser.setInput(reader);
    int tok;
    OpenStreetNote current=null;
    int commentIndex=0;
    while ((tok=parser.next()) != XmlPullParser.END_DOCUMENT) {
      if (tok == XmlPullParser.START_TAG) {
        if (parser.getName().equals("note")) {
          current=new OpenStreetNote();
          commentIndex=-1;
          current.setLongitude(Double.parseDouble(parser.getAttributeValue("","lon")));
          current.setLatitude(Double.parseDouble(parser.getAttributeValue("","lat")));
          current.setOpened(true);
          bugs.add(current);
        }
 else         if (parser.getName().equals("status") && current != null) {
          current.setOpened("open".equals(readText(parser,"status")));
        }
 else         if (parser.getName().equals("id") && current != null) {
          current.id=Long.parseLong(readText(parser,"id"));
        }
 else         if (parser.getName().equals("comment")) {
          commentIndex++;
        }
 else         if (parser.getName().equals("user") && current != null) {
          if (commentIndex == current.users.size()) {
            current.users.add(readText(parser,"user"));
          }
        }
 else         if (parser.getName().equals("date") && current != null) {
          if (commentIndex == current.dates.size()) {
            current.dates.add(readText(parser,"date"));
          }
        }
 else         if (parser.getName().equals("text") && current != null) {
          if (commentIndex == current.comments.size()) {
            current.comments.add(readText(parser,"text"));
          }
        }
      }
    }
    reader.close();
    for (    OpenStreetNote note : bugs) {
      note.acquireDescriptionAndType();
    }
  }
 catch (  IOException|RuntimeException|XmlPullParserException e) {
    log.warn("Error loading bugs",e);
  }
  return bugs;
}
