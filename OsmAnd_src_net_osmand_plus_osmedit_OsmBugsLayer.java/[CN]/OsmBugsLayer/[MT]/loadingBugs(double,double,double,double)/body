{
  List<OpenStreetBug> bugs=new ArrayList<OpenStreetBug>();
  StringBuilder b=new StringBuilder();
  b.append("http://openstreetbugs.schokokeks.org/api/0.1/getBugs?");
  b.append("b=").append(bottomLatitude);
  b.append("&t=").append(topLatitude);
  b.append("&l=").append(leftLongitude);
  b.append("&r=").append(rightLongitude);
  try {
    log.info("Loading bugs " + b.toString());
    URL url=new URL(b.toString());
    URLConnection connection=url.openConnection();
    BufferedReader reader=new BufferedReader(new InputStreamReader(connection.getInputStream()));
    String st=null;
    while ((st=reader.readLine()) != null) {
      Matcher matcher=patternToParse.matcher(st);
      if (matcher.find()) {
        OpenStreetBug bug=new OpenStreetBug();
        bug.setId(Long.parseLong(matcher.group(1)));
        bug.setLongitude(Double.parseDouble(matcher.group(2)));
        bug.setLatitude(Double.parseDouble(matcher.group(3)));
        bug.setName(matcher.group(4).replace("<hr />","\n"));
        bug.setOpened(matcher.group(5).equals("0"));
        bugs.add(bug);
      }
    }
  }
 catch (  IOException e) {
    log.warn("Error loading bugs",e);
  }
catch (  NumberFormatException e) {
    log.warn("Error loading bugs",e);
  }
catch (  RuntimeException e) {
    log.warn("Error loading bugs",e);
  }
  for (  OsmbugsPoint p : local.getOsmbugsPoints()) {
    if (p.getId() < 0) {
      OpenStreetBug bug=new OpenStreetBug();
      bug.setId(p.getId());
      bug.setLongitude(p.getLongitude());
      bug.setLatitude(p.getLatitude());
      bug.setName(p.getText());
      bug.setOpened(p.getAction() == Action.CREATE || p.getAction() == Action.MODIFY);
      bug.setLocal(true);
      bugs.add(bug);
    }
  }
  return bugs;
}
