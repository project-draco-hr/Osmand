{
  SearchRequest<Amenity> req=BinaryMapIndexReader.buildSearchPoiRequest(MapUtils.get31TileNumberX(verbose.lonleft),MapUtils.get31TileNumberX(verbose.lonright),MapUtils.get31TileNumberY(verbose.lattop),MapUtils.get31TileNumberY(verbose.latbottom),verbose.getZoom(),new SearchPoiTypeFilter(){
    @Override public boolean accept(    AmenityType type,    String subcategory){
      return true;
    }
  }
,new ResultMatcher<Amenity>(){
    @Override public boolean publish(    Amenity object){
      println(object.getType().toString() + " : " + object.getSubType()+ " "+ object.getEnName()+ " "+ object.getLocation()+ " id="+ (object.getId() >> 1));
      return false;
    }
    @Override public boolean isCancelled(){
      return false;
    }
  }
);
  index.initCategories(p);
  println("\tRegion: " + p.name);
  println("\t\tBounds " + formatLatBounds(p.getLeftLongitude(),p.getRightLongitude(),p.getTopLatitude(),p.getBottomLatitude()));
  println("\t\tCategories:");
  for (int i=0; i < p.categories.size(); i++) {
    println("\t\t\t" + p.categories.get(i));
    for (int j=0; j < p.subcategories.get(i).size(); j++)     println("\t\t\t\t" + p.subcategories.get(i).get(j));
  }
  req.poiTypeFilter=null;
  index.searchPoi(p,req);
}
