{
  boolean multipolygon=obj.getPolygonInnerCoordinates() != null && obj.getPolygonInnerCoordinates().length > 0;
  if (multipolygon) {
    b.append("Multipolygon");
  }
 else {
    b.append(obj.area ? "Area" : (obj.getPointsLength() > 1 ? "Way" : "Point"));
  }
  int[] types=obj.getTypes();
  b.append(" types [");
  for (int j=0; j < types.length; j++) {
    if (j > 0) {
      b.append(", ");
    }
    TagValuePair pair=obj.getMapIndex().decodeType(types[j]);
    if (pair == null) {
      System.err.println("Type " + types[j] + "was not found");
      continue;
    }
    b.append(pair.toSimpleString() + " (" + types[j]+ ")");
  }
  b.append("]");
  if (obj.getAdditionalTypes() != null && obj.getAdditionalTypes().length > 0) {
    b.append(" add_types [");
    for (int j=0; j < obj.getAdditionalTypes().length; j++) {
      if (j > 0) {
        b.append(", ");
      }
      TagValuePair pair=obj.getMapIndex().decodeType(obj.getAdditionalTypes()[j]);
      if (pair == null) {
        System.err.println("Type " + obj.getAdditionalTypes()[j] + "was not found");
        continue;
      }
      b.append(pair.toSimpleString() + "(" + obj.getAdditionalTypes()[j]+ ")");
    }
    b.append("]");
  }
  TIntObjectHashMap<String> names=obj.getObjectNames();
  TIntArrayList order=obj.getNamesOrder();
  if (names != null && !names.isEmpty()) {
    b.append(" Names [");
    for (int j=0; j < order.size(); j++) {
      if (j > 0) {
        b.append(", ");
      }
      TagValuePair pair=obj.getMapIndex().decodeType(order.get(j));
      if (pair == null) {
        throw new NullPointerException("Type " + order.get(j) + "was not found");
      }
      b.append(pair.toSimpleString() + "(" + order.get(j)+ ")");
      b.append(" - ").append(names.get(order.get(j)));
    }
    b.append("]");
  }
  b.append(" id ").append((obj.getId() >> 1));
  b.append(" lat/lon : ");
  for (int i=0; i < obj.getPointsLength(); i++) {
    float x=(float)MapUtils.get31LongitudeX(obj.getPoint31XTile(i));
    float y=(float)MapUtils.get31LatitudeY(obj.getPoint31YTile(i));
    b.append(y).append(" / ").append(x).append(" , ");
  }
}
