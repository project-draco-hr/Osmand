{
  final TargetPointsHelper targets=getTargets();
  final Spinner fromSpinner=setupFromSpinner(parentView);
  fromSpinner.setClickable(false);
  fromSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener(){
    @Override public void onItemSelected(    AdapterView<?> parent,    View view,    int position,    long id){
      if (id == SPINNER_MY_LOCATION_ID) {
        if (targets.getPointToStart() != null) {
          targets.clearStartPoint(true);
        }
        updateFromIcon(parentView);
      }
 else       if (id == SPINNER_FAV_ID) {
        selectFavorite(parentView,false);
      }
 else       if (id == SPINNER_MAP_ID) {
        selectOnScreen(false);
      }
 else       if (id == SPINNER_ADDRESS_ID) {
        Intent intent=new Intent(mapActivity,SearchAddressActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);
        intent.putExtra(TARGET_SELECT,false);
        mapActivity.startActivityForResult(intent,MapControlsLayer.REQUEST_ADDRESS_SELECT);
      }
 else       if (id == SPINNER_MAP_MARKER_MORE_ID) {
        selectMapMarker(parentView,-1,false);
      }
 else       if (id == SPINNER_MAP_MARKER_1_ID) {
        selectMapMarker(parentView,0,false);
      }
 else       if (id == SPINNER_MAP_MARKER_2_ID) {
        selectMapMarker(parentView,1,false);
      }
 else       if (id == SPINNER_MAP_MARKER_3_ID) {
        selectMapMarker(parentView,2,false);
      }
    }
    @Override public void onNothingSelected(    AdapterView<?> parent){
    }
  }
);
  parentView.findViewById(R.id.FromLayout).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      fromSpinner.performClick();
    }
  }
);
  updateFromIcon(parentView);
  ImageView fromDropDownIcon=(ImageView)parentView.findViewById(R.id.fromDropDownIcon);
  fromDropDownIcon.setImageDrawable(mapActivity.getMyApplication().getIconsCache().getContentIcon(R.drawable.ic_action_arrow_drop_down,isLight()));
}
