{
  mainView.findViewById(R.id.RouteInfoControls).setVisibility(View.VISIBLE);
  final OsmandApplication ctx=mapActivity.getMyApplication();
  ImageView prev=(ImageView)mainView.findViewById(R.id.Prev);
  prev.setImageDrawable(ctx.getIconsCache().getContentIcon(R.drawable.ic_prev));
  if (directionInfo >= 0) {
    prev.setVisibility(View.VISIBLE);
    prev.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        if (directionInfo >= 0) {
          directionInfo--;
        }
        if (routingHelper.getRouteDirections() != null && directionInfo >= 0) {
          if (routingHelper.getRouteDirections().size() > directionInfo) {
            RouteDirectionInfo info=routingHelper.getRouteDirections().get(directionInfo);
            net.osmand.Location l=routingHelper.getLocationFromRouteDirection(info);
            contextMenu.showMinimized(new LatLon(l.getLatitude(),l.getLongitude()),null,info);
            mapView.getAnimatedDraggingThread().startMoving(l.getLatitude(),l.getLongitude(),mapView.getZoom(),true);
          }
        }
        mapView.refreshMap();
        updateInfo(mainView);
      }
    }
);
  }
 else {
    prev.setVisibility(View.GONE);
  }
  ImageView next=(ImageView)mainView.findViewById(R.id.Next);
  next.setVisibility(View.VISIBLE);
  next.setImageDrawable(ctx.getIconsCache().getContentIcon(R.drawable.ic_next));
  next.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (routingHelper.getRouteDirections() != null && directionInfo < routingHelper.getRouteDirections().size() - 1) {
        directionInfo++;
        RouteDirectionInfo info=routingHelper.getRouteDirections().get(directionInfo);
        net.osmand.Location l=routingHelper.getLocationFromRouteDirection(info);
        contextMenu.showMinimized(new LatLon(l.getLatitude(),l.getLongitude()),null,info);
        mapView.getAnimatedDraggingThread().startMoving(l.getLatitude(),l.getLongitude(),mapView.getZoom(),true);
      }
      mapView.refreshMap();
      updateInfo(mainView);
    }
  }
);
  View info=mainView.findViewById(R.id.Info);
  info.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      Intent intent=new Intent(mapView.getContext(),ShowRouteInfoActivity.class);
      intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
      mapView.getContext().startActivity(intent);
    }
  }
);
  TextView textView=(TextView)mainView.findViewById(R.id.InfoTextView);
  ImageView iconView=(ImageView)mainView.findViewById(R.id.InfoIcon);
  if (directionInfo >= 0) {
    iconView.setVisibility(View.GONE);
  }
 else {
    iconView.setImageDrawable(ctx.getIconsCache().getContentIcon(R.drawable.ic_action_info_dark));
    iconView.setVisibility(View.VISIBLE);
  }
  if (directionInfo >= 0 && routingHelper.getRouteDirections() != null && directionInfo < routingHelper.getRouteDirections().size()) {
    RouteDirectionInfo ri=routingHelper.getRouteDirections().get(directionInfo);
    textView.setText((directionInfo + 1) + ". " + ri.getDescriptionRoutePart()+ " "+ OsmAndFormatter.getFormattedDistance(ri.distance,ctx));
  }
 else {
    textView.setText(ctx.getRoutingHelper().getGeneralRouteInformation().replace(",",",\n"));
  }
}
