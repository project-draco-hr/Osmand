{
  try {
    if (images != null) {
      for (int i=0; i < images.length; i++) {
        for (int j=0; j < images[i].length; j++) {
        }
      }
    }
    double xTile=getXTile();
    double yTile=getYTile();
    double leftX=(getSize().width / 2d - (xTile - Math.floor(xTile)) * tileSize) / tileSize;
    double leftY=(getSize().height / 2d - (yTile - Math.floor(yTile)) * tileSize) / tileSize;
    int xStartInd=(int)(Math.floor(xTile) - Math.ceil(leftX));
    int yStartInd=(int)(Math.floor(yTile) - Math.ceil(leftY));
    xStartingImage=(int)((leftX - Math.ceil(leftX)) * tileSize);
    yStartingImage=(int)((leftY - Math.ceil(leftY)) * tileSize);
    int tileXCount=(int)Math.ceil((getSize().width - xStartingImage) / (double)tileSize);
    int tileYCount=(int)Math.ceil((getSize().height - yStartingImage) / (double)tileSize);
    images=new BufferedImage[tileXCount][tileYCount];
    for (int i=0; i < images.length; i++) {
      for (int j=0; j < images[i].length; j++) {
        images[i][j]=getImageFor(xStartInd + i,yStartInd + j);
      }
    }
    repaint();
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
}
