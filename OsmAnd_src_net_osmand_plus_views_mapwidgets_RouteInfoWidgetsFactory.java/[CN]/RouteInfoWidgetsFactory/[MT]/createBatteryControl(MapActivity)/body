{
  final int battery=R.drawable.widget_battery_day;
  final int batteryN=R.drawable.widget_battery_night;
  final int batteryCharging=R.drawable.widget_battery_charging_day;
  final int batteryChargingN=R.drawable.widget_battery_charging_night;
  final OsmandApplication ctx=map.getMyApplication();
  final TextInfoWidget batteryControl=new TextInfoWidget(map){
    private long cachedLeftTime=0;
    @Override public boolean updateInfo(    DrawSettings drawSettings){
      long time=System.currentTimeMillis();
      if (time - cachedLeftTime > 1000) {
        cachedLeftTime=time;
        Intent batteryIntent=ctx.registerReceiver(null,new IntentFilter(Intent.ACTION_BATTERY_CHANGED));
        int level=batteryIntent.getIntExtra(BatteryManager.EXTRA_LEVEL,-1);
        int scale=batteryIntent.getIntExtra(BatteryManager.EXTRA_SCALE,-1);
        int status=batteryIntent.getIntExtra(BatteryManager.EXTRA_STATUS,-1);
        if (level == -1 || scale == -1 || status == -1) {
          setText("?",null);
          setIcons(battery,batteryN);
        }
 else {
          boolean charging=((status == BatteryManager.BATTERY_STATUS_CHARGING) || (status == BatteryManager.BATTERY_STATUS_FULL));
          setText(String.format("%d%%",(level * 100) / scale),null);
          setIcons(charging ? batteryCharging : battery,charging ? batteryChargingN : batteryN);
        }
      }
      return false;
    }
  }
;
  batteryControl.setText(null,null);
  batteryControl.setIcons(battery,batteryN);
  return batteryControl;
}
