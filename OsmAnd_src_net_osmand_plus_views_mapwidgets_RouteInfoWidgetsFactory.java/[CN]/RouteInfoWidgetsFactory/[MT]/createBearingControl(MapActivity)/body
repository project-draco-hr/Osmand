{
  final int bearingResId=R.drawable.widget_bearing_day;
  final int bearingNightResId=R.drawable.widget_bearing_night;
  final int relativeBearingResId=R.drawable.widget_relative_bearing_day;
  final int relativeBearingNightResId=R.drawable.widget_relative_bearing_night;
  final OsmandApplication ctx=map.getMyApplication();
  final OsmandPreference<Boolean> showRelativeBearing=ctx.getSettings().SHOW_RELATIVE_BEARING_OTHERWISE_REGULAR_BEARING;
  final TextInfoWidget bearingControl=new TextInfoWidget(map){
    private int cachedDegrees;
    public LatLon getPointToNavigate(){
      TargetPoint p=map.getPointToNavigate();
      return p == null ? null : p.point;
    }
    @Override public boolean updateInfo(    DrawSettings drawSettings){
      int b=getBearing(showRelativeBearing.get());
      if (distChanged(cachedDegrees,b)) {
        cachedDegrees=b;
        if (b != -1000) {
          setText(String.valueOf(b) + "??",null);
        }
 else {
          setText(null,null);
        }
        return true;
      }
      return false;
    }
    public int getBearing(    boolean relative){
      int d=-1000;
      Location myLocation=getOsmandApplication().getLocationProvider().getLastKnownLocation();
      LatLon l=getPointToNavigate();
      if (l == null) {
        List<MapMarker> markers=getOsmandApplication().getMapMarkersHelper().getSortedMapMarkers();
        if (markers.size() > 0) {
          l=markers.get(0).point;
        }
      }
      if (myLocation != null && l != null) {
        Location dest=new Location("");
        dest.setLatitude(l.getLatitude());
        dest.setLongitude(l.getLongitude());
        dest.setBearing(myLocation.bearingTo(dest));
        GeomagneticField destGf=new GeomagneticField((float)dest.getLatitude(),(float)dest.getLongitude(),(float)dest.getAltitude(),System.currentTimeMillis());
        float bearingToDest=dest.getBearing() + destGf.getDeclination();
        if (relative) {
          float b=-1000;
          Float heading=getOsmandApplication().getLocationProvider().getHeading();
          if (((myLocation.hasSpeed() && myLocation.getSpeed() < 11) || !myLocation.hasBearing()) && heading != null) {
            b=heading;
          }
 else           if (myLocation.hasBearing()) {
            GeomagneticField myLocGf=new GeomagneticField((float)myLocation.getLatitude(),(float)myLocation.getLongitude(),(float)myLocation.getAltitude(),System.currentTimeMillis());
            b=(myLocation.getBearing() + myLocGf.getDeclination());
          }
          if (b > -1000) {
            bearingToDest-=b;
            if (bearingToDest > 180f) {
              bearingToDest-=360f;
            }
 else             if (bearingToDest < -180f) {
              bearingToDest+=360f;
            }
            d=(int)bearingToDest;
          }
        }
 else {
          d=(int)bearingToDest;
        }
      }
      return d;
    }
  }
;
  bearingControl.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showRelativeBearing.set(!showRelativeBearing.get());
      bearingControl.setIcons(showRelativeBearing.get() ? bearingResId : relativeBearingResId,showRelativeBearing.get() ? bearingNightResId : relativeBearingNightResId);
      map.getMapView().refreshMap();
    }
  }
);
  bearingControl.setText(null,null);
  bearingControl.setIcons(showRelativeBearing.get() ? bearingResId : relativeBearingResId,showRelativeBearing.get() ? bearingNightResId : relativeBearingNightResId);
  return bearingControl;
}
