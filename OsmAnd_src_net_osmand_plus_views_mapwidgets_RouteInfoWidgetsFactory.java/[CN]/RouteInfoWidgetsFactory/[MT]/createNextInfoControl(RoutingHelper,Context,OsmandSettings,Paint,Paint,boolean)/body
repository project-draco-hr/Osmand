{
  final NextTurnInfoWidget nextTurnInfo=new NextTurnInfoWidget(ctx,textPaint,subtextPaint,horisontalMini){
    NextDirectionInfo calc1=new NextDirectionInfo();
    TurnType straight=TurnType.sraight();
    @Override public boolean updateInfo(    DrawSettings drawSettings){
      boolean visible=false;
      if (routingHelper != null && routingHelper.isRouteCalculated() && routingHelper.isFollowingMode()) {
        makeUturnWhenPossible=routingHelper.makeUturnWhenPossible();
        if (makeUturnWhenPossible) {
          visible=true;
          turnImminent=0;
          turnType=TurnType.valueOf(TurnType.TU,settings.DRIVING_REGION.get().leftHandDriving);
          TurnPathHelper.calcTurnPath(pathForTurn,turnType,pathTransform);
          invalidate();
        }
 else {
          boolean showStraight=false;
          NextDirectionInfo r=routingHelper.getNextRouteDirectionInfo(calc1,true);
          if (r != null && r.distanceTo > 0) {
            visible=true;
            if (r.directionInfo == null) {
              if (turnType != null) {
                turnType=null;
                invalidate();
              }
            }
 else             if (!Algorithms.objectEquals(turnType,showStraight ? straight : r.directionInfo.getTurnType())) {
              turnType=showStraight ? straight : r.directionInfo.getTurnType();
              TurnPathHelper.calcTurnPath(pathForTurn,turnType,pathTransform);
              if (turnType.getExitOut() > 0) {
                exitOut=turnType.getExitOut() + "";
              }
 else {
                exitOut=null;
              }
              requestLayout();
              invalidate();
            }
            if (distChanged(r.distanceTo,nextTurnDirection)) {
              invalidate();
              requestLayout();
              nextTurnDirection=r.distanceTo;
            }
            if (turnImminent != r.imminent) {
              turnImminent=r.imminent;
              invalidate();
            }
          }
        }
      }
      updateVisibility(visible);
      return true;
    }
  }
;
  nextTurnInfo.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (routingHelper.isRouteCalculated()) {
        routingHelper.getVoiceRouter().announceCurrentDirection(null);
      }
      nextTurnInfo.requestLayout();
      nextTurnInfo.invalidate();
    }
  }
);
  nextTurnInfo.setVisibility(View.GONE);
  return nextTurnInfo;
}
