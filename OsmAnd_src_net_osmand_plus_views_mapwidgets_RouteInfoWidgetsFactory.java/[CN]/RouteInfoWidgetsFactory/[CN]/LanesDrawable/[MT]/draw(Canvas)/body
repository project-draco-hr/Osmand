{
  float w=72 * scaleCoefficient / miniCoeff;
  Bitmap src=Bitmap.createBitmap(canvas.getWidth(),canvas.getHeight(),Bitmap.Config.ARGB_8888);
  Canvas srcCanvas=new Canvas(src);
  srcCanvas.drawColor(0,PorterDuff.Mode.CLEAR);
  if (lanes != null && lanes.length > 0) {
    srcCanvas.save();
    for (int i=0; i < lanes.length; i++) {
      if ((lanes[i] & 1) == 1) {
        paintRouteDirection.setColor(imminent ? ctx.getResources().getColor(R.color.nav_arrow_imminent) : ctx.getResources().getColor(R.color.nav_arrow));
      }
 else {
        paintRouteDirection.setColor(ctx.getResources().getColor(R.color.nav_arrow_distant));
      }
      int turnType=TurnType.getPrimaryTurn(lanes[i]);
      int secondTurnType=TurnType.getSecondaryTurn(lanes[i]);
      int thirdTurnType=TurnType.getTertiaryTurn(lanes[i]);
      float coef=scaleCoefficient / miniCoeff;
      if (thirdTurnType > 0) {
        Bitmap bSecond=null;
        bSecond=TurnPathHelper.getBitmapFromTurnType(ctx.getResources(),bitmapCache,turnType,secondTurnType,thirdTurnType,TurnPathHelper.THIRD_TURN,coef,leftSide);
        if (bSecond != null) {
          paintSecondTurn.setColorFilter(new PorterDuffColorFilter(paintSecondTurn.getColor(),PorterDuff.Mode.SRC_ATOP));
          srcCanvas.drawBitmap(bSecond,0f,0f,paintSecondTurn);
        }
      }
      if (secondTurnType > 0) {
        Bitmap bSecond=null;
        bSecond=TurnPathHelper.getBitmapFromTurnType(ctx.getResources(),bitmapCache,turnType,secondTurnType,thirdTurnType,TurnPathHelper.SECOND_TURN,coef,leftSide);
        if (bSecond != null) {
          paintSecondTurn.setColorFilter(new PorterDuffColorFilter(paintSecondTurn.getColor(),PorterDuff.Mode.SRC_ATOP));
          srcCanvas.drawBitmap(bSecond,0f,0f,paintSecondTurn);
        }
      }
      Bitmap b=TurnPathHelper.getBitmapFromTurnType(ctx.getResources(),bitmapCache,turnType,secondTurnType,thirdTurnType,TurnPathHelper.FIRST_TURN,coef,leftSide);
      if (b != null) {
        paintRouteDirection.setColorFilter(new PorterDuffColorFilter(paintRouteDirection.getColor(),PorterDuff.Mode.SRC_ATOP));
        srcCanvas.drawBitmap(b,0f,0f,paintRouteDirection);
        srcCanvas.translate(w,0);
      }
    }
    srcCanvas.restore();
  }
  Paint ptBlur=new Paint();
  float density=ctx.getResources().getDisplayMetrics().density;
  ptBlur.setMaskFilter(new BlurMaskFilter(1.66f * density,Blur.OUTER));
  int[] offsetXY=new int[2];
  Bitmap bmAlpha=src.extractAlpha(ptBlur,offsetXY);
  Paint ptAlphaColor=new Paint();
  ptAlphaColor.setColor(0xFF000000);
  canvas.drawBitmap(bmAlpha,offsetXY[0],offsetXY[1],ptAlphaColor);
  bmAlpha.recycle();
  canvas.drawBitmap(src,0,0,null);
}
