{
  float w=72 * scaleCoefficient / miniCoeff;
  if (lanes != null && lanes.length > 0) {
    canvas.save();
    for (int i=0; i < lanes.length; i++) {
      int turnType;
      int secondTurnType;
      if ((lanes[i] & 1) == 1) {
        paintRouteDirection.setColor(imminent ? ctx.getResources().getColor(R.color.nav_arrow_imminent) : ctx.getResources().getColor(R.color.nav_arrow));
      }
 else {
        paintRouteDirection.setColor(ctx.getResources().getColor(R.color.nav_arrow_distant));
      }
      turnType=TurnType.getPrimaryTurn(lanes[i]);
      secondTurnType=TurnType.getSecondaryTurn(lanes[i]);
      float coef=scaleCoefficient / miniCoeff;
      Bitmap b=TurnPathHelper.getBitmapFromTurnType(ctx.getResources(),bitmapCache,turnType,secondTurnType,0,1,laneStraightBitmap,coef,leftSide);
      if (secondTurnType > 0) {
        Bitmap bSecond=null;
        bSecond=TurnPathHelper.getBitmapFromTurnType(ctx.getResources(),bitmapCache,turnType,secondTurnType,0,2,laneStraightBitmap,coef,leftSide);
        if (bSecond != null) {
          paintSecondTurn.setColorFilter(new PorterDuffColorFilter(paintSecondTurn.getColor(),PorterDuff.Mode.SRC_ATOP));
          canvas.drawBitmap(bSecond,0f,0f,paintSecondTurn);
        }
      }
      paintRouteDirection.setColorFilter(new PorterDuffColorFilter(paintRouteDirection.getColor(),PorterDuff.Mode.SRC_ATOP));
      canvas.drawBitmap(b,0f,0f,paintRouteDirection);
      canvas.translate(w,0);
    }
    canvas.restore();
  }
}
