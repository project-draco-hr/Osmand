{
  Paint paint=paintFill;
  float xText=0;
  float yText=0;
  Path path=null;
  int type=MapRenderingTypes.getObjectType(obj.getType());
  int subtype=MapRenderingTypes.getPolygonSubType(obj.getType());
  int color=Color.rgb(245,245,245);
  int colorAround=0;
  Shader shader=null;
  boolean showPolygon=true;
  if (type == MapRenderingTypes.MAN_MADE) {
    showPolygon=zoom > 15;
    if (subtype == MapRenderingTypes.SUBTYPE_BUILDING) {
      color=Color.rgb(188,169,169);
    }
 else     if (subtype == MapRenderingTypes.SUBTYPE_GARAGES) {
      color=Color.rgb(221,221,221);
    }
  }
 else   if (type == MapRenderingTypes.WATERWAY) {
    if (subtype == 3) {
      color=Color.rgb(181,208,208);
    }
  }
 else   if (type == MapRenderingTypes.POWER) {
    if (subtype == 5 || subtype == 6) {
      color=Color.rgb(186,186,186);
    }
  }
 else   if (type == MapRenderingTypes.HIGHWAY) {
    if (subtype == MapRenderingTypes.PL_HW_SERVICE || subtype == MapRenderingTypes.PL_HW_UNCLASSIFIED || subtype == MapRenderingTypes.PL_HW_RESIDENTIAL) {
      colorAround=Color.rgb(194,194,194);
      color=clRoadColor;
    }
 else     if (subtype == MapRenderingTypes.PL_HW_PEDESTRIAN || subtype == MapRenderingTypes.PL_HW_FOOTWAY) {
      color=Color.rgb(236,236,236);
      colorAround=Color.rgb(176,176,176);
    }
  }
 else   if (type == MapRenderingTypes.TOURISM) {
    showPolygon=zoom > 15;
    if (subtype == 2) {
      color=Color.rgb(204,153,153);
    }
 else     if (subtype == 8) {
      shader=getShader(R.drawable.h_zoo);
    }
  }
 else   if (type == MapRenderingTypes.NATURAL) {
    if (subtype == 23) {
      color=Color.rgb(174,209,160);
    }
 else     if (subtype == 2) {
      color=Color.rgb(238,204,85);
    }
 else     if (subtype == 21 || subtype == 5) {
      color=Color.rgb(181,208,208);
    }
  }
 else   if (type == MapRenderingTypes.LANDUSE) {
switch (subtype) {
case 1:
      color=Color.rgb(189,227,203);
    break;
case 2:
case 22:
  color=Color.rgb(180,213,240);
break;
case 3:
color=Color.rgb(235,215,254);
break;
case 4:
shader=getShader(R.drawable.h_grave_yard);
break;
case 5:
color=Color.rgb(239,200,200);
break;
case 6:
color=Color.rgb(157,157,108);
break;
case 10:
shader=getShader(R.drawable.h_forest);
break;
case 11:
color=Color.rgb(223,209,214);
break;
case 12:
color=Color.rgb(207,236,168);
break;
case 15:
color=Color.rgb(223,209,214);
break;
case 18:
color=Color.rgb(252,216,219);
break;
case 23:
color=Color.rgb(221,221,221);
break;
case 24:
color=Color.rgb(254,234,234);
colorAround=Color.rgb(245,154,152);
break;
case 27:
shader=getShader(R.drawable.h_vineyard);
break;
}
}
 else if (type == MapRenderingTypes.LEISURE) {
colorAround=Color.rgb(147,207,170);
switch (subtype) {
case 2:
color=Color.rgb(189,227,203);
break;
case 3:
case 14:
case 15:
color=Color.rgb(199,241,163);
break;
case 6:
color=Color.rgb(137,210,174);
case 4:
color=Color.rgb(51,204,153);
break;
case 5:
color=Color.rgb(189,207,203);
break;
case 12:
color=Color.rgb(206,246,202);
break;
case 13:
color=Color.rgb(204,255,241);
break;
case 11:
shader=getShader(R.drawable.h_nr);
break;
}
}
 else if (type == MapRenderingTypes.AMENITY_HEALTHCARE) {
if (subtype == 2) {
color=Color.rgb(240,240,216);
colorAround=Color.rgb(212,168,158);
}
}
 else if (type == MapRenderingTypes.AMENITY_TRANSPORTATION) {
if (subtype == 1 || subtype == 2) {
color=Color.rgb(246,238,183);
}
}
 else if (type == MapRenderingTypes.AMENITY_ENTERTAINMENT) {
if (subtype == 3) {
color=Color.rgb(204,153,153);
}
}
 else if (type == MapRenderingTypes.AMENITY_EDUCATION) {
if (subtype == 2 || subtype == 3 || subtype == 5) {
color=Color.rgb(240,240,216);
colorAround=Color.rgb(212,168,158);
}
 else {
color=Color.rgb(188,169,169);
}
}
if (!showPolygon) {
return null;
}
paint.setColor(color);
for (int i=0; i < obj.getPointsLength(); i++) {
float lon=obj.getPointLongitude(i);
float lat=obj.getPointLatitude(i);
PointF p=calcPoint(leftTileX,topTileY,lat,lon,zoom,rotate);
xText+=p.x;
yText+=p.y;
if (path == null) {
path=new Path();
path.moveTo(p.x,p.y);
}
 else {
path.lineTo(p.x,p.y);
}
}
if (path != null) {
xText/=obj.getPointsLength();
yText/=obj.getPointsLength();
paint.setShader(shader);
canvas.drawPath(path,paint);
if (colorAround != 0) {
paintStroke.setColor(colorAround);
paintStroke.setStrokeWidth(1);
canvas.drawPath(path,paintStroke);
}
String name=obj.getName();
if (name != null) {
float textSize=16;
boolean accept=zoom > 17;
if (zoom > 15 && zoom <= 16) {
accept=name.length() < 4;
textSize=10;
}
 else if (zoom <= 17) {
accept=name.length() < 8;
textSize=12;
}
if (accept) {
TextDrawInfo text=new TextDrawInfo();
text.textSize=textSize;
text.textWrap=20;
text.centerX=xText;
text.centerY=yText;
text.text=name;
textToDraw.add(text);
}
}
return new PointF(xText,yText);
}
return null;
}
