{
  Paint paint=paintFill;
  float xText=0;
  float yText=0;
  int zoom=rc.zoom;
  Path path=null;
  int type=MapRenderingTypes.getObjectType(obj.getType());
  int subtype=MapRenderingTypes.getPolygonSubType(obj.getType());
  rc.color=Color.rgb(245,245,245);
  rc.shader=null;
  rc.showPolygon=true;
  PolygonRenderer.renderPolygon(rc,zoom,type,subtype,this);
  if (!rc.showPolygon) {
    return null;
  }
  paint.setColor(rc.color);
  for (int i=0; i < obj.getPointsLength(); i++) {
    PointF p=calcPoint(obj,i,rc);
    xText+=p.x;
    yText+=p.y;
    if (path == null) {
      path=new Path();
      path.moveTo(p.x,p.y);
    }
 else {
      path.lineTo(p.x,p.y);
    }
  }
  if (path != null) {
    xText/=obj.getPointsLength();
    yText/=obj.getPointsLength();
    paint.setShader(rc.shader);
    canvas.drawPath(path,paint);
    if (rc.colorAround != 0) {
      paintStroke.setColor(rc.colorAround);
      paintStroke.setStrokeWidth(1);
      canvas.drawPath(path,paintStroke);
    }
    String name=obj.getName();
    if (name != null) {
      float textSize=16;
      boolean accept=zoom > 17;
      if (zoom > 15 && zoom <= 16) {
        accept=name.length() < 4;
        textSize=10;
      }
 else       if (zoom <= 17) {
        accept=name.length() < 8;
        textSize=12;
      }
      if (accept) {
        TextDrawInfo text=new TextDrawInfo();
        text.textSize=textSize;
        text.textWrap=20;
        text.centerX=xText;
        text.centerY=yText;
        text.text=name;
        rc.textToDraw.add(text);
      }
    }
    return new PointF(xText,yText);
  }
  return null;
}
