{
  long now=System.currentTimeMillis();
  Collections.sort(objects,this);
  Bitmap bmp=null;
  if (objects != null && !objects.isEmpty() && width > 0 && height > 0) {
    RenderingContext rc=new RenderingContext();
    rc.leftX=leftTileX;
    rc.topY=topTileY;
    rc.zoom=zoom;
    rc.rotate=rotate;
    rc.width=width;
    rc.height=height;
    rc.tileDivisor=(int)(1 << (31 - zoom));
    rc.cosRotate=FloatMath.cos((float)Math.toRadians(rotate));
    rc.sinRotate=FloatMath.sin((float)Math.toRadians(rotate));
    bmp=Bitmap.createBitmap(width,height,Config.RGB_565);
    Canvas cv=new Canvas(bmp);
    cv.drawRect(0,0,bmp.getWidth(),bmp.getHeight(),paintFillEmpty);
    for (    MapRenderObject o : objects) {
      draw(o,cv,rc);
    }
    for (    IconDrawInfo icon : rc.iconsToDraw) {
      if (icon.resId != 0) {
        if (cachedIcons.get(icon.resId) == null) {
          cachedIcons.put(icon.resId,BitmapFactory.decodeResource(context.getResources(),icon.resId));
        }
        Bitmap ico=cachedIcons.get(icon.resId);
        if (ico != null) {
          cv.drawBitmap(ico,icon.x - ico.getWidth() / 2,icon.y - ico.getHeight() / 2,paintIcon);
        }
      }
    }
    drawTextOverCanvas(rc,cv);
    log.info(String.format("Rendering has been done in %s ms. (%s points, %s points inside)",System.currentTimeMillis() - now,rc.pointCount,rc.pointInsideCount));
  }
  return bmp;
}
