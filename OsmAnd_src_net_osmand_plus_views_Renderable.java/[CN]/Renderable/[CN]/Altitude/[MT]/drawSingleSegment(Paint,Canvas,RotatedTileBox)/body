{
  if (culled != null && !culled.isEmpty() && QuadRect.trivialOverlap(tileBox.getLatLonBounds(),trackBounds)) {
    canvas.rotate(-tileBox.getRotate(),tileBox.getCenterPixelX(),tileBox.getCenterPixelY());
    Paint.Cap cap=p.getStrokeCap();
    float stroke=p.getStrokeWidth();
    int col=p.getColor();
    p.setStrokeCap(Paint.Cap.ROUND);
    float bandWidth=stroke * 3f;
    p.setStrokeWidth(bandWidth);
    float clipL=-bandWidth / 2f;
    float clipB=-bandWidth / 2f;
    float clipT=canvas.getHeight() + bandWidth / 2f;
    float clipR=canvas.getWidth() + bandWidth / 2f;
    GPXUtilities.WptPt pt=culled.get(0);
    float lastx=tileBox.getPixXFromLatLon(pt.lat,pt.lon);
    float lasty=tileBox.getPixYFromLatLon(pt.lat,pt.lon);
    for (int i=1; i < culled.size(); i++) {
      pt=culled.get(i);
      float x=tileBox.getPixXFromLatLon(pt.lat,pt.lon);
      float y=tileBox.getPixYFromLatLon(pt.lat,pt.lon);
      if (Math.min(x,lastx) < clipR && Math.max(x,lastx) > clipL && Math.min(y,lasty) < clipT && Math.max(y,lasty) > clipB) {
        p.setColor(pt.colourARGB);
        canvas.drawLine(lastx,lasty,x,y,p);
      }
      lastx=x;
      lasty=y;
    }
    canvas.rotate(tileBox.getRotate(),tileBox.getCenterPixelX(),tileBox.getCenterPixelY());
    p.setStrokeCap(cap);
    p.setStrokeWidth(stroke);
    p.setColor(col);
  }
}
