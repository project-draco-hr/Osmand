{
  float scale=internal ? 0.6f : 1.0f;
  float stroke=paint.getStrokeWidth();
  double zoomlimit=zoom > 15 ? 15f : zoom;
  float arrowSize=(float)Math.pow(2.0,zoomlimit - 18) * 800;
  boolean broken=true;
  int intp=cachedC;
  float clipL=-arrowSize;
  float clipB=-arrowSize;
  float clipT=canvas.getHeight() + arrowSize;
  float clipR=canvas.getWidth() + arrowSize;
  float lastx=0;
  float lasty=Float.NEGATIVE_INFINITY;
  int size=culled.size();
  for (int i=0; i < size; i++) {
    WptPt pt=culled.get(i);
    intp--;
    float x=tileBox.getPixXFromLatLon(pt.lat,pt.lon);
    float y=tileBox.getPixYFromLatLon(pt.lat,pt.lon);
    boolean nextBroken=true;
    if (Math.min(x,lastx) < clipR && Math.max(x,lastx) > clipL && Math.min(y,lasty) < clipT && Math.max(y,lasty) > clipB) {
      float segment=intp & 15;
      if (segment < 6) {
        paint.setColor(internal ? Algorithms.getRainbowColor(((double)(i)) / ((double)size)) : Color.BLACK);
        float segpiece=6 - segment;
        if (segpiece > 4)         segpiece=4;
        if (!broken) {
          float sw=stroke * segpiece * scale;
          paint.setStrokeWidth(sw);
          canvas.drawLine(lastx,lasty,x,y,paint);
        }
        nextBroken=false;
        if (segment == 0 && lasty != -Float.NEGATIVE_INFINITY) {
          float sw=stroke * (6 - segment) / 2f * scale;
          paint.setStrokeWidth(sw);
          double angle=Math.atan2(lasty - y,lastx - x);
          float extendx=x - (float)Math.cos(angle) * arrowSize / 2;
          float extendy=y - (float)Math.sin(angle) * arrowSize / 2;
          float newx1=extendx + (float)Math.cos(angle - 0.4) * arrowSize;
          float newy1=extendy + (float)Math.sin(angle - 0.4) * arrowSize;
          float newx2=extendx + (float)Math.cos(angle + 0.4) * arrowSize;
          float newy2=extendy + (float)Math.sin(angle + 0.4) * arrowSize;
          canvas.drawLine(extendx,extendy,x,y,paint);
          canvas.drawLine(newx1,newy1,extendx,extendy,paint);
          canvas.drawLine(newx2,newy2,extendx,extendy,paint);
        }
      }
    }
    broken=nextBroken;
    lastx=x;
    lasty=y;
  }
  paint.setStrokeWidth(stroke);
}
