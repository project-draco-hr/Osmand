{
  if (item.getItemId() == R.id.edit_filter_delete) {
    Builder builder=new AlertDialog.Builder(this);
    builder.setMessage(R.string.edit_filter_delete_dialog_title);
    builder.setNegativeButton(R.string.default_buttons_no,null);
    builder.setPositiveButton(R.string.default_buttons_yes,new DialogInterface.OnClickListener(){
      @Override public void onClick(      DialogInterface dialog,      int which){
        if (helper.removePoiFilter(filter)) {
          AccessibleToast.makeText(EditPOIFilterActivity.this,MessageFormat.format(EditPOIFilterActivity.this.getText(R.string.edit_filter_delete_message).toString(),filter.getName()),Toast.LENGTH_SHORT).show();
          EditPOIFilterActivity.this.finish();
        }
      }
    }
);
    builder.create().show();
    return true;
  }
 else   if (item.getItemId() == R.id.edit_filter_save_as) {
    Builder builder=new AlertDialog.Builder(this);
    builder.setTitle(R.string.edit_filter_save_as_menu_item);
    final EditText editText=new EditText(this);
    builder.setView(editText);
    builder.setNegativeButton(R.string.default_buttons_cancel,null);
    builder.setPositiveButton(R.string.default_buttons_yes,new DialogInterface.OnClickListener(){
      @Override public void onClick(      DialogInterface dialog,      int which){
        PoiFilter nFilter=new PoiFilter(editText.getText().toString(),null,filter.getAcceptedTypes(),(OsmandApplication)getApplication());
        if (helper.createPoiFilter(nFilter)) {
          AccessibleToast.makeText(EditPOIFilterActivity.this,MessageFormat.format(EditPOIFilterActivity.this.getText(R.string.edit_filter_create_message).toString(),editText.getText().toString()),Toast.LENGTH_SHORT).show();
        }
        EditPOIFilterActivity.this.finish();
      }
    }
);
    builder.create().show();
    return true;
  }
  return super.onOptionsItemSelected(item);
}
