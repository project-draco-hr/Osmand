{
  if (activity instanceof DownloadActivity) {
    final DownloadActivity la=(DownloadActivity)activity;
    LocalIndexInfo info=(LocalIndexInfo)obj;
    if (info.getType() == LocalIndexType.AV_DATA) {
      final RecordingLocalIndexInfo ri=(RecordingLocalIndexInfo)info;
      OnContextMenuClick listener=new OnContextMenuClick(){
        @Override public boolean onContextMenuClick(        int itemId,        int pos,        boolean isChecked){
          playRecording(la,ri.rec);
          return true;
        }
      }
;
      if (ri.rec.isPhoto()) {
        adapter.item(R.string.recording_context_menu_show).icons(R.drawable.ic_action_eye_dark,R.drawable.ic_action_eye_light).listen(listener).reg();
      }
 else {
        adapter.item(R.string.recording_context_menu_play).icons(R.drawable.ic_action_play_dark,R.drawable.ic_action_play_light).listen(listener).reg();
      }
      adapter.item(R.string.show_location).icons(R.drawable.ic_action_marker_dark,R.drawable.ic_action_marker_light).listen(new OnContextMenuClick(){
        @Override public boolean onContextMenuClick(        int itemId,        int pos,        boolean isChecked){
          SHOW_RECORDINGS.set(true);
          app.getSettings().setMapLocationToShow(ri.rec.lat,ri.rec.lon,app.getSettings().getLastKnownMapZoom());
          MapActivity.launchMapActivityMoveToTop(la);
          return true;
        }
      }
).reg();
    }
  }
}
