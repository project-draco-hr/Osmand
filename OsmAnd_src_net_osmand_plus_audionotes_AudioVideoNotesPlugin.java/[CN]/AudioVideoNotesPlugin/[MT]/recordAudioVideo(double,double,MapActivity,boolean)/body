{
  final MediaRecorder mr=new MediaRecorder();
  final File f=getBaseFileNameForAV(lat,lon,app);
  mr.setOutputFile(f.getAbsolutePath());
  if (recordVideo) {
    mr.setVideoSource(MediaRecorder.VideoSource.CAMERA);
  }
  mr.setAudioSource(MediaRecorder.AudioSource.MIC);
  mr.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);
  if (recordVideo) {
    mr.setVideoEncoder(MediaRecorder.VideoEncoder.DEFAULT);
  }
  mr.setAudioEncoder(MediaRecorder.AudioEncoder.DEFAULT);
  recordControl.setText(app.getString(R.string.av_control_stop),"");
  AccessibleToast.makeText(mapActivity,R.string.recording_is_recorded,Toast.LENGTH_LONG).show();
  try {
    mr.prepare();
    mr.start();
    recordControl.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        indexFile(f);
        mr.stop();
        mr.release();
        mapActivity.getMapView().refreshMap();
        setRecordListener(recordControl,mapActivity);
      }
    }
);
  }
 catch (  Exception e) {
    log.error("Error starting audio recorder ",e);
    AccessibleToast.makeText(app,app.getString(R.string.error_io_error) + " : " + e.getMessage(),Toast.LENGTH_LONG).show();
  }
}
