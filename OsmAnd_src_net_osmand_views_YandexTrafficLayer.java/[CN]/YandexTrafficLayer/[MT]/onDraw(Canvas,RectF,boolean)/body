{
  if (visible) {
    pixRect.set(0,0,view.getWidth(),view.getHeight());
    float tileY=(float)MapUtils.getTileEllipsoidNumberY(view.getZoom(),view.getLatitude());
    view.calculateTileRectangle(pixRect,view.getCenterPointX(),view.getCenterPointY(),view.getXTile(),tileY,tileRect);
    double topLat=MapUtils.getLatitudeFromEllipsoidTileY(view.getZoom(),(int)tileRect.top);
    double leftLon=MapUtils.getLongitudeFromTile(view.getZoom(),(int)tileRect.left);
    int x=view.getMapXForPoint(leftLon);
    int y=view.getMapYForPoint(topLat);
    checkedCachedImages(view.getZoom());
    float right=FloatMath.ceil(tileRect.right);
    float bottom=FloatMath.ceil(tileRect.bottom);
    for (int i=(int)tileRect.left; i <= right; i++) {
      for (int j=(int)tileRect.top; j <= bottom; j++) {
        String tId=calculateTileId(i,j,view.getZoom());
        if (tiles.get(tId) != null) {
          dstImageRect.top=y + (j - (int)tileRect.top) * view.getTileSize();
          dstImageRect.left=x + (i - (int)tileRect.left) * view.getTileSize();
          dstImageRect.bottom=dstImageRect.top + view.getTileSize();
          dstImageRect.right=dstImageRect.left + view.getTileSize();
          canvas.drawBitmap(tiles.get(tId),srcImageRect,dstImageRect,paint);
        }
      }
    }
  }
}
