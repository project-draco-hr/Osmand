{
  int y31=(int)(id & Integer.MAX_VALUE);
  int x31=(int)(id >> 31);
  excludeDuplications.clear();
  RouteSegment original=null;
  RouteSegment prev=null;
  for (  NativeRouteSearchResult rs : nativeResults) {
    RouteDataObject[] res=nativeLib.getDataObjects(rs,x31,y31);
    if (res != null) {
      for (      RouteDataObject ro : res) {
        boolean accept=ro != null && !excludeDuplications.contains(ro.id);
        if (ctx != null && accept) {
          accept=ctx.getRouter().acceptLine(ro);
        }
        if (accept) {
          excludeDuplications.add(ro.id);
          for (int i=0; i < ro.pointsX.length; i++) {
            if (ro.getPoint31XTile(i) == x31 && ro.getPoint31YTile(i) == y31) {
              RouteSegment segment=new RouteSegment(ro,i);
              if (prev != null) {
                prev.next=segment;
                prev=segment;
              }
 else {
                original=segment;
                prev=segment;
              }
            }
          }
        }
      }
    }
  }
  return original;
}
