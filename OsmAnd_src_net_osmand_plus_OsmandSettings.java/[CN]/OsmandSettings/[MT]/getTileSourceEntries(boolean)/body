{
  Map<String,String> map=new LinkedHashMap<String,String>();
  File dir=ctx.getAppPath(IndexConstants.TILES_INDEX_DIR);
  if (dir != null && dir.canRead()) {
    File[] files=dir.listFiles();
    Arrays.sort(files,new Comparator<File>(){
      @Override public int compare(      File object1,      File object2){
        if (object1.lastModified() > object2.lastModified()) {
          return -1;
        }
 else         if (object1.lastModified() == object2.lastModified()) {
          return 0;
        }
        return 1;
      }
    }
);
    if (files != null) {
      for (      File f : files) {
        if (f.getName().endsWith(IndexConstants.SQLITE_EXT)) {
          if (sqlite) {
            String n=f.getName();
            map.put(f.getName(),n.substring(0,n.lastIndexOf('.')));
          }
        }
 else         if (f.isDirectory() && !f.getName().equals(IndexConstants.TEMP_SOURCE_TO_LOAD) && !f.getName().startsWith(".")) {
          map.put(f.getName(),f.getName());
        }
      }
    }
  }
  for (  TileSourceTemplate l : TileSourceManager.getKnownSourceTemplates()) {
    map.put(l.getName(),l.getName());
  }
  return map;
}
