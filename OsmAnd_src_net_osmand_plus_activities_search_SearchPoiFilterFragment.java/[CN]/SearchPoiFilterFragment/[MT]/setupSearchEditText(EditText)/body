{
  searchEditText=e;
  searchEditText.addTextChangedListener(new TextWatcher(){
    @Override public void onTextChanged(    CharSequence s,    int start,    int before,    int count){
    }
    @Override public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){
    }
    @Override public void afterTextChanged(    Editable s){
      if (currentTask != null) {
        currentTask.cancel(true);
      }
      currentTask=new SearchPoiByNameTask();
      currentTask.execute(s.toString().trim());
    }
  }
);
  searchEditText.setOnEditorActionListener(new TextView.OnEditorActionListener(){
    @Override public boolean onEditorAction(    TextView v,    int actionId,    KeyEvent event){
      boolean handled=false;
      if (actionId == EditorInfo.IME_ACTION_SEARCH) {
        final PoiUIFilter poiFilter=getApp().getPoiFilters().getSearchByNamePOIFilter();
        poiFilter.setFilterByName(searchEditText.getText().toString());
        showFilterActivity(poiFilter.getFilterId());
        handled=true;
      }
      return handled;
    }
  }
);
}
