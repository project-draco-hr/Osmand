{
  final Object item=((PoiFiltersAdapter)getListAdapter()).getItem(position);
  ResourceManager rm=getApp().getResourceManager();
  if (!rm.containsAmenityRepositoryToSearch(false)) {
    AccessibleToast.makeText(getActivity(),R.string.data_to_search_poi_not_available,Toast.LENGTH_LONG);
    return;
  }
  if (item instanceof PoiLegacyFilter) {
    PoiLegacyFilter model=((PoiLegacyFilter)item);
    if (PoiLegacyFilter.BY_NAME_FILTER_ID.equals(model.getFilterId()) || model instanceof NominatimPoiFilter) {
      model.setFilterByName(searchEditText.getText().toString());
    }
 else {
      model.setFilterByName(model.getSavedFilterByName());
    }
    showFilterActivity(model.getFilterId());
  }
 else {
    PoiLegacyFilter custom=getApp().getPoiFilters().getFilterById(PoiLegacyFilter.STD_PREFIX + ((AbstractPoiType)item).getKeyName());
    if (custom != null) {
      custom.setFilterByName(null);
      custom.updateTypesToAccept(((AbstractPoiType)item));
      showFilterActivity(custom.getFilterId());
    }
  }
}
