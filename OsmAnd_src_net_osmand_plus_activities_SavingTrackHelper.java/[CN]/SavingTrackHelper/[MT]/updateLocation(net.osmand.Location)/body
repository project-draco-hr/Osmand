{
  long locationTime=System.currentTimeMillis();
  OsmandSettings settings=ctx.getSettings();
  boolean record=false;
  if (OsmAndLocationProvider.isPointAccurateForRouting(location) && OsmAndLocationProvider.isNotSimulatedLocation(location)) {
    if (OsmandPlugin.getEnabledPlugin(OsmandMonitoringPlugin.class) != null) {
      if (settings.SAVE_TRACK_TO_GPX.get() && locationTime - lastTimeUpdated > settings.SAVE_TRACK_INTERVAL.get() && ctx.getRoutingHelper().isFollowingMode()) {
        record=true;
      }
 else       if (settings.SAVE_GLOBAL_TRACK_TO_GPX.get() && locationTime - lastTimeUpdated > settings.SAVE_GLOBAL_TRACK_INTERVAL.get()) {
        record=true;
      }
      float minDistance=settings.SAVE_TRACK_MIN_DISTANCE.get();
      if (minDistance > 0 && lastPoint != null && MapUtils.getDistance(lastPoint,location.getLatitude(),location.getLongitude()) < minDistance) {
        record=false;
      }
      float precision=settings.SAVE_TRACK_PRECISION.get();
      if (precision > 0 && (!location.hasAccuracy() || location.getAccuracy() < precision)) {
        record=false;
      }
      float minSpeed=settings.SAVE_TRACK_MIN_SPEED.get();
      if (minSpeed > 0 && (!location.hasSpeed() || location.getSpeed() < minSpeed)) {
        record=false;
      }
    }
  }
  if (record) {
    insertData(location.getLatitude(),location.getLongitude(),location.getAltitude(),location.getSpeed(),location.getAccuracy(),locationTime,settings);
    ctx.getNotificationHelper().refreshNotification(NotificationType.GPX);
  }
}
