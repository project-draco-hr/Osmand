{
  Action start=new AbstractAction("Mark start point"){
    private static final long serialVersionUID=507156107455281238L;
    public void actionPerformed(    ActionEvent e){
      double fy=(popupMenuPoint.y - getCenterPointY()) / getTileSize();
      double fx=(popupMenuPoint.x - getCenterPointX()) / getTileSize();
      double latitude=MapUtils.getLatitudeFromTile(zoom,getYTile() + fy);
      double longitude=MapUtils.getLongitudeFromTile(zoom,getXTile() + fx);
      startRoute=new LatLon(latitude,longitude);
      repaint();
    }
  }
;
  menu.add(start);
  Action end=new AbstractAction("Mark end point"){
    private static final long serialVersionUID=4446789424902471319L;
    public void actionPerformed(    ActionEvent e){
      double fy=(popupMenuPoint.y - getCenterPointY()) / getTileSize();
      double fx=(popupMenuPoint.x - getCenterPointX()) / getTileSize();
      double latitude=MapUtils.getLatitudeFromTile(zoom,getYTile() + fy);
      double longitude=MapUtils.getLongitudeFromTile(zoom,getXTile() + fx);
      endRoute=new LatLon(latitude,longitude);
      repaint();
    }
  }
;
  menu.add(end);
  Action route=new AbstractAction("Calculate route"){
    private static final long serialVersionUID=507156107455281238L;
    public void actionPerformed(    ActionEvent e){
      List<Way> ways=RoutingHelper.route(startRoute,endRoute);
      DataTileManager<Way> points=new DataTileManager<Way>();
      points.setZoom(11);
      for (      Way w : ways) {
        LatLon n=w.getLatLon();
        points.registerObject(n.getLatitude(),n.getLongitude(),w);
      }
      MapPanel.this.points=points;
      prepareImage();
    }
  }
;
  menu.add(route);
}
