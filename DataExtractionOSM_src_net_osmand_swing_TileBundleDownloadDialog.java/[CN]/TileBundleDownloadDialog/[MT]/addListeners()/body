{
  cancelButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      setVisible(false);
    }
  }
);
  startSpinner.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      ((SpinnerNumberModel)endSpinner.getModel()).setMinimum((Integer)startSpinner.getValue());
      updateLabel();
    }
  }
);
  endSpinner.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      ((SpinnerNumberModel)startSpinner.getModel()).setMaximum((Integer)endSpinner.getValue());
      updateLabel();
    }
  }
);
  downloadButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      downloadTiles();
    }
  }
);
  specifyFolder.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      JFileChooser fc=new JFileChooser();
      fc.setDialogTitle("Choose working directory");
      fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
      if (tilesLocation != null) {
        fc.setCurrentDirectory(tilesLocation);
      }
      if (fc.showOpenDialog(TileBundleDownloadDialog.this) == JFileChooser.APPROVE_OPTION && fc.getSelectedFile() != null && fc.getSelectedFile().isDirectory()) {
        tilesLocation=fc.getSelectedFile();
      }
    }
  }
);
}
