{
  List<SearchObject> res=new ArrayList<>();
  SearchString searchString=searchScope.getSearchString();
  SearchToken lastToken=searchString.getLastToken();
  NameFilterSearchToken token=searchString.getNextNameFilterToken();
  while (token != null && !cancelled) {
    if (!token.hasEmptyQuery()) {
      res=doCoreSearch(token);
      List<SearchObject> externalObjects=searchCallback.fetchExternalObjects(token.getQueryText(),searchString.getCompleteObjects());
      if (externalObjects != null) {
        res.addAll(externalObjects);
      }
    }
    if (token != lastToken) {
      searchScope.updateScope();
      token=searchString.getNextNameFilterToken();
    }
 else {
      break;
    }
  }
  if (lastToken == null || lastToken.hasEmptyQuery()) {
    ObjectSearchToken lastObjectToken=searchString.getLastObjectToken();
    if (lastObjectToken == null) {
      List<SearchObject> externalObjects=searchCallback.fetchExternalObjects("",null);
      if (externalObjects != null) {
        res=externalObjects;
      }
    }
 else {
      SearchObject searchObject=lastObjectToken.getSearchObject();
switch (searchObject.getType()) {
case POI_TYPE:
        List<SearchObject> externalObjects=searchCallback.fetchExternalObjects("",searchString.getCompleteObjects());
      if (externalObjects != null) {
        res=externalObjects;
      }
    break;
case CITY:
  res=doCoreSearch(new NameFilterSearchToken(0,""));
break;
case STREET:
res=doCoreSearch(new NameFilterSearchToken(0,""));
break;
case POSTCODE:
res=doCoreSearch(new NameFilterSearchToken(0,""));
break;
case BUILDING:
break;
case POI:
break;
}
}
}
return res;
}
