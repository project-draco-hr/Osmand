{
  amenityResultsCounter=0;
  addressResultsCounter=0;
  String keyword=token.getPlainText();
  final List<SearchObject> searchObjects=new ArrayList<>();
  AmenitiesByNameSearch amByNameSearch=null;
  AmenitiesByNameSearch.Criteria amenityByNameCriteria=null;
  ISearch.INewResultEntryCallback amenityByNameResultCallback=null;
  if (!keyword.isEmpty()) {
    amByNameSearch=new AmenitiesByNameSearch(searchScope.getObfsCollection());
    amenityByNameCriteria=new AmenitiesByNameSearch.Criteria();
    amenityByNameCriteria.setName(keyword);
    if (searchScope.getObfAreaFilter() != null) {
      amenityByNameCriteria.setObfInfoAreaFilter(new NullableAreaI(searchScope.getObfAreaFilter()));
    }
    searchScope.setupAmenitySearchCriteria(amenityByNameCriteria);
    amenityByNameResultCallback=new ISearch.INewResultEntryCallback(){
      @Override public void method(      ISearch.Criteria criteria,      ISearch.IResultEntry resultEntry){
        Amenity amenity=new AmenityResultEntry(resultEntry).getAmenity();
        PoiSearchObject amenitySearchItem=new PoiSearchObject(amenity);
        if (searchScope.processPoiSearchObject(amenitySearchItem)) {
          searchObjects.add(amenitySearchItem);
        }
        amenityResultsCounter++;
      }
    }
;
  }
  AddressesByNameSearch addrByNameSearch=new AddressesByNameSearch(searchScope.getObfsCollection());
  final AddressesByNameSearch.Criteria addrByNameCriteria=new AddressesByNameSearch.Criteria();
  addrByNameCriteria.setName(keyword);
  if (searchScope.getObfAreaFilter() != null) {
    addrByNameCriteria.setObfInfoAreaFilter(new NullableAreaI(searchScope.getObfAreaFilter()));
  }
  searchScope.setupAddressSearchCriteria(addrByNameCriteria);
  ISearch.INewResultEntryCallback addrByNameResultCallback=new ISearch.INewResultEntryCallback(){
    @Override public void method(    ISearch.Criteria criteria,    ISearch.IResultEntry resultEntry){
      Address address=new AddressResultEntry(resultEntry).getAddress();
      SearchPositionObject addressSearchObject=SearchObjectsHelper.getAddressObject(address);
      if (addressSearchObject != null) {
        if (searchScope.processAddressSearchObject(addressSearchObject)) {
          searchObjects.add(addressSearchObject);
        }
        addressResultsCounter++;
      }
    }
  }
;
  if (amByNameSearch != null) {
    amByNameSearch.performSearch(amenityByNameCriteria,amenityByNameResultCallback.getBinding(),new IQueryController(){
      @Override public boolean isAborted(){
        return (maxSearchResults > 0 && amenityResultsCounter >= maxSearchResults) || cancelled;
      }
    }
);
  }
  if (!cancelled) {
    addrByNameSearch.performSearch(addrByNameCriteria,addrByNameResultCallback.getBinding(),new IQueryController(){
      @Override public boolean isAborted(){
        return (maxSearchResults > 0 && addressResultsCounter >= maxSearchResults) || cancelled;
      }
    }
);
  }
  if (!cancelled) {
    SearchToken newToken=searchScope.processSearchResult(token,searchObjects);
    if (newToken != null && internalCallback != null) {
      internalCallback.onNewTokenFound(token,newToken);
    }
  }
  return searchObjects;
}
