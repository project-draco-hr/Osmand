{
  Bundle bundle=null;
  if (getArguments() != null) {
    bundle=getArguments();
  }
 else   if (savedInstanceState != null) {
    bundle=savedInstanceState;
  }
  if (bundle != null) {
    target=bundle.getBoolean(TARGET_KEY);
  }
  MapActivity mapActivity=getMapActivity();
  OsmandApplication app=getMyApplication();
  if (mapActivity != null) {
    MapRouteInfoMenu routeInfoMenu=mapActivity.getMapLayers().getMapControlsLayer().getMapRouteInfoMenu();
    onClickListener=routeInfoMenu.getOnMarkerSelectListener();
    onDismissListener=routeInfoMenu.getOnDismissDialogListener();
    screenOrientation=DashLocationFragment.getScreenOrientation(mapActivity);
    MapViewTrackingUtilities trackingUtils=mapActivity.getMapViewTrackingUtilities();
    if (trackingUtils != null) {
      Float head=trackingUtils.getHeading();
      float mapRotation=mapActivity.getMapRotate();
      LatLon mw=mapActivity.getMapLocation();
      Location l=trackingUtils.getMyLocation();
      boolean mapLinked=trackingUtils.isMapLinkedToLocation() && l != null;
      LatLon myLoc=l == null ? null : new LatLon(l.getLatitude(),l.getLongitude());
      useCenter=!mapLinked;
      loc=(useCenter ? mw : myLoc);
      heading=useCenter ? -mapRotation : head;
    }
  }
  nightMode=!app.getSettings().isLightContent();
  View view=inflater.inflate(R.layout.map_marker_selection_fragment,container,false);
  ImageButton closeButton=(ImageButton)view.findViewById(R.id.closeButton);
  closeButton.setImageDrawable(getMyApplication().getIconsCache().getIcon(R.drawable.ic_action_mode_back));
  closeButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      dismiss();
    }
  }
);
  ListView listView=(ListView)view.findViewById(android.R.id.list);
  final ArrayAdapter<MapMarker> adapter=new MapMarkersListAdapter();
  List<MapMarker> markers=getMyApplication().getMapMarkersHelper().getActiveMapMarkers();
  if (markers.size() > 0) {
    for (    MapMarker marker : markers) {
      adapter.add(marker);
    }
  }
  listView.setAdapter(adapter);
  listView.setOnItemClickListener(new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      if (onClickListener != null) {
        onClickListener.onSelect(position,target);
      }
      dismiss();
    }
  }
);
  return view;
}
