{
  final MediaPlayer player=new MediaPlayer();
  final AccessibleAlertBuilder dlg=new AccessibleAlertBuilder(view.getContext());
  dlg.setMessage(view.getContext().getString(R.string.recording_playing,r.getDescription(view.getContext())));
  dlg.setPositiveButton(R.string.recording_open_external_player,new OnClickListener(){
    @Override public void onClick(    DialogInterface v,    int w){
      if (player.isPlaying()) {
        player.stop();
      }
      Intent vint=new Intent(Intent.ACTION_VIEW);
      vint.setDataAndType(Uri.fromFile(r.file),"video/*");
      vint.setFlags(0x10000000);
      try {
        view.getContext().startActivity(vint);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
  dlg.setNegativeButton(R.string.default_buttons_cancel,new OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      if (player.isPlaying()) {
        player.stop();
      }
    }
  }
);
  try {
    player.setDataSource(r.file.getAbsolutePath());
    player.setOnPreparedListener(new OnPreparedListener(){
      @Override public void onPrepared(      MediaPlayer mp){
        dlg.show();
        player.start();
      }
    }
);
    player.prepareAsync();
  }
 catch (  Exception e) {
    AccessibleToast.makeText(activity,R.string.recording_can_not_be_played,Toast.LENGTH_SHORT).show();
  }
}
