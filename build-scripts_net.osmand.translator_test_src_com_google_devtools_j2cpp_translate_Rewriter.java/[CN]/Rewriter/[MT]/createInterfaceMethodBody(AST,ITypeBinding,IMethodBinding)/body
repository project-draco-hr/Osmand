{
  IMethodBinding methodBinding=new IOSMethodBinding(interfaceMethod.getName(),interfaceMethod,typeBinding);
  MethodDeclaration method=ast.newMethodDeclaration();
  Types.addBinding(method,methodBinding);
  method.setReturnType2(Types.makeType(interfaceMethod.getReturnType()));
  SimpleName methodName=ast.newSimpleName(interfaceMethod.getName());
  Types.addBinding(methodName,methodBinding);
  method.setName(methodName);
  @SuppressWarnings("unchecked") List<Modifier> modifiers=method.modifiers();
  modifiers.add(ast.newModifier(ModifierKeyword.PUBLIC_KEYWORD));
  @SuppressWarnings("unchecked") List<SingleVariableDeclaration> parameters=method.parameters();
  ITypeBinding[] parameterTypes=interfaceMethod.getParameterTypes();
  for (int i=0; i < parameterTypes.length; i++) {
    ITypeBinding paramType=parameterTypes[i];
    String paramName="param" + i;
    SingleVariableDeclaration param=ast.newSingleVariableDeclaration();
    IVariableBinding paramBinding=IOSVariableBinding.newParameter(paramName,i,paramType,methodBinding,paramType.getDeclaringClass(),Modifier.isFinal(paramType.getModifiers()));
    Types.addBinding(param,paramBinding);
    param.setName(ast.newSimpleName(paramName));
    Types.addBinding(param.getName(),paramBinding);
    param.setType(Types.makeType(paramType));
    parameters.add(param);
  }
  Symbols.scanAST(method);
  return method;
}
