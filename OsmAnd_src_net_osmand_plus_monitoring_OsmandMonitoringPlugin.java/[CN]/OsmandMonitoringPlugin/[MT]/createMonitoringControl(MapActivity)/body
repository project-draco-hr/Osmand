{
  Paint paintText=new Paint();
  paintText.setStyle(Style.FILL_AND_STROKE);
  paintText.setColor(Color.BLACK);
  paintText.setTextSize(23 * MapInfoLayer.scaleCoefficient);
  paintText.setAntiAlias(true);
  paintText.setStrokeWidth(4);
  Paint paintSubText=new Paint();
  paintSubText.setStyle(Style.FILL_AND_STROKE);
  paintSubText.setColor(Color.BLACK);
  paintSubText.setTextSize(15 * MapInfoLayer.scaleCoefficient);
  paintSubText.setAntiAlias(true);
  final Drawable monitoringBig=map.getResources().getDrawable(R.drawable.monitoring_rec_big);
  final Drawable monitoringSmall=map.getResources().getDrawable(R.drawable.monitoring_rec_small);
  final Drawable monitoringInactive=map.getResources().getDrawable(R.drawable.monitoring_rec_inactive);
  monitoringControl=new TextInfoControl(map,0,paintText,paintSubText){
    long lastUpdateTime;
    @Override public boolean updateInfo(){
      boolean visible=false;
      if (settings.SHOW_MONITORING_CONTROL.get()) {
        visible=true;
        String txt="start";
        String subtxt=null;
        Drawable d=monitoringInactive;
        long last=lastUpdateTime;
        if (settings.SAVE_TRACK_TO_GPX.get()) {
          float dist=app.getSavingTrackHelper().getDistance();
          last=app.getSavingTrackHelper().getLastTimeUpdated();
          String ds=OsmAndFormatter.getFormattedDistance(dist,map);
          int ls=ds.lastIndexOf(' ');
          if (ls == -1) {
            txt=ds;
          }
 else {
            txt=ds.substring(0,ls);
            subtxt=ds.substring(ls + 1);
          }
          d=monitoringBig;
        }
        setText(txt,subtxt);
        setImageDrawable(d);
        if (last != lastUpdateTime) {
          lastUpdateTime=last;
          blink();
        }
      }
      updateVisibility(visible);
      return true;
    }
    private void blink(){
      setImageDrawable(monitoringSmall);
      invalidate();
      postDelayed(new Runnable(){
        @Override public void run(){
          setImageDrawable(monitoringBig);
          invalidate();
        }
      }
,500);
    }
  }
;
  monitoringControl.updateInfo();
  monitoringControl.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      boolean isTrackMonitored=settings.SAVE_TRACK_TO_GPX.get();
      settings.SAVE_TRACK_TO_GPX.set(!isTrackMonitored);
      monitoringControl.updateInfo();
    }
  }
);
  return monitoringControl;
}
