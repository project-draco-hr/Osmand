{
  final ValueHolder<Integer> vs=new ValueHolder<Integer>();
  final ValueHolder<Boolean> choice=new ValueHolder<Boolean>();
  vs.value=settings.SAVE_GLOBAL_TRACK_INTERVAL.get();
  choice.value=settings.SAVE_GLOBAL_TRACK_REMEMBER.get();
  final Runnable runnable=new Runnable(){
    public void run(){
      app.getSavingTrackHelper().startNewSegment();
      settings.SAVE_GLOBAL_TRACK_INTERVAL.set(vs.value);
      settings.SAVE_GLOBAL_TRACK_TO_GPX.set(true);
      settings.SAVE_GLOBAL_TRACK_REMEMBER.set(choice.value);
      if (settings.SAVE_GLOBAL_TRACK_INTERVAL.get() < 30000) {
        settings.SERVICE_OFF_INTERVAL.set(0);
      }
 else {
        settings.SERVICE_OFF_INTERVAL.set(settings.SAVE_GLOBAL_TRACK_INTERVAL.get());
      }
      app.startNavigationService(NavigationService.USED_BY_GPX);
    }
  }
;
  if (choice.value) {
    runnable.run();
  }
 else {
    showIntervalChooseDialog(map,app.getString(R.string.save_track_interval_globally) + " : %s",app.getString(R.string.save_track_to_gpx_globally),SECONDS,MINUTES,choice,vs,new OnClickListener(){
      @Override public void onClick(      DialogInterface dialog,      int which){
        runnable.run();
      }
    }
);
  }
}
