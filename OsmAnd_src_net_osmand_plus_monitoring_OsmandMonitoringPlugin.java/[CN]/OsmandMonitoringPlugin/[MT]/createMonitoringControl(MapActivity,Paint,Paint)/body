{
  final Drawable monitoringBig=map.getResources().getDrawable(R.drawable.monitoring_rec_big);
  final Drawable monitoringSmall=map.getResources().getDrawable(R.drawable.monitoring_rec_small);
  final Drawable monitoringInactive=map.getResources().getDrawable(R.drawable.monitoring_rec_inactive);
  monitoringControl=new TextInfoWidget(map,0,paintText,paintSubText){
    long lastUpdateTime;
    @Override public boolean updateInfo(    DrawSettings drawSettings){
      boolean visible=true;
      String txt=map.getString(R.string.monitoring_control_start);
      String subtxt=null;
      Drawable d=monitoringInactive;
      long last=lastUpdateTime;
      if (settings.SAVE_TRACK_TO_GPX.get()) {
        float dist=app.getSavingTrackHelper().getDistance();
        last=app.getSavingTrackHelper().getLastTimeUpdated();
        String ds=OsmAndFormatter.getFormattedDistance(dist,map.getMyApplication());
        int ls=ds.lastIndexOf(' ');
        if (ls == -1) {
          txt=ds;
        }
 else {
          txt=ds.substring(0,ls);
          subtxt=ds.substring(ls + 1);
        }
        d=monitoringBig;
      }
      setText(txt,subtxt);
      setImageDrawable(d);
      if (last != lastUpdateTime) {
        lastUpdateTime=last;
        blink();
      }
      updateVisibility(visible);
      return true;
    }
    private void blink(){
      setImageDrawable(monitoringSmall);
      invalidate();
      postDelayed(new Runnable(){
        @Override public void run(){
          setImageDrawable(monitoringBig);
          invalidate();
        }
      }
,500);
    }
  }
;
  monitoringControl.updateInfo(null);
  monitoringControl.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      boolean wasTrackMonitored=settings.SAVE_TRACK_TO_GPX.get();
      if (!wasTrackMonitored) {
        app.getSavingTrackHelper().startNewSegment();
      }
      settings.SAVE_TRACK_TO_GPX.set(!wasTrackMonitored);
      final Intent serviceIntent=new Intent(map,NavigationService.class);
      if (wasTrackMonitored) {
        if (app.getNavigationService() != null && !app.getNavigationService().startedForNavigation()) {
          app.stopService(serviceIntent);
        }
      }
 else {
        if (app.getNavigationService() == null) {
          app.getSettings().SERVICE_OFF_INTERVAL.set(0);
          app.startService(serviceIntent);
        }
      }
      monitoringControl.updateInfo(null);
    }
  }
);
  return monitoringControl;
}
