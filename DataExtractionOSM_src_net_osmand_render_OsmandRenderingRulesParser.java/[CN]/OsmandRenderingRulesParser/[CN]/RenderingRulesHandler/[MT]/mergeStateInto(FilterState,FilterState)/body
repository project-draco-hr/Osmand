{
  if (toMerge.maxzoom != -1 && mergeInto.maxzoom == -1) {
    mergeInto.maxzoom=toMerge.maxzoom;
  }
  if (toMerge.minzoom != -1 && mergeInto.minzoom == -1) {
    mergeInto.minzoom=toMerge.minzoom;
  }
  if (toMerge.nightMode != null && mergeInto.nightMode == null) {
    mergeInto.nightMode=toMerge.nightMode;
  }
  if (toMerge.icon != null && mergeInto.icon == null) {
    mergeInto.icon=toMerge.icon;
  }
  if (toMerge.tag != null && mergeInto.tag == null) {
    mergeInto.tag=toMerge.tag;
  }
  if (toMerge.orderType != -1 && mergeInto.orderType == -1) {
    mergeInto.orderType=toMerge.orderType;
  }
  if (toMerge.layer != 0 && mergeInto.layer == 0) {
    mergeInto.layer=toMerge.layer;
  }
  if (toMerge.order != 0 && mergeInto.order == 0) {
    mergeInto.order=toMerge.order;
  }
  if (toMerge.textLength != 0 && mergeInto.textLength == 0) {
    mergeInto.textLength=toMerge.textLength;
  }
  if (toMerge.val != null && mergeInto.val == null) {
    mergeInto.val=toMerge.val;
  }
  if (toMerge.text != null) {
    if (mergeInto.text == null) {
      mergeInto.text=new TextAttributes();
    }
    if (toMerge.text.textColor != 0 && mergeInto.text.textColor == 0) {
      mergeInto.text.textColor=toMerge.text.textColor;
    }
    if (toMerge.text.textSize != 0 && mergeInto.text.textSize == 0) {
      mergeInto.text.textSize=toMerge.text.textSize;
    }
    if (toMerge.text.textBold && !mergeInto.text.textBold) {
      mergeInto.text.textBold=toMerge.text.textBold;
    }
    if (toMerge.text.textShield != null && mergeInto.text.textShield == null) {
      mergeInto.text.textShield=toMerge.text.textShield;
    }
    if (toMerge.text.ref != null && mergeInto.text.ref == null) {
      mergeInto.text.ref=toMerge.text.ref;
    }
    if (toMerge.text.textMinDistance != 0 && mergeInto.text.textMinDistance == 0) {
      mergeInto.text.textMinDistance=toMerge.text.textMinDistance;
    }
    if (toMerge.text.textDy != 0 && mergeInto.text.textDy == 0) {
      mergeInto.text.textDy=toMerge.text.textDy;
    }
    if (toMerge.text.textHaloRadius != 0 && mergeInto.text.textHaloRadius == 0) {
      mergeInto.text.textHaloRadius=toMerge.text.textHaloRadius;
    }
    if (toMerge.text.textWrapWidth != 0 && mergeInto.text.textWrapWidth == 0) {
      mergeInto.text.textWrapWidth=toMerge.text.textWrapWidth;
    }
    if (toMerge.text.textOnPath && !mergeInto.text.textOnPath) {
      mergeInto.text.textOnPath=toMerge.text.textOnPath;
    }
  }
  mergeStateInto(toMerge.main,mergeInto.main);
  while (mergeInto.effectAttributes.size() < toMerge.effectAttributes.size()) {
    mergeInto.effectAttributes.add(new EffectAttributes());
  }
  for (int i=0; i < toMerge.effectAttributes.size(); i++) {
    mergeStateInto(toMerge.effectAttributes.get(i),mergeInto.effectAttributes.get(i));
  }
}
