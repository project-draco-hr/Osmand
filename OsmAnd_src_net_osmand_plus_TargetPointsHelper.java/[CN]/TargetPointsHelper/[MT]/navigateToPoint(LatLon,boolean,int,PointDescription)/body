{
  if (point != null) {
    final PointDescription pointDescription;
    if (historyName == null) {
      pointDescription=new PointDescription(PointDescription.POINT_TYPE_LOCATION,"");
    }
 else {
      pointDescription=historyName;
    }
    boolean needAddress=false;
    if (pointDescription.isLocation() && Algorithms.isEmpty(pointDescription.getName())) {
      pointDescription.setName(PointDescription.getSearchAddressStr(ctx));
      needAddress=true;
    }
    if (intermediate < 0 || intermediate > intermediatePoints.size()) {
      cancelTargetPointAddressRequest();
      if (intermediate > intermediatePoints.size()) {
        final TargetPoint pn=getPointToNavigate();
        if (pn != null) {
          settings.insertIntermediatePoint(pn.getLatitude(),pn.getLongitude(),pn.pointDescription,intermediatePoints.size());
          if (pn.pointDescription.isSearchingAddress(ctx)) {
            AddressLookupRequest lookupRequest=new AddressLookupRequest(point,new GeocodingLookupService.OnAddressLookupResult(){
              @Override public void geocodingDone(              String address){
                pn.pointDescription.setName(address);
                settings.updateIntermediatePoint(pn.getLatitude(),pn.getLongitude(),pn.pointDescription);
                readFromSettings(settings);
                updateRouteAndRefresh(false);
              }
            }
,null);
            ctx.getGeocodingLookupService().lookupAddress(lookupRequest);
          }
        }
      }
      settings.setPointToNavigate(point.getLatitude(),point.getLongitude(),pointDescription);
      if (needAddress) {
        targetPointRequest=new AddressLookupRequest(point,new GeocodingLookupService.OnAddressLookupResult(){
          @Override public void geocodingDone(          String address){
            targetPointRequest=null;
            pointDescription.setName(address);
            settings.setPointToNavigate(point.getLatitude(),point.getLongitude(),pointDescription);
            readFromSettings(settings);
            updateRouteAndRefresh(false);
          }
        }
,null);
        ctx.getGeocodingLookupService().lookupAddress(targetPointRequest);
      }
    }
 else {
      settings.insertIntermediatePoint(point.getLatitude(),point.getLongitude(),pointDescription,intermediate);
      if (pointDescription.isSearchingAddress(ctx)) {
        AddressLookupRequest lookupRequest=new AddressLookupRequest(point,new GeocodingLookupService.OnAddressLookupResult(){
          @Override public void geocodingDone(          String address){
            pointDescription.setName(address);
            settings.updateIntermediatePoint(point.getLatitude(),point.getLongitude(),pointDescription);
            readFromSettings(settings);
            updateRouteAndRefresh(false);
          }
        }
,null);
        ctx.getGeocodingLookupService().lookupAddress(lookupRequest);
      }
    }
  }
 else {
    settings.clearPointToNavigate();
    settings.clearIntermediatePoints();
  }
  readFromSettings(settings);
  updateRouteAndRefresh(updateRoute);
}
