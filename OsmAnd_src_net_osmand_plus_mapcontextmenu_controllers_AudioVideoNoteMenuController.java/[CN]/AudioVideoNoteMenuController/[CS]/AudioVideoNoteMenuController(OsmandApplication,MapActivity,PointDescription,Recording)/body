{
  super(new AudioVideoNoteMenuBuilder(app,recording),pointDescription,mapActivity);
  this.recording=recording;
  plugin=OsmandPlugin.getPlugin(AudioVideoNotesPlugin.class);
  leftTitleButtonController=new TitleButtonController(){
    @Override public void buttonPressed(){
      if (plugin != null) {
        plugin.playRecording(getMapActivity(),getRecording());
      }
    }
  }
;
  if (!recording.isPhoto()) {
    leftTitleButtonController.caption=getMapActivity().getString(R.string.recording_context_menu_play);
    leftTitleButtonController.leftIconId=R.drawable.ic_play_dark;
    String durationStr=recording.getPlainDuration();
    leftTitleButtonController.needRightText=true;
    leftTitleButtonController.rightTextCaption="??? " + durationStr;
  }
 else {
    leftTitleButtonController.caption=getMapActivity().getString(R.string.recording_context_menu_show);
    leftTitleButtonController.leftIconId=R.drawable.ic_action_view;
  }
  rightTitleButtonController=new TitleButtonController(){
    @Override public void buttonPressed(){
      AccessibleAlertBuilder bld=new AccessibleAlertBuilder(getMapActivity());
      bld.setMessage(R.string.recording_delete_confirm);
      bld.setPositiveButton(R.string.shared_string_yes,new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int which){
          if (plugin != null) {
            plugin.deleteRecording(getRecording());
            getMapActivity().getContextMenu().close();
          }
        }
      }
);
      bld.setNegativeButton(R.string.shared_string_no,null);
      bld.show();
    }
  }
;
  rightTitleButtonController.caption=getMapActivity().getString(R.string.shared_string_delete);
  rightTitleButtonController.leftIconId=R.drawable.ic_action_delete_dark;
}
