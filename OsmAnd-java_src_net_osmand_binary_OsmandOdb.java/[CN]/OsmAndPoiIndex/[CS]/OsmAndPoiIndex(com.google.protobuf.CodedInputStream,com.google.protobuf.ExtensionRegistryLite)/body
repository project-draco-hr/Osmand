{
  initFields();
  int mutable_bitField0_=0;
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder();
  try {
    boolean done=false;
    while (!done) {
      int tag=input.readTag();
switch (tag) {
case 0:
        done=true;
      break;
default :
{
      if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
        done=true;
      }
      break;
    }
case 10:
{
    bitField0_|=0x00000001;
    name_=input.readBytes();
    break;
  }
case 18:
{
  net.osmand.binary.OsmandOdb.OsmAndTileBox.Builder subBuilder=null;
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    subBuilder=boundaries_.toBuilder();
  }
  boundaries_=input.readMessage(net.osmand.binary.OsmandOdb.OsmAndTileBox.PARSER,extensionRegistry);
  if (subBuilder != null) {
    subBuilder.mergeFrom(boundaries_);
    boundaries_=subBuilder.buildPartial();
  }
  bitField0_|=0x00000002;
  break;
}
case 26:
{
if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
  categoriesTable_=new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndCategoryTable>();
  mutable_bitField0_|=0x00000004;
}
categoriesTable_.add(input.readMessage(net.osmand.binary.OsmandOdb.OsmAndCategoryTable.PARSER,extensionRegistry));
break;
}
case 34:
{
net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.Builder subBuilder=null;
if (((bitField0_ & 0x00000004) == 0x00000004)) {
subBuilder=nameIndex_.toBuilder();
}
nameIndex_=input.readMessage(net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.PARSER,extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(nameIndex_);
nameIndex_=subBuilder.buildPartial();
}
bitField0_|=0x00000004;
break;
}
case 42:
{
net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.Builder subBuilder=null;
if (((bitField0_ & 0x00000008) == 0x00000008)) {
subBuilder=subtypesTable_.toBuilder();
}
subtypesTable_=input.readMessage(net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.PARSER,extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(subtypesTable_);
subtypesTable_=subBuilder.buildPartial();
}
bitField0_|=0x00000008;
break;
}
case 50:
{
if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
boxes_=new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndPoiBox>();
mutable_bitField0_|=0x00000020;
}
boxes_.add(input.readMessage(net.osmand.binary.OsmandOdb.OsmAndPoiBox.PARSER,extensionRegistry));
break;
}
case 74:
{
if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
poiData_=new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndPoiBoxData>();
mutable_bitField0_|=0x00000040;
}
poiData_.add(input.readMessage(net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.PARSER,extensionRegistry));
break;
}
}
}
}
 catch (com.google.protobuf.InvalidProtocolBufferException e) {
throw e.setUnfinishedMessage(this);
}
catch (java.io.IOException e) {
throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
}
 finally {
if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
categoriesTable_=java.util.Collections.unmodifiableList(categoriesTable_);
}
if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
boxes_=java.util.Collections.unmodifiableList(boxes_);
}
if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
poiData_=java.util.Collections.unmodifiableList(poiData_);
}
this.unknownFields=unknownFields.build();
makeExtensionsImmutable();
}
}
