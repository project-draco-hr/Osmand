{
  net.osmand.binary.OsmandOdb.OsmAndRoutingIndex result=new net.osmand.binary.OsmandOdb.OsmAndRoutingIndex(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  result.name_=name_;
  if (rulesBuilder_ == null) {
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      rules_=java.util.Collections.unmodifiableList(rules_);
      bitField0_=(bitField0_ & ~0x00000002);
    }
    result.rules_=rules_;
  }
 else {
    result.rules_=rulesBuilder_.build();
  }
  if (rootBoxesBuilder_ == null) {
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      rootBoxes_=java.util.Collections.unmodifiableList(rootBoxes_);
      bitField0_=(bitField0_ & ~0x00000004);
    }
    result.rootBoxes_=rootBoxes_;
  }
 else {
    result.rootBoxes_=rootBoxesBuilder_.build();
  }
  if (basemapBoxesBuilder_ == null) {
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      basemapBoxes_=java.util.Collections.unmodifiableList(basemapBoxes_);
      bitField0_=(bitField0_ & ~0x00000008);
    }
    result.basemapBoxes_=basemapBoxes_;
  }
 else {
    result.basemapBoxes_=basemapBoxesBuilder_.build();
  }
  if (blocksBuilder_ == null) {
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      blocks_=java.util.Collections.unmodifiableList(blocks_);
      bitField0_=(bitField0_ & ~0x00000010);
    }
    result.blocks_=blocks_;
  }
 else {
    result.blocks_=blocksBuilder_.build();
  }
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
