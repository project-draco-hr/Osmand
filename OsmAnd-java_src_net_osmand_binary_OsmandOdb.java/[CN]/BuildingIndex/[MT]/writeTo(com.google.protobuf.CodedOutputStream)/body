{
  getSerializedSize();
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    output.writeBytes(1,getNameBytes());
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    output.writeBytes(2,getNameEnBytes());
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    output.writeBytes(3,getName2Bytes());
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    output.writeBytes(4,getNameEn2Bytes());
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    output.writeSInt32(5,interpolation_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    output.writeSInt32(7,x_);
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    output.writeSInt32(8,y_);
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    output.writeSInt32(9,x2_);
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    output.writeSInt32(10,y2_);
  }
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    output.writeUInt64(13,id_);
  }
  if (((bitField0_ & 0x00000400) == 0x00000400)) {
    output.writeBytes(14,getPostcodeBytes());
  }
  for (int i=0; i < attributeTagIds_.size(); i++) {
    output.writeUInt32(15,attributeTagIds_.get(i));
  }
  for (int i=0; i < attributeValues_.size(); i++) {
    output.writeBytes(16,attributeValues_.getByteString(i));
  }
  for (int i=0; i < attributeTagIds2_.size(); i++) {
    output.writeUInt32(17,attributeTagIds2_.get(i));
  }
  for (int i=0; i < attributeValues2_.size(); i++) {
    output.writeBytes(18,attributeValues2_.getByteString(i));
  }
  getUnknownFields().writeTo(output);
}
