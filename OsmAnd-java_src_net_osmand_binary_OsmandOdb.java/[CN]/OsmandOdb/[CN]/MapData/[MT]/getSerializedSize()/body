{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (hasCoordinates()) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(1,getCoordinates());
  }
  if (hasAreaCoordinates()) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(2,getAreaCoordinates());
  }
{
    int dataSize=0;
    for (    com.google.protobuf.ByteString element : getPolygonInnerCoordinatesList()) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeBytesSizeNoTag(element);
    }
    size+=dataSize;
    size+=getPolygonInnerCoordinatesList().size();
  }
  if (hasAdditionalTypes()) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(6,getAdditionalTypes());
  }
  if (hasTypes()) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(7,getTypes());
  }
  if (hasStringNames()) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(10,getStringNames());
  }
  if (hasId()) {
    size+=com.google.protobuf.CodedOutputStream.computeSInt64Size(12,getId());
  }
  if (hasRasterBytes()) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(15,getRasterBytes());
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
