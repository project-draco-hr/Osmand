{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (hasDx()) {
    size+=com.google.protobuf.CodedOutputStream.computeSInt32Size(2,getDx());
  }
  if (hasDy()) {
    size+=com.google.protobuf.CodedOutputStream.computeSInt32Size(3,getDy());
  }
{
    int dataSize=0;
    for (    int element : getCategoriesList()) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(element);
    }
    size+=dataSize;
    size+=getCategoriesList().size();
  }
  if (hasName()) {
    size+=com.google.protobuf.CodedOutputStream.computeStringSize(6,getName());
  }
  if (hasNameEn()) {
    size+=com.google.protobuf.CodedOutputStream.computeStringSize(7,getNameEn());
  }
  if (hasId()) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt64Size(8,getId());
  }
  if (hasOpeningHours()) {
    size+=com.google.protobuf.CodedOutputStream.computeStringSize(10,getOpeningHours());
  }
  if (hasSite()) {
    size+=com.google.protobuf.CodedOutputStream.computeStringSize(11,getSite());
  }
  if (hasPhone()) {
    size+=com.google.protobuf.CodedOutputStream.computeStringSize(12,getPhone());
  }
  if (hasNote()) {
    size+=com.google.protobuf.CodedOutputStream.computeStringSize(13,getNote());
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
