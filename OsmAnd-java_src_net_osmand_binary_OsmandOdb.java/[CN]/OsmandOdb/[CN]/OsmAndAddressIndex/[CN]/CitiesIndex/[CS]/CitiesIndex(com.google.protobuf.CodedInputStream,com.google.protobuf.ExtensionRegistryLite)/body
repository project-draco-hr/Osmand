{
  initFields();
  int mutable_bitField0_=0;
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder();
  try {
    boolean done=false;
    while (!done) {
      int tag=input.readTag();
switch (tag) {
case 0:
        done=true;
      break;
default :
{
      if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
        done=true;
      }
      break;
    }
case 16:
{
    int rawValue=input.readEnum();
    net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.CitiesType value=net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.CitiesType.valueOf(rawValue);
    if (value == null) {
      unknownFields.mergeVarintField(2,rawValue);
    }
 else {
      bitField0_|=0x00000001;
      type_=value;
    }
    break;
  }
case 42:
{
  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
    cities_=new java.util.ArrayList<net.osmand.binary.OsmandOdb.CityIndex>();
    mutable_bitField0_|=0x00000002;
  }
  cities_.add(input.readMessage(net.osmand.binary.OsmandOdb.CityIndex.PARSER,extensionRegistry));
  break;
}
case 58:
{
if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
  blocks_=new java.util.ArrayList<net.osmand.binary.OsmandOdb.CityBlockIndex>();
  mutable_bitField0_|=0x00000004;
}
blocks_.add(input.readMessage(net.osmand.binary.OsmandOdb.CityBlockIndex.PARSER,extensionRegistry));
break;
}
}
}
}
 catch (com.google.protobuf.InvalidProtocolBufferException e) {
throw e.setUnfinishedMessage(this);
}
catch (java.io.IOException e) {
throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
}
 finally {
if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
cities_=java.util.Collections.unmodifiableList(cities_);
}
if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
blocks_=java.util.Collections.unmodifiableList(blocks_);
}
this.unknownFields=unknownFields.build();
makeExtensionsImmutable();
}
}
