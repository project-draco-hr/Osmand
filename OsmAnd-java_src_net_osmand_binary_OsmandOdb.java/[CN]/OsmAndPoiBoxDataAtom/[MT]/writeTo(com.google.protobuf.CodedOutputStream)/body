{
  getSerializedSize();
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    output.writeSInt32(2,dx_);
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    output.writeSInt32(3,dy_);
  }
  for (int i=0; i < categories_.size(); i++) {
    output.writeUInt32(4,categories_.get(i));
  }
  for (int i=0; i < subcategories_.size(); i++) {
    output.writeUInt32(5,subcategories_.get(i));
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    output.writeBytes(6,getNameBytes());
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    output.writeBytes(7,getNameEnBytes());
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    output.writeUInt64(8,id_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    output.writeBytes(10,getOpeningHoursBytes());
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    output.writeBytes(11,getSiteBytes());
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    output.writeBytes(12,getPhoneBytes());
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    output.writeBytes(13,getNoteBytes());
  }
  for (int i=0; i < textCategories_.size(); i++) {
    output.writeUInt32(14,textCategories_.get(i));
  }
  for (int i=0; i < textValues_.size(); i++) {
    output.writeBytes(15,textValues_.getByteString(i));
  }
  getUnknownFields().writeTo(output);
}
