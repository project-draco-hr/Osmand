{
  if (other == net.osmand.binary.OsmandOdb.StreetIndex.getDefaultInstance())   return this;
  if (other.hasName()) {
    setName(other.getName());
  }
  if (other.hasNameEn()) {
    setNameEn(other.getNameEn());
  }
  if (!other.attributeTagIds_.isEmpty()) {
    if (result.attributeTagIds_.isEmpty()) {
      result.attributeTagIds_=new java.util.ArrayList<java.lang.Integer>();
    }
    result.attributeTagIds_.addAll(other.attributeTagIds_);
  }
  if (!other.attributeValues_.isEmpty()) {
    if (result.attributeValues_.isEmpty()) {
      result.attributeValues_=new java.util.ArrayList<java.lang.String>();
    }
    result.attributeValues_.addAll(other.attributeValues_);
  }
  if (other.hasX()) {
    setX(other.getX());
  }
  if (other.hasY()) {
    setY(other.getY());
  }
  if (other.hasId()) {
    setId(other.getId());
  }
  if (!other.buildings_.isEmpty()) {
    if (result.buildings_.isEmpty()) {
      result.buildings_=new java.util.ArrayList<net.osmand.binary.OsmandOdb.BuildingIndex>();
    }
    result.buildings_.addAll(other.buildings_);
  }
  if (!other.intersections_.isEmpty()) {
    if (result.intersections_.isEmpty()) {
      result.intersections_=new java.util.ArrayList<net.osmand.binary.OsmandOdb.StreetIntersection>();
    }
    result.intersections_.addAll(other.intersections_);
  }
  this.mergeUnknownFields(other.getUnknownFields());
  return this;
}
