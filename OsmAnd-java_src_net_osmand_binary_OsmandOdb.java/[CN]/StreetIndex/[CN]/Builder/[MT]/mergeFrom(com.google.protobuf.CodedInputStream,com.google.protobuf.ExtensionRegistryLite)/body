{
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
  while (true) {
    int tag=input.readTag();
switch (tag) {
case 0:
      this.setUnknownFields(unknownFields.build());
    return this;
default :
{
    if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
      this.setUnknownFields(unknownFields.build());
      return this;
    }
    break;
  }
case 10:
{
  setName(input.readString());
  break;
}
case 18:
{
setNameEn(input.readString());
break;
}
case 24:
{
setX(input.readSInt32());
break;
}
case 32:
{
setY(input.readSInt32());
break;
}
case 42:
{
net.osmand.binary.OsmandOdb.StreetIntersection.Builder subBuilder=net.osmand.binary.OsmandOdb.StreetIntersection.newBuilder();
input.readMessage(subBuilder,extensionRegistry);
addIntersections(subBuilder.buildPartial());
break;
}
case 48:
{
setId(input.readUInt64());
break;
}
case 56:
{
addAttributeTagIds(input.readUInt32());
break;
}
case 58:
{
int length=input.readRawVarint32();
int limit=input.pushLimit(length);
while (input.getBytesUntilLimit() > 0) {
addAttributeTagIds(input.readUInt32());
}
input.popLimit(limit);
break;
}
case 66:
{
addAttributeValues(input.readString());
break;
}
case 98:
{
net.osmand.binary.OsmandOdb.BuildingIndex.Builder subBuilder=net.osmand.binary.OsmandOdb.BuildingIndex.newBuilder();
input.readMessage(subBuilder,extensionRegistry);
addBuildings(subBuilder.buildPartial());
break;
}
}
}
}
