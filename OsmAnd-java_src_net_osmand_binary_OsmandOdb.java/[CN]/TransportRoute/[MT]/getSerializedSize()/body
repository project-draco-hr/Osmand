{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (hasId()) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt64Size(1,getId());
  }
  if (hasType()) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(3,getType());
  }
  if (hasOperator()) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(4,getOperator());
  }
  if (hasRef()) {
    size+=com.google.protobuf.CodedOutputStream.computeStringSize(5,getRef());
  }
  if (hasName()) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(6,getName());
  }
  if (hasNameEn()) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(7,getNameEn());
  }
  if (hasDistance()) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(8,getDistance());
  }
  for (  net.osmand.binary.OsmandOdb.TransportRouteStop element : getDirectStopsList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(15,element);
  }
  for (  net.osmand.binary.OsmandOdb.TransportRouteStop element : getReverseStopsList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(16,element);
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
