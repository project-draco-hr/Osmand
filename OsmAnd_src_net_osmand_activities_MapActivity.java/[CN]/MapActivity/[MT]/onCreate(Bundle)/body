{
  super.onCreate(savedInstanceState);
  settings=OsmandSettings.getPrefs(this);
  setVolumeControlStream(AudioManager.STREAM_MUSIC);
  requestWindowFeature(Window.FEATURE_NO_TITLE);
  setContentView(R.layout.main);
  ProgressDialog dlg=((OsmandApplication)getApplication()).checkApplicationIsBeingInitialized(this);
  if (dlg != null) {
    dlg.setOnDismissListener(new DialogInterface.OnDismissListener(){
      @Override public void onDismiss(      DialogInterface dialog){
        OsmandApplication app=((OsmandApplication)getApplication());
        if (OsmandSettings.isUsingMapVectorData(settings) && app.getResourceManager().getRenderer().isEmpty()) {
          Toast.makeText(MapActivity.this,getString(R.string.no_vector_map_loaded),Toast.LENGTH_LONG).show();
        }
      }
    }
);
  }
  mapView=(OsmandMapTileView)findViewById(R.id.MapView);
  mapView.setTrackBallDelegate(new OsmandMapTileView.OnTrackBallListener(){
    @Override public boolean onTrackBallEvent(    MotionEvent e){
      showAndHideMapPosition();
      return MapActivity.this.onTrackballEvent(e);
    }
  }
);
  MapTileDownloader.getInstance().addDownloaderCallback(new IMapDownloaderCallback(){
    @Override public void tileDownloaded(    DownloadRequest request){
      if (request != null && !request.error && request.fileToSave != null) {
        ResourceManager mgr=((OsmandApplication)getApplication()).getResourceManager();
        mgr.tileDownloaded(request);
      }
      mapView.tileDownloaded(request);
    }
  }
);
  mapView.setMapLocationListener(this);
  routingHelper=((OsmandApplication)getApplication()).getRoutingHelper();
  rendererLayer=new RendererLayer();
  mapView.addLayer(rendererLayer,0.5f);
  gpxLayer=new GPXLayer();
  mapView.addLayer(gpxLayer,0.6f);
  routeLayer=new RouteLayer(routingHelper);
  mapView.addLayer(routeLayer,1);
  trafficLayer=new YandexTrafficLayer();
  mapView.addLayer(trafficLayer,1.5f);
  osmBugsLayer=new OsmBugsLayer(this);
  poiMapLayer=new POIMapLayer();
  favoritesLayer=new FavoritesLayer();
  transportStopsLayer=new TransportStopsLayer();
  transportInfoLayer=new TransportInfoLayer(TransportRouteHelper.getInstance());
  mapView.addLayer(transportInfoLayer,5.5f);
  navigationLayer=new PointNavigationLayer();
  mapView.addLayer(navigationLayer,6);
  locationLayer=new PointLocationLayer();
  mapView.addLayer(locationLayer,7);
  mapInfoLayer=new MapInfoLayer(this,routeLayer);
  mapView.addLayer(mapInfoLayer,8);
  contextMenuLayer=new ContextMenuLayer(this);
  mapView.addLayer(contextMenuLayer,9);
  routeInfoLayer=new RouteInfoLayer(routingHelper,(LinearLayout)findViewById(R.id.RouteLayout));
  mapView.addLayer(routeInfoLayer,10);
  savingTrackHelper=new SavingTrackHelper(this);
  LatLon pointToNavigate=OsmandSettings.getPointToNavigate(settings);
  if (!Algoritms.objectEquals(routingHelper.getFinalLocation(),pointToNavigate)) {
    routingHelper.setFollowingMode(false);
    routingHelper.setFinalAndCurrentLocation(pointToNavigate,null);
  }
  if (OsmandSettings.isFollowingByRoute(settings)) {
    if (pointToNavigate == null) {
      OsmandSettings.setFollowingByRoute(this,false);
    }
 else     if (!routingHelper.isRouteCalculated()) {
      Builder builder=new AlertDialog.Builder(this);
      builder.setMessage(R.string.continue_follow_previous_route);
      builder.setPositiveButton(R.string.default_buttons_yes,new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int which){
          routingHelper.setFollowingMode(true);
        }
      }
);
      builder.setNegativeButton(R.string.default_buttons_no,new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int which){
          OsmandSettings.setFollowingByRoute(MapActivity.this,false);
          routingHelper.setFinalLocation(null);
          mapView.refreshMap();
        }
      }
);
      builder.show();
    }
  }
  navigationLayer.setPointToNavigate(pointToNavigate);
  SharedPreferences prefs=getSharedPreferences(OsmandSettings.SHARED_PREFERENCES_NAME,MODE_WORLD_READABLE);
  if (prefs == null || !prefs.contains(OsmandSettings.LAST_KNOWN_MAP_LAT)) {
    LocationManager service=(LocationManager)getSystemService(LOCATION_SERVICE);
    Location location=null;
    try {
      location=service.getLastKnownLocation(LocationManager.GPS_PROVIDER);
    }
 catch (    IllegalArgumentException e) {
      Log.d(LogUtil.TAG,"GPS location provider not available");
    }
    if (location == null) {
      try {
        location=service.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);
      }
 catch (      IllegalArgumentException e) {
        Log.d(LogUtil.TAG,"Network location provider not available");
      }
    }
    if (location != null) {
      mapView.setLatLon(location.getLatitude(),location.getLongitude());
      mapView.setZoom(14);
    }
  }
  final ZoomControls zoomControls=(ZoomControls)findViewById(R.id.ZoomControls);
  zoomControls.setOnZoomInClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      zoomControls.setIsZoomInEnabled(mapView.getZoom() + 1 < mapView.getMaximumShownMapZoom());
      zoomControls.setIsZoomOutEnabled(mapView.getZoom() + 1 > mapView.getMinimumShownMapZoom());
      mapView.getAnimatedDraggingThread().stopAnimatingSync();
      mapView.getAnimatedDraggingThread().startZooming(mapView.getZoom(),mapView.getZoom() + 1);
      showAndHideMapPosition();
      if (OsmandSettings.isAutoZoomEnabled(settings)) {
        locationChanged(mapView.getLatitude(),mapView.getLongitude(),null);
      }
    }
  }
);
  zoomControls.setOnZoomOutClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      zoomControls.setIsZoomInEnabled(mapView.getZoom() - 1 < mapView.getMaximumShownMapZoom());
      zoomControls.setIsZoomOutEnabled(mapView.getZoom() - 1 > mapView.getMinimumShownMapZoom());
      mapView.getAnimatedDraggingThread().stopAnimatingSync();
      mapView.getAnimatedDraggingThread().startZooming(mapView.getZoom(),mapView.getZoom() - 1);
      showAndHideMapPosition();
      if (OsmandSettings.isAutoZoomEnabled(settings)) {
        locationChanged(mapView.getLatitude(),mapView.getLongitude(),null);
      }
    }
  }
);
  backToLocation=(ImageButton)findViewById(R.id.BackToLocation);
  backToLocation.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      backToLocationImpl();
    }
  }
);
  backToMenu=(ImageButton)findViewById(R.id.BackToMenu);
  backToMenu.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      Intent newIntent=new Intent(MapActivity.this,MainMenuActivity.class);
      newIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
      startActivity(newIntent);
    }
  }
);
}
