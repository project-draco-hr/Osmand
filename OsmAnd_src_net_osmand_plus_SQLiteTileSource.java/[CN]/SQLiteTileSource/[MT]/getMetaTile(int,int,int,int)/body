{
  SQLiteConnection db=getDatabase();
  if (db == null) {
    return null;
  }
  Bitmap stitchedImage=Bitmap.createBitmap(tileSize + 2 * margin,tileSize + 2 * margin,Config.ARGB_8888);
  Canvas canvas=new Canvas(stitchedImage);
  for (int dx=-1; dx <= 1; dx++) {
    for (int dy=-1; dy <= 1; dy++) {
      if ((flags & (0x400 >> (4 * (dy + 1) + (dx + 1)))) == 0)       continue;
      int xOff, yOff, w, h;
      int dstx, dsty;
      SQLiteCursor cursor=db.rawQuery("SELECT image FROM tiles WHERE x = ? AND y = ? AND z = ?",new String[]{(x + dx) + "",(y + dy) + "",(17 - zoom) + ""});
      byte[] blob=null;
      if (cursor.moveToFirst()) {
        blob=cursor.getBlob(0);
      }
      cursor.close();
      if (dx < 0)       xOff=tileSize - margin;
 else       xOff=0;
      if (dx == 0)       w=tileSize;
 else       w=margin;
      if (dy < 0)       yOff=tileSize - margin;
 else       yOff=0;
      if (dy == 0)       h=tileSize;
 else       h=margin;
      dstx=dx * tileSize + xOff + margin;
      dsty=dy * tileSize + yOff + margin;
      if (blob != null) {
        Bitmap Tile=BitmapFactory.decodeByteArray(blob,0,blob.length);
        blob=null;
        Rect src=new Rect(xOff,yOff,xOff + w,yOff + h);
        Rect dst=new Rect(dstx,dsty,dstx + w,dsty + h);
        canvas.drawBitmap(Tile,src,dst,null);
        Tile.recycle();
      }
    }
  }
  return stitchedImage;
}
