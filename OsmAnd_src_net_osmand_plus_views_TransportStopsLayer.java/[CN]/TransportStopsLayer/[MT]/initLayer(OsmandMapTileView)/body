{
  this.view=view;
  DisplayMetrics dm=new DisplayMetrics();
  WindowManager wmgr=(WindowManager)view.getContext().getSystemService(Context.WINDOW_SERVICE);
  wmgr.getDefaultDisplay().getMetrics(dm);
  paintIcon=new Paint();
  stopBus=BitmapFactory.decodeResource(view.getResources(),R.drawable.map_transport_stop_bus);
  stopSmall=BitmapFactory.decodeResource(view.getResources(),R.drawable.map_transport_stop_small);
  data=new OsmandMapLayer.MapLayerData<List<TransportStop>>(){
{
      ZOOM_THRESHOLD=0;
    }
    @Override public boolean isInterrupted(){
      return super.isInterrupted();
    }
    @Override public void layerOnPostExecute(){
      view.refreshMap();
    }
    @Override protected List<TransportStop> calculateResult(    RotatedTileBox tileBox){
      QuadRect latLonBounds=tileBox.getLatLonBounds();
      if (latLonBounds == null) {
        return new ArrayList<>();
      }
      List<TransportStop> res=view.getApplication().getResourceManager().searchTransportSync(latLonBounds.top,latLonBounds.left,latLonBounds.bottom,latLonBounds.right,new ResultMatcher<TransportStop>(){
        @Override public boolean publish(        TransportStop object){
          return true;
        }
        @Override public boolean isCancelled(){
          return isInterrupted();
        }
      }
);
      Collections.sort(res,new Comparator<TransportStop>(){
        @Override public int compare(        TransportStop lhs,        TransportStop rhs){
          return lhs.getId() < rhs.getId() ? -1 : (lhs.getId().longValue() == rhs.getId().longValue() ? 0 : 1);
        }
      }
);
      return res;
    }
  }
;
}
