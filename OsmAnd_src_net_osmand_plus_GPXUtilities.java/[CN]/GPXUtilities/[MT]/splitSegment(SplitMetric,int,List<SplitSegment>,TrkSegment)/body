{
  int ml=metricLimit;
  SplitSegment sp=new SplitSegment(segment,0,0);
  int total=0;
  for (int k=0; k < segment.points.size(); k++) {
    WptPt point=segment.points.get(k);
    if (k > 0) {
      WptPt prev=segment.points.get(k - 1);
      int currentSegment=metric.metric(prev,point);
      while (total + currentSegment > ml) {
        int p=ml - total;
        float cf=sp.setLastPoint(k - 1,p / ((float)currentSegment));
        sp=new SplitSegment(segment,k - 1,cf);
        sp.metricEnd=ml;
        splitSegments.add(sp);
        ml+=metricLimit;
      }
      total+=currentSegment;
    }
  }
  if (segment.points.size() > 0 && !(sp.endPointInd == segment.points.size() - 1 && sp.startCoeff == 1)) {
    sp.metricEnd=total;
    sp.setLastPoint(0,1);
    splitSegments.add(sp);
  }
}
