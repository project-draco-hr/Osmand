{
  long now=System.currentTimeMillis();
  int sleft=MapUtils.get31TileNumberX(leftLongitude);
  int sright=MapUtils.get31TileNumberX(rightLongitude);
  int sbottom=MapUtils.get31TileNumberY(bottomLatitude);
  int stop=MapUtils.get31TileNumberY(topLatitude);
  SearchRequest<Amenity> req=BinaryMapIndexReader.buildSearchPoiRequest(sleft,sright,stop,sbottom,16);
  req.setSearchFilter(new SearchFilter(){
    @Override public boolean accept(    TIntArrayList types,    MapIndex root){
      for (int j=0; j < types.size(); j++) {
        int wholeType=types.get(j);
        TagValuePair pair=root.decodeType(wholeType);
        if (pair != null) {
          AmenityType type=MapRenderingTypes.getAmenityType(pair.tag,pair.value);
          if (type != null) {
            if (filter.acceptTypeSubtype(type,MapRenderingTypes.getAmenitySubtype(pair.tag,pair.value))) {
              return true;
            }
          }
        }
      }
      return false;
    }
  }
);
  try {
    List<Amenity> result=index.searchPoi(req);
    for (    Amenity am : result) {
      if (filter.acceptTypeSubtype(am.getType(),am.getSubType())) {
        amenities.add(am);
      }
    }
  }
 catch (  IOException e) {
    log.error("Error searching amenities",e);
    return amenities;
  }
  if (log.isDebugEnabled()) {
    log.debug(String.format("Search for %s done in %s ms found %s.",topLatitude + " " + leftLongitude,System.currentTimeMillis() - now,amenities.size()));
  }
  return amenities;
}
