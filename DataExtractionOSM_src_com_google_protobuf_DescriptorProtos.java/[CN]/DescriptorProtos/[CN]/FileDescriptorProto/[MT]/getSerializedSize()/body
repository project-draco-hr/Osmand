{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (hasName()) {
    size+=com.google.protobuf.CodedOutputStream.computeStringSize(1,getName());
  }
  if (hasPackage()) {
    size+=com.google.protobuf.CodedOutputStream.computeStringSize(2,getPackage());
  }
{
    int dataSize=0;
    for (    java.lang.String element : getDependencyList()) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeStringSizeNoTag(element);
    }
    size+=dataSize;
    size+=1 * getDependencyList().size();
  }
  for (  com.google.protobuf.DescriptorProtos.DescriptorProto element : getMessageTypeList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(4,element);
  }
  for (  com.google.protobuf.DescriptorProtos.EnumDescriptorProto element : getEnumTypeList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(5,element);
  }
  for (  com.google.protobuf.DescriptorProtos.ServiceDescriptorProto element : getServiceList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(6,element);
  }
  for (  com.google.protobuf.DescriptorProtos.FieldDescriptorProto element : getExtensionList()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(7,element);
  }
  if (hasOptions()) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(8,getOptions());
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
