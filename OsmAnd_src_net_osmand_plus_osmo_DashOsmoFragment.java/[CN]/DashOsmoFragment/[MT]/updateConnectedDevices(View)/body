{
  OsMoGroups grps=plugin.getGroups();
  OsMoGroupsStorage.OsMoGroup mainGroup=null;
  for (  OsMoGroupsStorage.OsMoGroup grp : grps.getGroups()) {
    if (grp.getGroupId() == null) {
      mainGroup=grp;
      break;
    }
  }
  LinearLayout contentList=(LinearLayout)mainView.findViewById(R.id.items);
  contentList.removeAllViews();
  if (mainGroup == null) {
    return;
  }
  List<OsMoGroupsStorage.OsMoDevice> devices=new ArrayList<>(mainGroup.getVisibleGroupUsers(plugin.getService().getMyGroupTrackerId()));
  while (devices.size() > 3) {
    devices.remove(devices.size() - 1);
  }
  Drawable markerIcon=getMyApplication().getIconsCache().getContentIcon(R.drawable.ic_action_marker_dark);
  LayoutInflater inflater=getActivity().getLayoutInflater();
  for (  final OsMoGroupsStorage.OsMoDevice device : devices) {
    View v=inflater.inflate(R.layout.dash_osmo_item,null,false);
    ImageButton showOnMap=(ImageButton)v.findViewById(R.id.show_on_map);
    showOnMap.setImageDrawable(markerIcon);
    final String name=device.getVisibleName();
    showOnMap.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        Location loc=device.getLastLocation();
        getMyApplication().getSettings().setMapLocationToShow(loc.getLatitude(),loc.getLongitude(),15,new PointDescription(PointDescription.POINT_TYPE_MARKER,name),false,device);
        MapActivity.launchMapActivityMoveToTop(getActivity());
      }
    }
);
    ((TextView)v.findViewById(R.id.name)).setText(name);
    contentList.addView(v);
  }
}
