{
  try {
    List<File> filesToReindex=new ArrayList<File>();
    boolean forceWifi=downloadFileHelper.isWifiConnected();
    Set<IndexItem> currentDownloads=new HashSet<IndexItem>();
    String warn="";
    try {
      downloadCycle:       while (!indexItemDownloading.isEmpty()) {
        IndexItem item=indexItemDownloading.poll();
        currentDownloadingItem=item;
        currentDownloadingItemProgress=0;
        if (currentDownloads.contains(item)) {
          continue;
        }
        currentDownloads.add(item);
        boolean success=false;
        if (!validateEnoughSpace(item)) {
          break downloadCycle;
        }
        if (!validateNotExceedsFreeLimit(item)) {
          break downloadCycle;
        }
        setTag(item);
        boolean result=downloadFile(item,filesToReindex,forceWifi);
        success=result || success;
        if (result) {
          if (DownloadActivityType.isCountedInDownloads(item)) {
            downloads.set(downloads.get() + 1);
          }
          File bf=item.getBackupFile(app);
          if (bf.exists()) {
            Algorithms.removeAllFiles(bf);
          }
          publishProgress(item);
          String wn=reindexFiles(filesToReindex);
          if (!Algorithms.isEmpty(wn)) {
            warn+=" " + wn;
          }
          filesToReindex.clear();
        }
      }
    }
  finally {
      currentDownloadingItem=null;
      currentDownloadingItemProgress=0;
    }
    if (warn.trim().length() == 0) {
      return null;
    }
    return warn.trim();
  }
 catch (  InterruptedException e) {
    LOG.info("Download Interrupted");
  }
  return null;
}
