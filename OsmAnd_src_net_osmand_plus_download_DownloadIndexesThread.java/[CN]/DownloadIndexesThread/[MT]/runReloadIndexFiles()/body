{
  checkRunning();
  final BasicProgressAsyncTask<Void,Void,IndexFileList> inst=new BasicProgressAsyncTask<Void,Void,IndexFileList>(ctx){
    @Override protected IndexFileList doInBackground(    Void... params){
      return DownloadOsmandIndexesHelper.getIndexesList(ctx);
    }
    @Override protected void onPreExecute(){
      currentRunningTask.add(this);
      super.onPreExecute();
      this.message=ctx.getString(R.string.downloading_list_indexes);
    }
    protected void onPostExecute(    IndexFileList result){
      indexFiles=result;
      if (indexFiles != null && uiFragment != null) {
        boolean basemapExists=uiFragment.getMyApplication().getResourceManager().containsBasemap();
        IndexItem basemap=indexFiles.getBasemap();
        if (basemap != null) {
          String dt=uiFragment.getMyApplication().getResourceManager().getIndexFileNames().get(basemap.getTargetFileName());
          if (!basemapExists || !Algorithms.objectEquals(dt,basemap.getDate(dateFormat))) {
            List<DownloadEntry> downloadEntry=basemap.createDownloadEntry(uiFragment.getMyApplication(),DownloadActivityType.NORMAL_FILE,new ArrayList<DownloadEntry>());
            uiFragment.getDownloadActivity().getEntriesToDownload().put(basemap,downloadEntry);
            AccessibleToast.makeText(uiFragment.getDownloadActivity(),R.string.basemap_was_selected_to_download,Toast.LENGTH_LONG).show();
            uiFragment.getDownloadActivity().findViewById(R.id.DownloadButton).setVisibility(View.VISIBLE);
          }
        }
        if (indexFiles.isIncreasedMapVersion()) {
          showWarnDialog();
        }
      }
 else {
        AccessibleToast.makeText(ctx,R.string.list_index_files_was_not_loaded,Toast.LENGTH_LONG).show();
      }
      currentRunningTask.remove(this);
      if (uiFragment != null) {
        uiFragment.updateProgress(false);
        runCategorization(uiFragment.getDownloadActivity().getType());
      }
    }
    private void showWarnDialog(){
      AlertDialog.Builder builder=new AlertDialog.Builder(ctx);
      builder.setMessage(R.string.map_version_changed_info);
      builder.setPositiveButton(R.string.button_upgrade_osmandplus,new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int which){
          Intent intent=new Intent(Intent.ACTION_VIEW,Uri.parse("market://search?q=pname:net.osmand.plus"));
          try {
            ctx.startActivity(intent);
          }
 catch (          ActivityNotFoundException e) {
          }
        }
      }
);
      builder.setNegativeButton(R.string.default_buttons_cancel,new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int which){
          dialog.dismiss();
        }
      }
);
      builder.show();
    }
    @Override protected void updateProgress(    boolean updateOnlyProgress){
      if (uiFragment != null) {
        uiFragment.updateProgress(updateOnlyProgress);
      }
    }
  }
;
  execute(inst,new Void[0]);
}
