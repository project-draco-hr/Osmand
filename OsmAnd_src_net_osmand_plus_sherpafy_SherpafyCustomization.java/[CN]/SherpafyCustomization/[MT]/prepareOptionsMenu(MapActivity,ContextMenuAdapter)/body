{
  filter(adapter,R.string.pause_navigation,R.string.continue_navigation,R.string.cancel_navigation,R.string.cancel_route,R.string.clear_destination,R.string.target_points,R.string.get_directions,R.string.menu_mute_on,R.string.menu_mute_off,R.string.where_am_i,R.string.context_menu_item_share_location);
  if (osmandSettings.SELECTED_POI_FILTER_FOR_MAP.get() != null) {
    adapter.item(R.string.sherpafy_disable_poi).iconColor(R.drawable.ic_action_gremove_dark).listen(new OnContextMenuClick(){
      @Override public boolean onContextMenuClick(      ArrayAdapter<?> adapter,      int itemId,      int pos,      boolean isChecked){
        app.getSettings().SELECTED_POI_FILTER_FOR_MAP.set(null);
        mapActivity.refreshMap();
        return true;
      }
    }
).reg();
  }
 else {
    adapter.item(R.string.poi).iconColor(R.drawable.ic_action_layers_dark).listen(new OnContextMenuClick(){
      @Override public boolean onContextMenuClick(      ArrayAdapter<?> adapter,      int itemId,      int pos,      boolean isChecked){
        mapActivity.getMapLayers().selectPOIFilterLayer(mapActivity.getMapView(),null);
        return true;
      }
    }
).reg();
  }
  adapter.item(R.string.sherpafy_tour_info_txt).iconColor(R.drawable.ic_action_gabout_dark).listen(new OnContextMenuClick(){
    @Override public boolean onContextMenuClick(    ArrayAdapter<?> adapter,    int itemId,    int pos,    boolean isChecked){
      Intent newIntent=new Intent(mapActivity,TourViewActivity.class);
      mapActivity.startActivity(newIntent);
      return true;
    }
  }
).reg();
  final StageInformation stage=getSelectedStage();
  if (stage != null && !isStageVisited(stage.order)) {
    adapter.item(R.string.complete_stage).iconColor(R.drawable.ic_action_flag_dark).listen(new OnContextMenuClick(){
      @Override public boolean onContextMenuClick(      ArrayAdapter<?> adapter,      int itemId,      int pos,      boolean isChecked){
        markStageAsCompleted(stage);
        showCompleteStageFragment(mapActivity,stage,false);
        return true;
      }
    }
).reg();
  }
  adapter.item(R.string.context_menu_item_share_location).iconColor(R.drawable.ic_action_gshare_dark).listen(new OnContextMenuClick(){
    @Override public boolean onContextMenuClick(    ArrayAdapter<?> adapter,    int itemId,    int pos,    boolean isChecked){
      if (app.getLocationProvider().getLastKnownLocation() != null) {
        new ShareLocation(mapActivity).run();
      }
 else {
        Toast.makeText(app,R.string.unknown_location,Toast.LENGTH_LONG).show();
      }
      return true;
    }
  }
).reg();
}
