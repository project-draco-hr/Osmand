{
  SearchResultCollection quickRes=new SearchResultCollection();
  final int request=requestNumber.incrementAndGet();
  final SearchPhrase phrase=this.phrase.generateNewPhrase(text,searchSettings);
  this.phrase=phrase;
  quickRes.phrase=phrase;
  filterCurrentResults(quickRes.searchResults,phrase);
  System.out.println("> Search phrase " + phrase + " "+ quickRes.searchResults.size());
  singleThreadedExecutor.submit(new Runnable(){
    @Override public void run(){
      try {
        SearchResultMatcher rm=new SearchResultMatcher(matcher,request);
        if (rm.isCancelled()) {
          return;
        }
        Thread.sleep(200);
        searchInBackground(phrase,rm);
        if (!rm.isCancelled()) {
          sortSearchResults(phrase,rm.getRequestResults());
          System.out.println(">> Search phrase " + phrase + " "+ rm.getRequestResults().size());
          SearchResultCollection collection=new SearchResultCollection(rm.getRequestResults(),phrase);
          currentSearchResult=collection;
          if (onResultsComplete != null) {
            onResultsComplete.run();
          }
        }
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
    }
  }
);
  return quickRes;
}
