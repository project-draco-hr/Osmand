{
  boolean noAnimationLeft;
synchronized (mAnimationLock) {
    --mDismissAnimationRefCount;
    mAnimatedViews.remove(dismissView);
    noAnimationLeft=mDismissAnimationRefCount == 0;
  }
  if (noAnimationLeft) {
    for (    PendingDismissData dismiss : mPendingDismisses) {
      if (mUndoStyle == UndoStyle.SINGLE_POPUP) {
        for (        Undoable undoable : mUndoActions) {
          undoable.discard();
        }
        mUndoActions.clear();
      }
      Undoable undoable=mCallbacks.onDismiss(dismiss.position);
      if (undoable != null) {
        mUndoActions.add(undoable);
      }
      mValidDelayedMsgId++;
    }
    if (!mUndoActions.isEmpty()) {
      changePopupText();
      changeButtonLabel();
      float yLocationOffset=mListView.getResources().getDimension(R.dimen.undo_bottom_offset);
      mUndoPopup.setWidth((int)Math.min(mScreenDensity * 400,mListView.getWidth() * 0.9f));
      mUndoPopup.showAtLocation(mListView,Gravity.CENTER_HORIZONTAL | Gravity.BOTTOM,0,(int)yLocationOffset);
      if (!mTouchBeforeAutoHide) {
        mHideUndoHandler.sendMessageDelayed(mHideUndoHandler.obtainMessage(mValidDelayedMsgId),mUndoHideDelay);
      }
    }
    ViewGroup.LayoutParams lp;
    for (    PendingDismissData pendingDismiss : mPendingDismisses) {
      ViewCompat.setAlpha(pendingDismiss.view,1f);
      ViewCompat.setTranslationX(pendingDismiss.view,0);
      lp=pendingDismiss.childView.getLayoutParams();
      lp.height=originalLayoutHeight;
      pendingDismiss.childView.setLayoutParams(lp);
    }
    mPendingDismisses.clear();
  }
}
