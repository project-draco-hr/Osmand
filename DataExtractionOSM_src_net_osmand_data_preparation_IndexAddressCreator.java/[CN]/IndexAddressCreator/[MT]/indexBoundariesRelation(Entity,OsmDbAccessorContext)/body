{
  if (isBoundary(e) && hasNeededCityAdminLevel(e)) {
    Boundary boundary=extractBoundary(e,ctx);
    if (boundary != null && boundary.getCenterPoint() != null) {
      LatLon point=boundary.getCenterPoint();
      boolean cityFound=false;
      boolean containsCityInside=false;
      for (      City c : cityManager.getClosestObjects(point.getLatitude(),point.getLongitude(),3)) {
        if (boundary.containsPoint(c.getLocation())) {
          if (boundary.getName() == null || boundary.getName().equalsIgnoreCase(c.getName())) {
            putCityBoundary(boundary,c);
            cityFound=true;
            containsCityInside=true;
          }
        }
      }
      if (!cityFound) {
        for (        City c : cityVillageManager.getClosestObjects(point.getLatitude(),point.getLongitude(),3)) {
          if (boundary.containsPoint(c.getLocation())) {
            if (boundary.getName() == null || boundary.getName().equalsIgnoreCase(c.getName())) {
              putCityBoundary(boundary,c);
              cityFound=true;
            }
          }
        }
      }
      if (!cityFound && boundary.getName() != null) {
        City nCity=new City(containsCityInside ? CityType.CITY : CityType.SUBURB);
        nCity.setLocation(point.getLatitude(),point.getLongitude());
        nCity.setId(-boundary.getBoundaryId());
        nCity.setName(boundary.getName());
        putCityBoundary(boundary,nCity);
        cityVillageManager.registerObject(point.getLatitude(),point.getLongitude(),nCity);
        writeCity(nCity);
        if (pStatements.get(addressCityStat) > 0) {
          addressCityStat.executeBatch();
          pStatements.put(addressCityStat,0);
        }
      }
    }
  }
 else   if (isBoundary(e) && hasGreaterCityAdminLevel(Integer.parseInt(cityAdminLevel),e)) {
    Boundary boundary=extractBoundary(e,ctx);
    if (boundary != null && boundary.getCenterPoint() != null) {
      LatLon point=boundary.getCenterPoint();
      for (      City c : cityManager.getClosestObjects(point.getLatitude(),point.getLongitude(),3)) {
        Boundary cityB=cityBoundaries.get(c);
        if (cityB == null) {
          cityB=new Boundary();
          putCityBoundary(cityB,c);
        }
        cityB.addSubBoundary(boundary);
        break;
      }
    }
  }
}
