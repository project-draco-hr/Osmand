{
  if (name == null || location == null) {
    return Collections.emptySet();
  }
  name=normalizeStreetName(name);
  Set<City> result=new LinkedHashSet<City>();
  List<City> nearestObjects=new ArrayList<City>();
  nearestObjects.addAll(cityManager.getClosestObjects(location.getLatitude(),location.getLongitude()));
  nearestObjects.addAll(cityVillageManager.getClosestObjects(location.getLatitude(),location.getLongitude()));
  for (  City c : nearestObjects) {
    Boundary boundary=cityBoundaries.get(c);
    if (isInNames.contains(c.getName()) || (boundary != null && boundary.containsPoint(location))) {
      result.add(c);
    }
  }
  if (result.isEmpty()) {
    City city=getClosestCity(location,isInNames,nearestObjects);
    if (city != null) {
      result.add(city);
    }
  }
  return registerStreetInCities(name,nameEn,location,result);
}
