{
  AsyncTask<Void,String,List<String>> task=new AsyncTask<Void,String,List<String>>(){
    @Override protected void onPreExecute(){
      super.onPreExecute();
      setSupportProgressBarIndeterminateVisibility(true);
    }
    @Override protected List<String> doInBackground(    Void... params){
      return getMyApplication().getResourceManager().reloadIndexes(IProgress.EMPTY_PROGRESS,new ArrayList<String>());
    }
    @Override protected void onPostExecute(    List<String> warnings){
      setSupportProgressBarIndeterminateVisibility(false);
      if (!warnings.isEmpty()) {
        final StringBuilder b=new StringBuilder();
        boolean f=true;
        for (        String w : warnings) {
          if (f) {
            f=false;
          }
 else {
            b.append('\n');
          }
          b.append(w);
        }
        AccessibleToast.makeText(DownloadActivity.this,b.toString(),Toast.LENGTH_LONG).show();
      }
      newDownloadIndexes();
    }
  }
;
  task.execute();
}
