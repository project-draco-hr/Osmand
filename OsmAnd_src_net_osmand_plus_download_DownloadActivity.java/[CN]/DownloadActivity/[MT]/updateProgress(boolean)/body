{
  BasicProgressAsyncTask<?,?,?> basicProgressAsyncTask=DownloadActivity.downloadListIndexThread.getCurrentRunningTask();
  final boolean isFinished=basicProgressAsyncTask == null || basicProgressAsyncTask.getStatus() == AsyncTask.Status.FINISHED;
  if (onProgressUpdateListener != null) {
    if (isFinished) {
      onProgressUpdateListener.onFinished();
    }
 else {
      onProgressUpdateListener.onProgressUpdate(basicProgressAsyncTask.getProgressPercentage(),downloadListIndexThread.getDownloads());
    }
  }
  if (progressView == null) {
    return;
  }
  if (updateOnlyProgress) {
    if (!basicProgressAsyncTask.isIndeterminate()) {
      progressPercent.setText(basicProgressAsyncTask.getProgressPercentage() + "%");
      determinateProgressBar.setProgress(basicProgressAsyncTask.getProgressPercentage());
    }
  }
 else {
    progressView.setVisibility(!isFinished ? View.VISIBLE : View.GONE);
    if (!isFinished) {
      boolean indeterminate=basicProgressAsyncTask.isIndeterminate();
      indeterminateProgressBar.setVisibility(!indeterminate ? View.GONE : View.VISIBLE);
      determinateProgressBar.setVisibility(indeterminate ? View.GONE : View.VISIBLE);
      cancel.setVisibility(indeterminate ? View.GONE : View.VISIBLE);
      progressPercent.setVisibility(indeterminate ? View.GONE : View.VISIBLE);
      progressMessage.setText(basicProgressAsyncTask.getDescription());
      if (!indeterminate) {
        progressPercent.setText(basicProgressAsyncTask.getProgressPercentage() + "%");
        determinateProgressBar.setProgress(basicProgressAsyncTask.getProgressPercentage());
      }
    }
    updateDownloadButton();
  }
}
