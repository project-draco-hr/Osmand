{
  int count=0;
  int sz=0;
  String s="";
  for (  IndexItem i : DownloadActivity.downloadListIndexThread.getCachedIndexFiles()) {
    for (    String map : maps) {
      if ((i.getFileName().equals(map + ".obf.zip") || i.getFileName().equals(map + "_" + IndexConstants.BINARY_MAP_VERSION+ ".obf.zip")) && i.getType() == DownloadActivityType.NORMAL_FILE) {
        final List<DownloadEntry> de=i.createDownloadEntry(getMyApplication(),i.getType(),new ArrayList<DownloadEntry>(1));
        for (        DownloadEntry d : de) {
          count++;
          sz+=d.sizeMB;
        }
        if (s.length() > 0) {
          s+=", ";
        }
        s+=i.getVisibleName(getMyApplication(),getMyApplication().getResourceManager().getOsmandRegions());
        getEntriesToDownload().put(i,de);
      }
    }
  }
  if (count > 0) {
    AlertDialog.Builder builder=new AlertDialog.Builder(this);
    builder.setMessage(getString(R.string.download_additional_maps,s,sz));
    builder.setPositiveButton(R.string.default_buttons_yes,new DialogInterface.OnClickListener(){
      @Override public void onClick(      DialogInterface dialog,      int which){
        downloadFilesCheckInternet();
      }
    }
);
    builder.setNegativeButton(R.string.default_buttons_no,new DialogInterface.OnClickListener(){
      @Override public void onClick(      DialogInterface dialog,      int which){
        getEntriesToDownload().clear();
      }
    }
);
    builder.setOnCancelListener(new DialogInterface.OnCancelListener(){
      @Override public void onCancel(      DialogInterface dialog){
        getEntriesToDownload().clear();
      }
    }
);
    builder.show();
  }
}
