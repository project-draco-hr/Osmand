{
  BasicProgressAsyncTask<?,?,?,?> basicProgressAsyncTask=ctx.getDownloadThread().getCurrentRunningTask();
  final boolean isFinished=basicProgressAsyncTask == null || basicProgressAsyncTask.getStatus() == AsyncTask.Status.FINISHED;
  if (isFinished) {
    downloadProgressLayout.setOnClickListener(null);
    updateDescriptionTextWithSize(ctx,downloadProgressLayout);
    if (ctx.getCurrentTab() == UPDATES_TAB_NUMBER || !showSpace) {
      downloadProgressLayout.setVisibility(View.GONE);
    }
    updateFreeVersionBanner();
  }
 else {
    boolean indeterminate=basicProgressAsyncTask.isIndeterminate();
    String message=basicProgressAsyncTask.getDescription();
    int percent=basicProgressAsyncTask.getProgressPercentage();
    setMinimizedFreeVersionBanner(true);
    updateAvailableDownloads();
    downloadProgressLayout.setVisibility(View.VISIBLE);
    downloadProgressLayout.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        new ActiveDownloadsDialogFragment().show(ctx.getSupportFragmentManager(),"dialog");
      }
    }
);
    progressBar.setIndeterminate(indeterminate);
    if (indeterminate) {
      leftTextView.setText(message);
      rightTextView.setText(null);
    }
 else {
      progressBar.setProgress(percent);
      leftTextView.setText(message);
      rightTextView.setText(percent + "%");
    }
  }
}
