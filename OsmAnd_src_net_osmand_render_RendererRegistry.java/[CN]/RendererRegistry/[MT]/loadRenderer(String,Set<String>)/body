{
  InputStream is=null;
  if (externalRenderers.containsKey(name)) {
    is=new FileInputStream(externalRenderers.get(name));
  }
 else   if (internalRenderers.containsKey(name)) {
    is=OsmandRenderingRulesParser.class.getResourceAsStream("default.render.xml");
  }
 else {
    throw new IllegalArgumentException("Not found " + name);
  }
  BaseOsmandRender b=new BaseOsmandRender();
  b.init(is);
  loadedRenderers.add(name);
  List<BaseOsmandRender> dependencies=new ArrayList<BaseOsmandRender>();
  for (  String s : b.getDepends()) {
    if (loadedRenderers.contains(s)) {
      log.warn("Circular dependencies found " + name);
    }
 else {
      BaseOsmandRender dep=getRenderer(s,loadedRenderers);
      if (dep == null) {
        log.warn("Dependent renderer not found : " + name);
      }
 else {
        dependencies.add(dep);
      }
    }
  }
  b.setDependRenderers(dependencies);
  renderers.put(name,b);
  return b;
}
