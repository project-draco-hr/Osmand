{
  culled=resampleTrack(rs.points,segmentSize);
  if (!isCancelled() && !culled.isEmpty()) {
    WptPt lastPt=culled.get(0);
    lastPt.speed=0;
    int size=culled.size();
    for (int i=1; i < size; i++) {
      WptPt pt=culled.get(i);
      double delta=pt.time - lastPt.time;
      pt.speed=delta > 0 ? MapUtils.getDistance(pt.getLatitude(),pt.getLongitude(),lastPt.getLatitude(),lastPt.getLongitude()) / delta : 0;
      lastPt=pt;
    }
    if (size > 1) {
      culled.get(0).speed=culled.get(1).speed;
    }
    double max=lastPt.speed;
    double min=max;
    int halfC=Algorithms.getRainbowColor(0.5);
    for (    WptPt pt : culled) {
      max=Math.max(max,pt.speed);
      min=Math.min(min,pt.speed);
      pt.colourARGB=halfC;
    }
    double speedRange=max - min;
    if (speedRange > 0) {
      for (      WptPt pt : culled)       pt.colourARGB=Algorithms.getRainbowColor((pt.speed - min) / speedRange);
    }
  }
  return null;
}
