{
  Map<String,String> cookies=new HashMap<String,String>();
  cookies.put("HSID",ggtokens.getHsid());
  cookies.put("SID",ggtokens.getSid());
  StringBuilder cookieString=new StringBuilder();
  int size=cookies.size();
  for (  String c : cookies.keySet()) {
    size--;
    cookieString.append(c).append("=").append(cookies.get(c));
    if (size > 0) {
      cookieString.append("; ");
    }
  }
  String urlText="http://code.google.com/p/osmand/downloads/delete.do?name=" + fileName;
  log.info("Url to delete :" + urlText);
  StringBuilder requestBody=new StringBuilder();
  requestBody.append("token=").append(ggtokens.getToken()).append("&pagegen=").append(ggtokens.getPagegen()).append("&filename=").append(fileName).append("&delete=Delete+download");
  log.info("Request body : " + requestBody);
  URL url=new URL(urlText);
  HttpURLConnection connection=(HttpURLConnection)url.openConnection();
  connection.setRequestProperty("Cookie",cookieString.toString());
  connection.setConnectTimeout(15000);
  connection.setRequestMethod("POST");
  connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
  connection.setRequestProperty("Content-Length",requestBody.length() + "");
  connection.setDoInput(true);
  connection.setDoOutput(true);
  connection.connect();
  OutputStream out=connection.getOutputStream();
  if (requestBody != null) {
    BufferedWriter bwr=new BufferedWriter(new OutputStreamWriter(out,"UTF-8"),1024);
    bwr.write(requestBody.toString());
    bwr.flush();
    bwr.close();
  }
  log.info("Response : " + connection.getResponseMessage());
  StringBuilder responseBody=new StringBuilder();
  InputStream i=connection.getInputStream();
  if (i != null) {
    BufferedReader in=new BufferedReader(new InputStreamReader(i,"UTF-8"),256);
    String s;
    boolean f=true;
    while ((s=in.readLine()) != null) {
      if (!f) {
        responseBody.append("\n");
      }
 else {
        f=false;
      }
      responseBody.append(s);
    }
  }
  return responseBody.toString();
}
