{
  IconsCache iconsCache=((MapActivity)getActivity()).getMyApplication().getIconsCache();
  View view=inflater.inflate(R.layout.fragment_edit_poi_normal,container,false);
  ImageView streetImageView=(ImageView)view.findViewById(R.id.streetImageView);
  streetImageView.setImageDrawable(iconsCache.getContentIcon(R.drawable.ic_action_street_name));
  ImageView houseNumberImageView=(ImageView)view.findViewById(R.id.houseNumberImageView);
  houseNumberImageView.setImageDrawable(iconsCache.getContentIcon(R.drawable.ic_action_building_number));
  ImageView phoneImageView=(ImageView)view.findViewById(R.id.phoneImageView);
  phoneImageView.setImageDrawable(iconsCache.getContentIcon(R.drawable.ic_action_call_dark));
  ImageView webSiteImageView=(ImageView)view.findViewById(R.id.webSiteImageView);
  webSiteImageView.setImageDrawable(iconsCache.getContentIcon(R.drawable.ic_world_globe_dark));
  ImageView descriptionImageView=(ImageView)view.findViewById(R.id.descriptionImageView);
  descriptionImageView.setImageDrawable(iconsCache.getContentIcon(R.drawable.ic_action_description));
  streetEditText=(EditText)view.findViewById(R.id.streetEditText);
  streetEditText.addTextChangedListener(new MyOnFocusChangeListener(getData(),OSMSettings.OSMTagKey.ADDR_STREET.getValue()));
  houseNumberEditText=(EditText)view.findViewById(R.id.houseNumberEditText);
  houseNumberEditText.addTextChangedListener(new MyOnFocusChangeListener(getData(),OSMSettings.OSMTagKey.ADDR_HOUSE_NUMBER.getValue()));
  phoneEditText=(EditText)view.findViewById(R.id.phoneEditText);
  phoneEditText.addTextChangedListener(new MyOnFocusChangeListener(getData(),OSMSettings.OSMTagKey.PHONE.getValue()));
  webSiteEditText=(EditText)view.findViewById(R.id.webSiteEditText);
  webSiteEditText.addTextChangedListener(new MyOnFocusChangeListener(getData(),OSMSettings.OSMTagKey.WEBSITE.getValue()));
  descriptionEditText=(EditText)view.findViewById(R.id.descriptionEditText);
  descriptionEditText.addTextChangedListener(new MyOnFocusChangeListener(getData(),OSMSettings.OSMTagKey.DESCRIPTION.getValue()));
  Button addOpeningHoursButton=(Button)view.findViewById(R.id.addOpeningHoursButton);
  addOpeningHoursButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      BasicOpeningHourRule r=new BasicOpeningHourRule();
      OpeningHoursDaysDialogFragment fragment=OpeningHoursDaysDialogFragment.createInstance(r,-1);
      fragment.show(getChildFragmentManager(),"OpenTimeDialogFragment");
    }
  }
);
  LinearLayout openHoursContainer=(LinearLayout)view.findViewById(R.id.openHoursContainer);
  Drawable clockDrawable=iconsCache.getContentIcon(R.drawable.ic_action_time);
  Drawable deleteDrawable=iconsCache.getContentIcon(R.drawable.ic_action_remove_dark);
  if (savedInstanceState != null && savedInstanceState.containsKey(OPENING_HOURS)) {
    mOpeningHoursAdapter=new OpeningHoursAdapter((OpeningHoursParser.OpeningHours)savedInstanceState.getSerializable(OPENING_HOURS),openHoursContainer,getData(),clockDrawable,deleteDrawable);
    mOpeningHoursAdapter.updateViews();
  }
 else {
    mOpeningHoursAdapter=new OpeningHoursAdapter(new OpeningHoursParser.OpeningHours(),openHoursContainer,getData(),clockDrawable,deleteDrawable);
  }
  return view;
}
