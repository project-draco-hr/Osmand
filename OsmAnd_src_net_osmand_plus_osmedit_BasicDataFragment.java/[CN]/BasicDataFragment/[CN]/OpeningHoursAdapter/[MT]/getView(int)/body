{
  final View view=LayoutInflater.from(linearLayout.getContext()).inflate(R.layout.open_time_list_item,null,false);
  ImageView clockIconImageView=(ImageView)view.findViewById(R.id.clockIconImageView);
  clockIconImageView.setImageDrawable(clockDrawable);
  TextView daysTextView=(TextView)view.findViewById(R.id.daysTextView);
  View timeContainer=view.findViewById(R.id.timeContainer);
  if (openingHours.getRules().get(position) instanceof BasicOpeningHourRule) {
    final OpeningHoursParser.BasicOpeningHourRule rule=(BasicOpeningHourRule)openingHours.getRules().get(position);
    StringBuilder stringBuilder=new StringBuilder();
    rule.appendDaysString(stringBuilder);
    daysTextView.setText(stringBuilder.toString());
    TextView openingTextView=(TextView)view.findViewById(R.id.openingTextView);
    openingTextView.setText(Algorithms.formatDuration(rule.getStartTime() * 60));
    TextView closingTextView=(TextView)view.findViewById(R.id.closingTextView);
    closingTextView.setText(Algorithms.formatDuration(rule.getStartTime() * 60));
    timeContainer.setVisibility(View.VISIBLE);
    daysTextView.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        OpeningHoursDaysDialogFragment fragment=OpeningHoursDaysDialogFragment.createInstance(rule,position);
        fragment.show(getChildFragmentManager(),"OpenTimeDialogFragment");
      }
    }
);
    openingTextView.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        OpeningHoursHoursDialogFragment fragment=OpeningHoursHoursDialogFragment.createInstance(rule,position,true);
        fragment.show(getChildFragmentManager(),"OpeningHoursHoursDialogFragment");
      }
    }
);
    closingTextView.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        OpeningHoursHoursDialogFragment fragment=OpeningHoursHoursDialogFragment.createInstance(rule,position,false);
        fragment.show(getChildFragmentManager(),"OpeningHoursHoursDialogFragment");
      }
    }
);
  }
 else   if (openingHours.getRules().get(position) instanceof OpeningHoursParser.UnparseableRule) {
    daysTextView.setText(openingHours.getRules().get(position).toRuleString(false));
    timeContainer.setVisibility(View.GONE);
  }
  ImageButton deleteItemImageButton=(ImageButton)view.findViewById(R.id.deleteItemImageButton);
  deleteItemImageButton.setImageDrawable(deleteDrawable);
  deleteItemImageButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      openingHours.getRules().remove(position);
      updateViews();
    }
  }
);
  return view;
}
