{
  byte[] image;
  try {
    ResourceManager rm=app.getResourceManager();
    String tileFilename=rm.calculateTileId(tileSource,tileId.getX(),tileId.getY(),zoom.swigValue());
    final TileReadyCallback tileReadyCallback=new TileReadyCallback(tileSource,tileId.getX(),tileId.getY(),zoom.swigValue());
    rm.getMapTileDownloader().addDownloaderCallback(tileReadyCallback);
    while (rm.getTileImageForMapAsync(tileFilename,tileSource,tileId.getX(),tileId.getY(),zoom.swigValue(),true) == null) {
synchronized (tileReadyCallback.getSync()) {
        if (tileReadyCallback.isReady()) {
          break;
        }
        try {
          tileReadyCallback.getSync().wait(250);
        }
 catch (        InterruptedException e) {
        }
      }
    }
    rm.getMapTileDownloader().removeDownloaderCallback(tileReadyCallback);
    image=tileSource.getBytes(tileId.getX(),tileId.getY(),zoom.swigValue(),app.getAppPath(IndexConstants.TILES_INDEX_DIR).getAbsolutePath());
  }
 catch (  IOException e) {
    return SwigUtilities.emptyQByteArray();
  }
  if (image == null)   return SwigUtilities.emptyQByteArray();
  return SwigUtilities.createQByteArrayAsCopyOf(image);
}
