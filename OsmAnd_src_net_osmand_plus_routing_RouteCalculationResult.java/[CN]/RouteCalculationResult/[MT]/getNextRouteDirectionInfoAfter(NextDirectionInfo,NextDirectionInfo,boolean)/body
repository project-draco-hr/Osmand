{
  int dirInfo=prev.directionInfoInd;
  if (dirInfo < directions.size() && prev.directionInfo != null) {
    int dist=listDistance[prev.directionInfo.routePointOffset];
    int nextInd=dirInfo + 1;
    if (toSpeak) {
      while (nextInd < directions.size()) {
        RouteDirectionInfo i=directions.get(nextInd);
        if (i.getTurnType() != null && !i.getTurnType().isSkipToSpeak()) {
          break;
        }
        nextInd++;
      }
    }
    if (nextInd < directions.size()) {
      next.directionInfo=directions.get(nextInd);
      dist-=listDistance[directions.get(nextInd).routePointOffset];
    }
    if (intermediatePoints != null && nextIntermediate < intermediatePoints.length) {
      next.intermediatePoint=intermediatePoints[nextIntermediate] == nextInd;
    }
    next.distanceTo=dist;
    next.directionInfoInd=nextInd;
    return next;
  }
  next.directionInfoInd=-1;
  next.distanceTo=-1;
  next.directionInfo=null;
  return null;
}
