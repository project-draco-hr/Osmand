{
  int dirInfo=currentDirectionInfo;
  if (dirInfo < directions.size()) {
    int nextInd=dirInfo + 1;
    if (toSpeak) {
      while (nextInd < directions.size()) {
        RouteDirectionInfo i=directions.get(nextInd);
        if (i.getTurnType() != null && !i.getTurnType().isSkipToSpeak()) {
          break;
        }
        nextInd++;
      }
    }
    int dist=listDistance[currentRoute];
    if (fromLoc != null) {
      dist+=fromLoc.distanceTo(locations.get(currentRoute));
    }
    if (nextInd < directions.size()) {
      info.directionInfo=directions.get(nextInd);
      if (directions.get(nextInd).routePointOffset <= currentRoute && currentRoute <= directions.get(nextInd).routeEndPointOffset)       dist-=listDistance[directions.get(nextInd).routeEndPointOffset];
 else       dist-=listDistance[directions.get(nextInd).routePointOffset];
    }
    if (intermediatePoints != null && nextIntermediate < intermediatePoints.length) {
      info.intermediatePoint=intermediatePoints[nextIntermediate] == nextInd;
    }
    info.directionInfoInd=nextInd;
    info.distanceTo=dist;
    return info;
  }
  info.directionInfoInd=-1;
  info.distanceTo=-1;
  info.directionInfo=null;
  return null;
}
