{
  int time=0;
  if (currentDirectionInfo < directions.size()) {
    RouteDirectionInfo current=directions.get(currentDirectionInfo);
    time=current.afterLeftTime;
    int distanceToNextTurn=listDistance[currentRoute];
    if (currentDirectionInfo + 1 < directions.size()) {
      distanceToNextTurn-=listDistance[directions.get(currentDirectionInfo + 1).routePointOffset];
    }
    Location l=locations.get(currentRoute);
    if (fromLoc != null) {
      distanceToNextTurn+=fromLoc.distanceTo(l);
    }
    time+=distanceToNextTurn / current.getAverageSpeed();
  }
  return time;
}
