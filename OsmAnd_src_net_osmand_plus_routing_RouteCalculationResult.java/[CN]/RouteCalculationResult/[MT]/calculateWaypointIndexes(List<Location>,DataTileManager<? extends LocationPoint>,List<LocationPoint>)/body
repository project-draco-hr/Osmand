{
  if (waypointsTm == null || waypointsTm.isEmpty() || list.size() == 0) {
    return new int[0];
  }
  TIntArrayList ls=new TIntArrayList();
  Location loc=list.get(0);
  Location ploc=list.get(0);
  Set<LocationPoint> added=new HashSet<LocationPoint>();
  int prev31x=MapUtils.get31TileNumberX(loc.getLatitude());
  int prev31y=MapUtils.get31TileNumberY(loc.getLongitude());
  for (int j=1; j < list.size(); j++) {
    loc=list.get(j);
    int t31x=MapUtils.get31TileNumberX(loc.getLatitude());
    int t31y=MapUtils.get31TileNumberY(loc.getLongitude());
    List<? extends LocationPoint> ws=waypointsTm.getObjects(Math.min(prev31x,t31x) - Math.abs(t31x - prev31x) / 4,Math.min(prev31y,t31y) - Math.abs(t31y - prev31y) / 4,Math.max(prev31x,t31x) + Math.abs(t31x - prev31x) / 4,Math.max(prev31y,t31y) + Math.abs(t31y - prev31y) / 4);
    for (    LocationPoint w : ws) {
      if (added.contains(w)) {
        double ds=MapUtils.getOrthogonalDistance(w.getLatitude(),w.getLongitude(),ploc.getLatitude(),ploc.getLongitude(),loc.getLatitude(),loc.getLongitude());
        if (ds < 160) {
          ls.add(j);
          waypoints.add(w);
          added.add(w);
        }
      }
    }
    prev31x=t31x;
    prev31y=t31y;
    ploc=loc;
  }
  return ls.toArray();
}
