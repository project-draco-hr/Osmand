{
  Rect bounds=getBounds();
  final boolean isRtl=isLayoutRtl();
  final float arrowSize=lerp(mBarSize,mTopBottomArrowSize,mProgress);
  final float middleBarSize=lerp(mBarSize,mMiddleArrowSize,mProgress);
  final float middleBarCut=Math.round(lerp(0,mMaxCutForBarSize,mProgress));
  final float rotation=lerp(0,ARROW_HEAD_ANGLE,mProgress);
  final float canvasRotate=lerp(isRtl ? 0 : -180,isRtl ? 180 : 0,mProgress);
  final float arrowWidth=Math.round(arrowSize * Math.cos(rotation));
  final float arrowHeight=Math.round(arrowSize * Math.sin(rotation));
  mPath.rewind();
  final float topBottomBarOffset=lerp(mBarGap + mBarThickness,-mMaxCutForBarSize,mProgress);
  final float arrowEdge=-middleBarSize / 2;
  mPath.moveTo(arrowEdge + middleBarCut,0);
  mPath.rLineTo(middleBarSize - middleBarCut * 2,0);
  mPath.moveTo(arrowEdge,topBottomBarOffset);
  mPath.rLineTo(arrowWidth,arrowHeight);
  mPath.moveTo(arrowEdge,-topBottomBarOffset);
  mPath.rLineTo(arrowWidth,-arrowHeight);
  mPath.close();
  canvas.save();
  canvas.translate(bounds.centerX(),mCenterOffset);
  if (mSpin) {
    canvas.rotate(canvasRotate * ((mVerticalMirror ^ isRtl) ? -1 : 1));
  }
 else   if (isRtl) {
    canvas.rotate(180);
  }
  canvas.drawPath(mPath,mPaint);
  canvas.restore();
}
