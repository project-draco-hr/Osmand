{
  double dmax=-1;
  int index=-1;
  for (int i=start + 1; i <= end - 1; i++) {
    if (n.get(i) == null) {
      continue;
    }
    double d=orthogonalDistance(zoom,n.get(start),n.get(end),n.get(i));
    if (d > dmax) {
      dmax=d;
      index=i;
    }
  }
  if (dmax >= epsilon) {
    simplifyDouglasPeucker(n,zoom,epsilon,ints,start,index);
    simplifyDouglasPeucker(n,zoom,epsilon,ints,index,end);
  }
 else {
    ints.add(end);
  }
}
