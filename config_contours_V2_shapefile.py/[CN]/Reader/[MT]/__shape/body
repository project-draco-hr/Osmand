def __shape(self):
    'Returns the header info and geometry for a single shape.'
    f = self.__getFileObj(self.shp)
    record = _Shape()
    nParts = nPoints = zmin = zmax = mmin = mmax = None
    (recNum, recLength) = unpack('>2i', f.read(8))
    shapeType = unpack('<i', f.read(4))[0]
    record.shapeType = shapeType
    if (shapeType == 0):
        record.points = []
    elif (shapeType in (3, 5, 8, 13, 15, 18, 23, 25, 28, 31)):
        record.bbox = _Array('d', unpack('<4d', f.read(32)))
    if (shapeType in (3, 5, 13, 15, 23, 25, 31)):
        nParts = unpack('<i', f.read(4))[0]
    if (shapeType in (3, 5, 8, 13, 15, 23, 25, 31)):
        nPoints = unpack('<i', f.read(4))[0]
    if nParts:
        record.parts = _Array('i', unpack(('<%si' % nParts), f.read((nParts * 4))))
    if (shapeType == 31):
        record.partTypes = _Array('i', unpack(('<%si' % nParts), f.read((nParts * 4))))
    if nPoints:
        record.points = [_Array('d', unpack('<2d', f.read(16))) for p in range(nPoints)]
    if (shapeType in (13, 15, 18, 31)):
        (zmin, zmax) = unpack('<2d', f.read(16))
        record.z = _Array('d', unpack(('<%sd' % nPoints), f.read((nPoints * 8))))
    if (shapeType in (13, 15, 18, 23, 25, 28, 31)):
        (mmin, mmax) = unpack('<2d', f.read(16))
        record.m = []
        for m in _Array('d', unpack(('%sd' % nPoints), f.read((nPoints * 8)))):
            if (m > (-1e+39)):
                record.m.append(m)
            else:
                record.m.append(None)
    if (shapeType in (1, 11, 21)):
        record.points = [_Array('d', unpack('<2d', f.read(16)))]
    if (shapeType == 11):
        record.z = unpack('<d', f.read(8))
    if (shapeType in (11, 21)):
        record.m = unpack('<d', f.read(8))
    return record
