{
  if (type.isRoundAbout()) {
    return ctx.getString(R.string.route_roundabout,type.getExitOut());
  }
 else   if (type.getValue().equals(TurnType.C)) {
    return ctx.getString(R.string.route_head);
  }
 else   if (type.getValue().equals(TurnType.TSLL)) {
    return ctx.getString(R.string.route_tsll);
  }
 else   if (type.getValue().equals(TurnType.TL)) {
    return ctx.getString(R.string.route_tl);
  }
 else   if (type.getValue().equals(TurnType.TSHL)) {
    return ctx.getString(R.string.route_tshl);
  }
 else   if (type.getValue().equals(TurnType.TSLR)) {
    return ctx.getString(R.string.route_tslr);
  }
 else   if (type.getValue().equals(TurnType.TR)) {
    return ctx.getString(R.string.route_tr);
  }
 else   if (type.getValue().equals(TurnType.TSHR)) {
    return ctx.getString(R.string.route_tshr);
  }
 else   if (type.getValue().equals(TurnType.TU)) {
    return ctx.getString(R.string.route_tu);
  }
 else   if (type.getValue().equals(TurnType.TRU)) {
    return ctx.getString(R.string.route_tu);
  }
 else   if (type.getValue().equals(TurnType.KL)) {
    return ctx.getString(R.string.route_kl);
  }
 else   if (type.getValue().equals(TurnType.KR)) {
    return ctx.getString(R.string.route_kr);
  }
  return "";
}
