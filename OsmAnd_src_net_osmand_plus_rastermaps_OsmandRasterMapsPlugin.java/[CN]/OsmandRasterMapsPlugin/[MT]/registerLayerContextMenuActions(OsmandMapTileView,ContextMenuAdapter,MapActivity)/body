{
  final MapActivityLayers layers=mapActivity.getMapLayers();
  OnContextMenuClick listener=new OnContextMenuClick(){
    @Override public void onContextMenuClick(    int itemId,    int pos,    boolean isChecked,    DialogInterface dialog){
      if (itemId == R.string.layer_map) {
        dialog.dismiss();
        layers.selectMapLayer(mapView);
      }
 else       if (itemId == R.string.layer_overlay) {
        if (overlayLayer.getMap() != null) {
          settings.MAP_OVERLAY.set(null);
          updateMapLayers(mapView,null,layers);
          layers.getMapControlsLayer().hideTransparencyBar(settings.MAP_OVERLAY_TRANSPARENCY);
        }
 else {
          dialog.dismiss();
          selectMapOverlayLayer(mapView,settings.MAP_OVERLAY,settings.MAP_OVERLAY_TRANSPARENCY,mapActivity);
        }
      }
 else       if (itemId == R.string.layer_underlay) {
        if (underlayLayer.getMap() != null) {
          settings.MAP_UNDERLAY.set(null);
          updateMapLayers(mapView,null,layers);
          layers.getMapControlsLayer().hideTransparencyBar(settings.MAP_TRANSPARENCY);
        }
 else {
          dialog.dismiss();
          selectMapOverlayLayer(mapView,settings.MAP_UNDERLAY,settings.MAP_TRANSPARENCY,mapActivity);
        }
      }
    }
  }
;
  adapter.item(R.string.layer_map).icons(R.drawable.ic_action_wmap_dark,R.drawable.ic_action_wmap_light).listen(listener).position(0).reg();
  adapter.item(R.string.layer_overlay).selected(overlayLayer.getMap() != null ? 1 : 0).icons(R.drawable.ic_action_up_dark,R.drawable.ic_action_up_light).listen(listener).position(10).reg();
  adapter.item(R.string.layer_underlay).selected(underlayLayer.getMap() != null ? 1 : 0).icons(R.drawable.ic_action_down_dark,R.drawable.ic_action_down_light).listen(listener).position(11).reg();
}
