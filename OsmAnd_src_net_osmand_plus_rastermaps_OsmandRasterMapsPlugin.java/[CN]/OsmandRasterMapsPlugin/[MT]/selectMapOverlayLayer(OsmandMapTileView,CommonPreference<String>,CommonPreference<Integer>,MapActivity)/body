{
  final OsmandSettings settings=app.getSettings();
  final MapActivityLayers layers=activity.getMapLayers();
  Map<String,String> entriesMap=settings.getTileSourceEntries();
  final ArrayList<String> keys=new ArrayList<String>(entriesMap.keySet());
  Builder builder=new AlertDialog.Builder(activity);
  final String[] items=new String[entriesMap.size() + 1];
  int i=0;
  for (  String it : entriesMap.values()) {
    items[i++]=it;
  }
  items[i]=app.getString(R.string.install_more);
  builder.setSingleChoiceItems(items,-1,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      if (which == items.length - 1) {
        SettingsActivity.installMapLayers(activity,new ResultMatcher<TileSourceTemplate>(){
          TileSourceTemplate template=null;
          int count=0;
          @Override public boolean publish(          TileSourceTemplate object){
            if (object == null) {
              if (count == 1) {
                mapPref.set(template.getName());
                layers.getMapControlsLayer().showTransparencyBar(transparencyPref);
                updateMapLayers(mapView,mapPref,layers);
              }
 else {
                selectMapOverlayLayer(mapView,mapPref,transparencyPref,activity);
              }
            }
 else {
              count++;
              template=object;
            }
            return false;
          }
          @Override public boolean isCancelled(){
            return false;
          }
        }
);
      }
 else {
        mapPref.set(keys.get(which));
        layers.getMapControlsLayer().showTransparencyBar(transparencyPref);
        updateMapLayers(mapView,mapPref,layers);
      }
      dialog.dismiss();
    }
  }
);
  builder.show();
}
