{
  final OsmandSettings settings=getMyApplication().getSettings();
  LatLon location=new LatLon(point.getLatitude(),point.getLongitude());
  final PopupMenu optionsMenu=new PopupMenu(getActivity(),view);
  DirectionsDialogs.createDirectionActionsPopUpMenu(optionsMenu,location,point,new PointDescription(PointDescription.POINT_TYPE_FAVORITE,point.getName()),settings.getLastKnownMapZoom(),getActivity(),true,false);
  MenuItem item=optionsMenu.getMenu().add(R.string.favourites_context_menu_edit).setIcon(getMyApplication().getIconsCache().getContentIcon(R.drawable.ic_action_edit_dark));
  item.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener(){
    @Override public boolean onMenuItemClick(    MenuItem item){
      editPoint(getActivity(),point,new Runnable(){
        public void run(){
          favouritesAdapter.synchronizeGroups();
        }
      }
);
      return true;
    }
  }
);
  item=optionsMenu.getMenu().add(R.string.favourites_context_menu_delete).setIcon(getMyApplication().getIconsCache().getContentIcon(R.drawable.ic_action_delete_dark));
  item.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener(){
    @Override public boolean onMenuItemClick(    MenuItem item){
      deletePoint(point);
      return true;
    }
  }
);
  optionsMenu.show();
}
