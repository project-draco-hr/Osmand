{
  GPXFile file=builder.file;
  boolean reverse=builder.reverse;
  passWholeRoute=builder.passWholeRoute;
  calculateOsmAndRouteParts=builder.calculateOsmAndRouteParts;
  useIntermediatePointsRTE=builder.useIntermediatePointsRTE;
  builder.calculateOsmAndRoute=false;
  if (!file.points.isEmpty()) {
    wpt=new ArrayList<LocationPoint>(file.points);
  }
  if (file.isCloudmadeRouteFile() || OSMAND_ROUTER.equals(file.author)) {
    directions=parseOsmAndGPXRoute(points,file,OSMAND_ROUTER.equals(file.author),builder.leftSide,10);
    if (reverse) {
      directions=null;
      Collections.reverse(points);
    }
  }
 else {
    if (!useIntermediatePointsRTE) {
      for (      Track tr : file.tracks) {
        for (        TrkSegment tkSeg : tr.segments) {
          for (          WptPt pt : tkSeg.points) {
            points.add(createLocation(pt));
          }
        }
      }
    }
    if (points.isEmpty()) {
      for (      Route rte : file.routes) {
        for (        WptPt pt : rte.points) {
          points.add(createLocation(pt));
        }
      }
    }
    if (reverse) {
      Collections.reverse(points);
    }
  }
  return this;
}
