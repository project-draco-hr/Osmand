{
  List<Location> res=new ArrayList<Location>();
  String rpref="Fastest";
  if (ApplicationMode.PEDESTRIAN == mode) {
    rpref="Pedestrian";
  }
 else   if (ApplicationMode.BICYCLE == mode) {
    rpref="Bicycle";
  }
 else   if (!fast) {
    rpref="Shortest";
  }
  DocumentBuilder dom=DocumentBuilderFactory.newInstance().newDocumentBuilder();
  Document doc=dom.newDocument();
  Element e=(Element)doc.appendChild(doc.createElement("xls:XLS"));
  e.setAttribute("xmlns:xls","http://www.opengis.net/xls");
  e.setAttribute("xmlns:sch","http://www.ascc.net/xml/schematron");
  e.setAttribute("xmlns:gml","http://www.opengis.net/gml");
  e.setAttribute("xmlns:xlink","http://www.w3.org/1999/xlink");
  e.setAttribute("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
  e.setAttribute("xsi:schemaLocation","http://schemas.opengis.net/ols/1.1.0/RouteService.xsd");
  e.setAttribute("xls:lang","de");
  e.setAttribute("version","1.1");
  e.appendChild(doc.createElement("xls:RequestHeader"));
  e=(Element)e.appendChild(doc.createElement("xls:Request"));
  e.setAttribute("methodName","RouteRequest");
  e.setAttribute("requestID","123456789");
  e.setAttribute("version","1.1");
  e=(Element)e.appendChild(doc.createElement("xls:DetermineRouteRequest"));
  e.setAttribute("distanceUnit","KM");
  e=(Element)e.appendChild(doc.createElement("xls:RoutePlan"));
  e=(Element)e.appendChild(doc.createElement("xls:RoutePreference"));
  e.appendChild(doc.createTextNode(rpref));
  Element wpl=(Element)e.getParentNode().appendChild(doc.createElement("xls:WayPointList"));
  e=(Element)wpl.appendChild(doc.createElement("xls:StartPoint"));
  e=(Element)e.appendChild(doc.createElement("xls:Position"));
  e=(Element)e.appendChild(doc.createElement("gml:Point"));
  e.setAttribute("srsName","EPSG:4326");
  e=(Element)e.appendChild(doc.createElement("gml:pos"));
  e.appendChild(doc.createTextNode(start.getLongitude() + " " + start.getLatitude()));
  e=(Element)wpl.appendChild(doc.createElement("xls:EndPoint"));
  e=(Element)e.appendChild(doc.createElement("xls:Position"));
  e=(Element)e.appendChild(doc.createElement("gml:Point"));
  e.setAttribute("srsName","EPSG:4326");
  e=(Element)e.appendChild(doc.createElement("gml:pos"));
  e.appendChild(doc.createTextNode(end.getLongitude() + " " + end.getLatitude()));
  e=(Element)wpl.getParentNode().appendChild(doc.createElement("xls:AvoidList"));
  Element dRR=(Element)wpl.getParentNode().getParentNode();
  e=(Element)dRR.appendChild(doc.createElement("xls:RouteGeometryRequest"));
  StringBuilder uri=new StringBuilder();
  uri.append("http://openls.geog.uni-heidelberg.de/osm/eu/routing");
  URL url=new URL(uri.toString());
  URLConnection connection=url.openConnection();
  connection.setDoOutput(true);
  try {
    TransformerFactory.newInstance().newTransformer().transform(new DOMSource(doc),new StreamResult(connection.getOutputStream()));
  }
 catch (  Exception te) {
  }
  dom=DocumentBuilderFactory.newInstance().newDocumentBuilder();
  doc=dom.parse(new InputSource(new InputStreamReader(connection.getInputStream())));
  NodeList list=doc.getElementsByTagName("xls:RouteGeometry");
  for (int i=0; i < list.getLength(); i++) {
    NodeList poslist=((Element)list.item(i)).getElementsByTagName("gml:pos");
    for (int j=0; j < poslist.getLength(); j++) {
      String text=poslist.item(j).getFirstChild().getNodeValue();
      int s=text.indexOf(' ');
      try {
        double lon=Double.parseDouble(text.substring(0,s));
        double lat=Double.parseDouble(text.substring(s + 1));
        Location l=new Location("router");
        l.setLatitude(lat);
        l.setLongitude(lon);
        res.add(l);
      }
 catch (      NumberFormatException nfe) {
      }
    }
  }
  if (list.getLength() == 0) {
    if (doc.getChildNodes().getLength() == 1) {
      Node item=doc.getChildNodes().item(0);
      return new RouteCalculationResult(item.getNodeValue());
    }
  }
  return new RouteCalculationResult(res,null,start,end,null);
}
