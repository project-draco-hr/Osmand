{
  List<Location> res=new ArrayList<Location>();
  StringBuilder uri=new StringBuilder();
  String scheme="";
  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.GINGERBREAD)   scheme="https";
 else   scheme="http";
  uri.append(scheme + "://router.project-osrm.org/viaroute?alt=false");
  uri.append("&loc=").append(String.valueOf(params.start.getLatitude()));
  uri.append(",").append(String.valueOf(params.start.getLongitude()));
  if (params.intermediates != null && params.intermediates.size() > 0) {
    for (    LatLon il : params.intermediates) {
      appendOSRMLoc(uri,il);
    }
  }
  appendOSRMLoc(uri,params.end);
  uri.append("&output=gpx");
  log.info("URL route " + uri);
  URL url=new URL(uri.toString());
  URLConnection connection=url.openConnection();
  connection.setRequestProperty("User-Agent",Version.getFullVersion(params.ctx));
  final InputStream inputStream=connection.getInputStream();
  GPXFile gpxFile=GPXUtilities.loadGPXFile(params.ctx,inputStream);
  try {
    inputStream.close();
  }
 catch (  IOException e) {
  }
  if (gpxFile.routes.isEmpty()) {
    return new RouteCalculationResult("Route is empty");
  }
  for (  WptPt pt : gpxFile.routes.get(0).points) {
    res.add(createLocation(pt));
  }
  params.intermediates=null;
  return new RouteCalculationResult(res,null,params,null);
}
