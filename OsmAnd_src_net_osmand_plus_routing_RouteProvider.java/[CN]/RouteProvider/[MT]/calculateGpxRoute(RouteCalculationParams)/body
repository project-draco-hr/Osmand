{
  RouteCalculationResult res;
  GPXRouteParams params=pars.gpxRoute;
  List<Location> gpxRoute=params.points;
  int[] startI=new int[]{0};
  int[] endI=new int[]{gpxRoute.size()};
  ArrayList<Location> sublist=findGpxLocations(pars,startI,endI);
  pars.intermediates=null;
  if (params.directions == null) {
    res=new RouteCalculationResult(sublist,null,pars,params.wpt);
  }
 else {
    List<RouteDirectionInfo> subdirections=new ArrayList<RouteDirectionInfo>();
    for (    RouteDirectionInfo info : params.directions) {
      if (info.routePointOffset >= startI[0] && info.routePointOffset < endI[0]) {
        RouteDirectionInfo ch=new RouteDirectionInfo(info.getAverageSpeed(),info.getTurnType());
        ch.routePointOffset=info.routePointOffset - startI[0];
        ch.setDescriptionRoute(info.getDescriptionRoutePart());
        ch.distance=0;
        ch.afterLeftTime=0;
        subdirections.add(ch);
      }
    }
    res=new RouteCalculationResult(sublist,subdirections,pars,params.wpt);
  }
  return res;
}
