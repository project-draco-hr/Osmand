{
  List<Location> res=new ArrayList<Location>();
  List<RouteDirectionInfo> directions=null;
  StringBuilder uri=new StringBuilder();
  uri.append("http://routes.cloudmade.com/A6421860EBB04234AB5EF2D049F2CD8F/api/0.3/");
  uri.append(params.start.getLatitude() + "").append(",");
  uri.append(params.start.getLongitude() + "").append(",");
  if (params.intermediates != null && params.intermediates.size() > 0) {
    uri.append("[");
    boolean first=true;
    for (    LatLon il : params.intermediates) {
      if (!first) {
        uri.append(",");
      }
 else {
        first=false;
      }
      uri.append(il.getLatitude() + "").append(",");
      uri.append(il.getLongitude() + "");
    }
    uri.append("],");
  }
  uri.append(params.end.getLatitude() + "").append(",");
  uri.append(params.end.getLongitude() + "").append("/");
  float speed=1.5f;
  if (ApplicationMode.PEDESTRIAN == params.mode) {
    uri.append("foot.gpx");
  }
 else   if (ApplicationMode.BICYCLE == params.mode) {
    speed=4.2f;
    uri.append("bicycle.gpx");
  }
 else {
    speed=15.3f;
    if (params.fast) {
      uri.append("car.gpx");
    }
 else {
      uri.append("car/shortest.gpx");
    }
  }
  uri.append("?lang=").append(Locale.getDefault().getLanguage());
  log.info("URL route " + uri);
  URL url=new URL(uri.toString());
  URLConnection connection=url.openConnection();
  connection.setRequestProperty("User-Agent",Version.getFullVersion(params.ctx));
  GPXFile gpxFile=GPXUtilities.loadGPXFile(params.ctx,connection.getInputStream(),false);
  directions=parseCloudmadeRoute(res,gpxFile,false,params.leftSide,speed);
  return new RouteCalculationResult(res,directions,params,null);
}
