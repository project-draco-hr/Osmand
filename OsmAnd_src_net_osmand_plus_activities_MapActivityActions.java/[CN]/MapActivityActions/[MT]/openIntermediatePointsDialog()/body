{
  Builder builder=new AlertDialog.Builder(mapActivity);
  final ArrayList<LatLon> intermediates=new ArrayList<LatLon>(mapActivity.getIntermediatePoints());
  final int targetPointInd=mapActivity.getPointToNavigate() == null ? -1 : intermediates.size();
  if (mapActivity.getPointToNavigate() != null) {
    intermediates.add(mapActivity.getPointToNavigate());
  }
  final List<String> intermediateNames=new ArrayList<String>();
  double lat=mapActivity.getMapView().getLatitude();
  double lon=mapActivity.getMapView().getLongitude();
  for (int i=0; i < intermediates.size(); i++) {
    double meters=MapUtils.getDistance(intermediates.get(i),lat,lon);
    intermediateNames.add((i + 1) + ". " + mapActivity.getString(R.string.target_point,OsmAndFormatter.getFormattedDistance((float)meters,mapActivity))+ "");
  }
  final boolean[] checkedIntermediates=new boolean[intermediateNames.size()];
  ListAdapter listadapter=new ArrayAdapter<String>(mapActivity,R.layout.layers_list_activity_item,R.id.title,intermediateNames){
    @Override public View getView(    final int position,    View convertView,    ViewGroup parent){
      View v=super.getView(position,convertView,parent);
      TextView tv=(TextView)v.findViewById(R.id.title);
      tv.setText(intermediateNames.get(position));
      checkedIntermediates[position]=true;
      if (position == targetPointInd) {
        tv.setCompoundDrawablesWithIntrinsicBounds(R.drawable.list_view_set_destination,0,0,0);
        final CheckBox ch=((CheckBox)v.findViewById(R.id.check_item));
        ch.setVisibility(View.GONE);
      }
 else {
        tv.setCompoundDrawablesWithIntrinsicBounds(R.drawable.list_view_set_intermediate,0,0,0);
        final CheckBox ch=((CheckBox)v.findViewById(R.id.check_item));
        ch.setVisibility(View.VISIBLE);
        ch.setChecked(true);
        ch.setOnCheckedChangeListener(new OnCheckedChangeListener(){
          @Override public void onCheckedChanged(          CompoundButton buttonView,          boolean isChecked){
            checkedIntermediates[position]=isChecked;
          }
        }
);
      }
      return v;
    }
  }
;
  builder.setAdapter(listadapter,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      AnimateDraggingMapThread thread=mapActivity.getMapView().getAnimatedDraggingThread();
      LatLon pointToNavigate=intermediates.get(which);
      float fZoom=mapActivity.getMapView().getFloatZoom() < 15 ? 15 : mapActivity.getMapView().getFloatZoom();
      thread.startMoving(pointToNavigate.getLatitude(),pointToNavigate.getLongitude(),fZoom,true);
    }
  }
);
  builder.setPositiveButton(R.string.default_buttons_ok,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      int cnt=0;
      for (int i=checkedIntermediates.length - 1; i >= 0; i--) {
        if (!checkedIntermediates[i]) {
          cnt++;
        }
      }
      if (cnt > 0) {
        for (int i=checkedIntermediates.length - 1; i >= 0; i--) {
          if (!checkedIntermediates[i]) {
            cnt--;
            mapActivity.removeIntermediatePoint(cnt == 0,i);
            if (cnt == 0) {
              mapActivity.getMapView().refreshMap();
            }
          }
        }
      }
    }
  }
);
  builder.show();
}
