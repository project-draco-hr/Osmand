{
  final OsmandMapTileView mapView=mapActivity.getMapView();
  optionsMenuHelper=new OptionsMenuHelper();
  optionsMenuHelper.registerOptionsMenuItem(R.string.where_am_i,R.string.where_am_i,android.R.drawable.ic_menu_mylocation,new OnOptionsMenuClick(){
    @Override public void prepareOptionsMenu(    Menu menu,    MenuItem item){
    }
    @Override public boolean onClick(    MenuItem item){
      if (getMyApplication().getInternalAPI().accessibilityEnabled()) {
        whereAmIDialog();
      }
 else {
        mapActivity.getMapViewTrackingUtilities().backToLocationImpl();
      }
      return true;
    }
  }
);
  optionsMenuHelper.registerOptionsMenuItem(R.string.menu_layers,R.string.menu_layers,android.R.drawable.ic_menu_mapmode,new OnOptionsMenuClick(){
    @Override public void prepareOptionsMenu(    Menu menu,    MenuItem item){
    }
    @Override public boolean onClick(    MenuItem item){
      mapActivity.getMapLayers().openLayerSelectionDialog(mapView);
      return true;
    }
  }
);
  optionsMenuHelper.registerOptionsMenuItem(R.string.settings_Button,R.string.settings_Button,android.R.drawable.ic_menu_preferences,new OnOptionsMenuClick(){
    @Override public void prepareOptionsMenu(    Menu menu,    MenuItem item){
    }
    @Override public boolean onClick(    MenuItem item){
      final Intent intentSettings=new Intent(mapActivity,OsmandIntents.getSettingsActivity());
      mapActivity.startActivity(intentSettings);
      return true;
    }
  }
);
  optionsMenuHelper.registerOptionsMenuItem(R.string.stop_navigation,R.string.stop_navigation,android.R.drawable.ic_menu_close_clear_cancel,false,new OnOptionsMenuClick(){
    @Override public void prepareOptionsMenu(    Menu menu,    MenuItem navigateToPointMenu){
      if (mapActivity.getPointToNavigate() != null) {
        navigateToPointMenu.setTitle((routingHelper.isRouteCalculated() || routingHelper.isFollowingMode() || routingHelper.isRouteBeingCalculated()) ? R.string.stop_routing : R.string.stop_navigation);
        navigateToPointMenu.setVisible(true);
      }
 else {
        navigateToPointMenu.setVisible(false);
      }
    }
    @Override public boolean onClick(    MenuItem item){
      stopNavigationActionConfirm(mapView);
      return true;
    }
  }
);
  optionsMenuHelper.registerOptionsMenuItem(R.string.menu_mute_off,R.string.menu_mute_off,false,new OnOptionsMenuClick(){
    @Override public void prepareOptionsMenu(    Menu menu,    MenuItem muteMenu){
      if (routingHelper.getFinalLocation() != null && routingHelper.isFollowingMode()) {
        boolean mute=routingHelper.getVoiceRouter().isMute();
        muteMenu.setTitle(mute ? R.string.menu_mute_on : R.string.menu_mute_off);
        muteMenu.setIcon(mute ? R.drawable.ic_menu_soundoff : R.drawable.ic_menu_soundon);
        muteMenu.setVisible(true);
      }
 else {
        muteMenu.setVisible(false);
      }
    }
    @Override public boolean onClick(    MenuItem item){
      routingHelper.getVoiceRouter().setMute(!routingHelper.getVoiceRouter().isMute());
      return true;
    }
  }
);
  optionsMenuHelper.registerOptionsMenuItem(R.string.get_directions,R.string.get_directions,android.R.drawable.ic_menu_directions,new OnOptionsMenuClick(){
    @Override public void prepareOptionsMenu(    Menu menu,    MenuItem directions){
      if (routingHelper.isRouteCalculated()) {
        directions.setTitle(R.string.show_route);
      }
 else {
        directions.setTitle(R.string.get_directions);
      }
    }
    @Override public boolean onClick(    MenuItem item){
      if (routingHelper.isRouteCalculated()) {
        aboutRoute();
      }
 else {
        getDirections(null,null,true);
      }
      return true;
    }
  }
);
  optionsMenuHelper.registerOptionsMenuItem(R.string.search_button,R.string.search_button,android.R.drawable.ic_menu_search,new OnOptionsMenuClick(){
    @Override public void prepareOptionsMenu(    Menu menu,    MenuItem item){
    }
    @Override public boolean onClick(    MenuItem item){
      Intent newIntent=new Intent(mapActivity,OsmandIntents.getSearchActivity());
      LatLon loc=mapActivity.getMapLocation();
      newIntent.putExtra(SearchActivity.SEARCH_LAT,loc.getLatitude());
      newIntent.putExtra(SearchActivity.SEARCH_LON,loc.getLongitude());
      newIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
      mapActivity.startActivity(newIntent);
      return true;
    }
  }
);
  optionsMenuHelper.registerOptionsMenuItem(R.string.target_points,R.string.target_points,new OnOptionsMenuClick(){
    @Override public void prepareOptionsMenu(    Menu menu,    MenuItem item){
      item.setVisible(getTargets().getIntermediatePoints().size() > 0);
    }
    @Override public boolean onClick(    MenuItem item){
      openIntermediatePointsDialog();
      return true;
    }
  }
);
  if (Version.isGpsStatusEnabled(mapActivity.getMyApplication()) && !Version.isBlackberry(mapActivity.getMyApplication())) {
    optionsMenuHelper.registerOptionsMenuItem(R.string.show_gps_status,R.string.show_gps_status,android.R.drawable.ic_menu_compass,new OnOptionsMenuClick(){
      @Override public void prepareOptionsMenu(      Menu menu,      MenuItem item){
      }
      @Override public boolean onClick(      MenuItem item){
        startGpsStatusIntent();
        return false;
      }
    }
);
  }
  optionsMenuHelper.registerOptionsMenuItem(R.string.show_point_options,R.string.show_point_options,new OnOptionsMenuClick(){
    @Override public void prepareOptionsMenu(    Menu menu,    MenuItem item){
    }
    @Override public boolean onClick(    MenuItem item){
      contextMenuPoint(mapView.getLatitude(),mapView.getLongitude());
      return true;
    }
  }
);
  OsmandPlugin.registerOptionsMenu(mapActivity,optionsMenuHelper);
  optionsMenuHelper.registerOptionsMenu(menu);
  return true;
}
