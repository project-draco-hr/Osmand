{
  final FavouritesDbHelper helper=getMyApplication().getFavorites();
  final Collection<FavouritePoint> points=helper.getFavouritePoints();
  final String[] names=new String[points.size()];
  if (names.length == 0) {
    Toast.makeText(mapActivity,getString(R.string.fav_points_not_exist),Toast.LENGTH_SHORT).show();
    helper.close();
    return null;
  }
  Builder b=new AlertDialog.Builder(mapActivity);
  final FavouritePoint[] favs=new FavouritePoint[points.size()];
  Iterator<FavouritePoint> it=points.iterator();
  int i=0;
  while (it.hasNext()) {
    FavouritePoint fp=it.next();
    if (fp.isStored()) {
      favs[i]=fp;
      names[i]=fp.getName();
      i++;
    }
  }
  b.setItems(names,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      FavouritePoint fv=favs[which];
      FavouritePoint point=(FavouritePoint)args.getSerializable(KEY_FAVORITE);
      if (helper.editFavourite(fv,point.getLatitude(),point.getLongitude())) {
        Toast.makeText(mapActivity,getString(R.string.fav_points_edited),Toast.LENGTH_SHORT).show();
      }
      mapActivity.getMapView().refreshMap();
    }
  }
);
  return b.create();
}
