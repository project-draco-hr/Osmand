{
  final LatLon endForRouting=mapActivity.getPointToNavigate();
  final MapActivityLayers mapLayers=mapActivity.getMapLayers();
  final RoutingHelper routingHelper=mapActivity.getRoutingHelper();
  mapLayers.selectGPXFileLayer(new CallbackWithObject<GPXFile>(){
    @Override public boolean processResult(    final GPXFile result){
      Builder builder=new AlertDialog.Builder(mapActivity);
      final boolean[] props=new boolean[]{false,false,false};
      builder.setMultiChoiceItems(new String[]{getString(R.string.gpx_option_reverse_route),getString(R.string.gpx_option_destination_point),getString(R.string.gpx_option_from_start_point)},props,new OnMultiChoiceClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int which,        boolean isChecked){
          props[which]=isChecked;
        }
      }
);
      builder.setPositiveButton(R.string.default_buttons_apply,new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int which){
          boolean reverse=props[0];
          boolean passWholeWay=props[2];
          boolean useDestination=props[1];
          GPXRouteParams gpxRoute=new GPXRouteParams(result,reverse,settings);
          Location loc=mapActivity.getLastKnownLocation();
          if (passWholeWay && loc != null) {
            gpxRoute.setStartPoint(loc);
          }
          Location startForRouting=mapActivity.getLastKnownLocation();
          if (startForRouting == null) {
            startForRouting=gpxRoute.getStartPointForRoute();
          }
          LatLon endPoint=endForRouting;
          if (endPoint == null || !useDestination) {
            LatLon point=gpxRoute.getLastPoint();
            if (point != null) {
              endPoint=point;
            }
            if (endPoint != null) {
              settings.setPointToNavigate(point.getLatitude(),point.getLongitude(),null);
              mapLayers.getNavigationLayer().setPointToNavigate(point);
            }
          }
          if (!routingHelper.isFollowingMode()) {
            settings.PREV_APPLICATION_MODE.set(settings.APPLICATION_MODE.get());
          }
          boolean changed=settings.APPLICATION_MODE.set(appMode);
          if (changed) {
            mapActivity.updateApplicationModeSettings();
          }
          mapActivity.getMapView().refreshMap(changed);
          if (endPoint != null) {
            settings.FOLLOW_THE_ROUTE.set(true);
            settings.FOLLOW_THE_GPX_ROUTE.set(result.path);
            routingHelper.setFollowingMode(true);
            routingHelper.setFinalAndCurrentLocation(endPoint,startForRouting,gpxRoute);
            getMyApplication().showDialogInitializingCommandPlayer(mapActivity);
          }
        }
      }
);
      builder.setNegativeButton(R.string.default_buttons_cancel,null);
      builder.show();
      return true;
    }
  }
,false,false);
}
