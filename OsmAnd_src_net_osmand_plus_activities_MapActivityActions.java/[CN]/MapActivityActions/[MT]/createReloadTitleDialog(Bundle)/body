{
  AlertDialog.Builder builder=new AccessibleAlertBuilder(mapActivity);
  builder.setMessage(R.string.context_menu_item_update_map_confirm);
  builder.setNegativeButton(R.string.shared_string_cancel,null);
  final OsmandMapTileView mapView=mapActivity.getMapView();
  builder.setPositiveButton(R.string.context_menu_item_update_map,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      int zoom=args.getInt(KEY_ZOOM);
      BaseMapLayer mainLayer=mapView.getMainLayer();
      if (!(mainLayer instanceof MapTileLayer) || !((MapTileLayer)mainLayer).isVisible()) {
        AccessibleToast.makeText(mapActivity,R.string.maps_could_not_be_downloaded,Toast.LENGTH_SHORT).show();
        return;
      }
      final ITileSource mapSource=((MapTileLayer)mainLayer).getMap();
      if (mapSource == null || !mapSource.couldBeDownloadedFromInternet()) {
        AccessibleToast.makeText(mapActivity,R.string.maps_could_not_be_downloaded,Toast.LENGTH_SHORT).show();
        return;
      }
      final RotatedTileBox tb=mapView.getCurrentRotatedTileBox();
      final QuadRect tilesRect=tb.getTileBounds();
      int left=(int)Math.floor(tilesRect.left);
      int top=(int)Math.floor(tilesRect.top);
      int width=(int)(Math.ceil(tilesRect.right) - left);
      int height=(int)(Math.ceil(tilesRect.bottom) - top);
      for (int i=0; i < width; i++) {
        for (int j=0; j < height; j++) {
          ((OsmandApplication)mapActivity.getApplication()).getResourceManager().clearTileImageForMap(null,mapSource,i + left,j + top,zoom);
        }
      }
      mapView.refreshMap();
    }
  }
);
  return builder.create();
}
