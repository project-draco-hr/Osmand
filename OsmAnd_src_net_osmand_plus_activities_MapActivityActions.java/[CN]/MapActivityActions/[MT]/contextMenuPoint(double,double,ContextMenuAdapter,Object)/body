{
  final ContextMenuAdapter adapter=iadapter == null ? new ContextMenuAdapter(mapActivity) : iadapter;
  Builder builder=new AlertDialog.Builder(mapActivity);
  adapter.registerItem(R.string.context_menu_item_navigate_point,R.drawable.list_view_set_destination);
  adapter.registerItem(R.string.context_menu_item_directions,R.drawable.list_activities_directions_to_here);
  adapter.registerItem(R.string.context_menu_item_show_route,R.drawable.list_view_show_route_from_here);
  adapter.registerItem(R.string.context_menu_item_search,R.drawable.list_view_search_near_here);
  adapter.registerItem(R.string.context_menu_item_share_location,R.drawable.list_view_share_location);
  adapter.registerItem(R.string.context_menu_item_add_favorite,R.drawable.list_activities_favorites);
  adapter.registerItem(R.string.context_menu_item_intermediate_point,R.drawable.list_view_set_intermediate);
  OsmandPlugin.registerMapContextMenu(mapActivity,latitude,longitude,adapter,selectedObj);
  ListAdapter listadapter=new ArrayAdapter<String>(mapActivity,R.layout.layers_list_activity_item,R.id.title,adapter.getItemNames()){
    @Override public View getView(    int position,    View convertView,    ViewGroup parent){
      View v=super.getView(position,convertView,parent);
      TextView tv=(TextView)v.findViewById(R.id.title);
      tv.setText(adapter.getItemName(position));
      if (adapter.getImageId(position) != 0) {
        tv.setCompoundDrawablesWithIntrinsicBounds(adapter.getImageId(position),0,0,0);
      }
 else {
        tv.setCompoundDrawablesWithIntrinsicBounds(R.drawable.list_activities_transparent,0,0,0);
      }
      final CheckBox ch=((CheckBox)v.findViewById(R.id.check_item));
      ch.setVisibility(View.GONE);
      return v;
    }
  }
;
  builder.setAdapter(listadapter,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      int standardId=adapter.getItemId(which);
      OnContextMenuClick click=adapter.getClickAdapter(which);
      if (click != null) {
        click.onContextMenuClick(standardId,which,false,dialog);
      }
 else       if (standardId == R.string.context_menu_item_search) {
        Intent intent=new Intent(mapActivity,OsmandIntents.getSearchActivity());
        intent.putExtra(SearchActivity.SEARCH_LAT,latitude);
        intent.putExtra(SearchActivity.SEARCH_LON,longitude);
        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
        mapActivity.startActivity(intent);
      }
 else       if (standardId == R.string.context_menu_item_navigate_point) {
        mapActivity.navigateToPoint(new LatLon(latitude,longitude),true,false);
      }
 else       if (standardId == R.string.context_menu_item_directions) {
        Location loc=mapActivity.getLastKnownLocation();
        mapActivity.navigateToPoint(new LatLon(latitude,longitude),false,false);
        getDirections(loc,true);
      }
 else       if (standardId == R.string.context_menu_item_show_route) {
        if (checkPointToNavigate()) {
          Location loc=new Location("map");
          loc.setLatitude(latitude);
          loc.setLongitude(longitude);
          getDirections(loc,true);
        }
      }
 else       if (standardId == R.string.context_menu_item_intermediate_point) {
        mapActivity.navigateToPoint(new LatLon(latitude,longitude),true,true);
      }
 else       if (standardId == R.string.context_menu_item_share_location) {
        shareLocation(latitude,longitude,mapActivity.getMapView().getZoom());
      }
 else       if (standardId == R.string.context_menu_item_add_favorite) {
        addFavouritePoint(latitude,longitude);
      }
    }
  }
);
  builder.create().show();
}
