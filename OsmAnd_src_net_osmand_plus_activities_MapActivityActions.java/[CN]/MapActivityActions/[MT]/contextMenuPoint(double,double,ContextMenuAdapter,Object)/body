{
  final ContextMenuAdapter adapter=iadapter == null ? new ContextMenuAdapter(mapActivity) : iadapter;
  adapter.registerItem(R.string.context_menu_item_navigate_point,R.drawable.list_activities_navigate_to);
  final TargetPointsHelper targets=getMyApplication().getTargetPointsHelper();
  if (targets.getPointToNavigate() != null) {
    adapter.registerItem(R.string.context_menu_item_intermediate_point,R.drawable.list_activities_set_intermediate);
  }
 else {
    adapter.registerItem(R.string.context_menu_item_destination_point,R.drawable.list_activities_set_destination);
  }
  adapter.registerItem(R.string.context_menu_item_show_route,R.drawable.list_activities_show_route_from_here);
  adapter.registerItem(R.string.context_menu_item_search,R.drawable.list_activities_search_near_here);
  adapter.registerItem(R.string.context_menu_item_share_location,R.drawable.list_activities_share_location);
  adapter.registerItem(R.string.context_menu_item_add_favorite,R.drawable.list_activities_favorites);
  OsmandPlugin.registerMapContextMenu(mapActivity,latitude,longitude,adapter,selectedObj);
  final Builder builder=new AlertDialog.Builder(mapActivity);
  ListAdapter listAdapter=adapter.createListAdapter(mapActivity,R.layout.list_menu_item);
  builder.setAdapter(listAdapter,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      int standardId=adapter.getItemId(which);
      OnContextMenuClick click=adapter.getClickAdapter(which);
      if (click != null) {
        click.onContextMenuClick(standardId,which,false,dialog);
      }
 else       if (standardId == R.string.context_menu_item_search) {
        Intent intent=new Intent(mapActivity,OsmandIntents.getSearchActivity());
        intent.putExtra(SearchActivity.SEARCH_LAT,latitude);
        intent.putExtra(SearchActivity.SEARCH_LON,longitude);
        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
        mapActivity.startActivity(intent);
      }
 else       if (standardId == R.string.context_menu_item_navigate_point) {
        getMyApplication().getTargetPointsHelper().navigateToPoint(new LatLon(latitude,longitude),true,-1);
        if (!routingHelper.isRouteBeingCalculated() && !routingHelper.isRouteCalculated()) {
          getDirections(null,new LatLon(latitude,longitude),true);
        }
      }
 else       if (standardId == R.string.context_menu_item_show_route) {
        if (targets.checkPointToNavigate(getMyApplication())) {
          Location loc=new Location("map");
          loc.setLatitude(latitude);
          loc.setLongitude(longitude);
          getDirections(loc,null,true);
        }
      }
 else       if (standardId == R.string.context_menu_item_intermediate_point) {
        targets.navigateToPoint(new LatLon(latitude,longitude),true,targets.getIntermediatePoints().size());
        IntermediatePointsDialog.openIntermediatePointsDialog(mapActivity);
      }
 else       if (standardId == R.string.context_menu_item_destination_point) {
        targets.navigateToPoint(new LatLon(latitude,longitude),true,-1);
        IntermediatePointsDialog.openIntermediatePointsDialog(mapActivity);
      }
 else       if (standardId == R.string.context_menu_item_share_location) {
        shareLocation(latitude,longitude,mapActivity.getMapView().getZoom());
      }
 else       if (standardId == R.string.context_menu_item_add_favorite) {
        addFavouritePoint(latitude,longitude);
      }
    }
  }
);
  builder.create().show();
}
