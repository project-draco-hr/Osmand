{
  ApplicationMode mode=settings.DEFAULT_APPLICATION_MODE.get();
  ApplicationMode selected=settings.APPLICATION_MODE.get();
  OsmandApplication app=mapActivity.getMyApplication();
  TargetPointsHelper targets=app.getTargetPointsHelper();
  if (selected != ApplicationMode.DEFAULT) {
    mode=selected;
  }
 else   if (mode == ApplicationMode.DEFAULT) {
    mode=ApplicationMode.CAR;
    if (settings.LAST_ROUTING_APPLICATION_MODE != null && settings.LAST_ROUTING_APPLICATION_MODE != ApplicationMode.DEFAULT) {
      mode=settings.LAST_ROUTING_APPLICATION_MODE;
    }
    if (from != null && targets.getPointToNavigate() != null) {
      double dist=MapUtils.getDistance(from,targets.getPointToNavigate().getLatitude(),targets.getPointToNavigate().getLongitude());
      if (dist >= 50000 && mode.isDerivedRoutingFrom(ApplicationMode.PEDESTRIAN)) {
        mode=ApplicationMode.CAR;
      }
 else       if (dist >= 300000 && mode.isDerivedRoutingFrom(ApplicationMode.BICYCLE)) {
        mode=ApplicationMode.CAR;
      }
 else       if (dist < 2000 && mode.isDerivedRoutingFrom(ApplicationMode.CAR)) {
        mode=ApplicationMode.PEDESTRIAN;
      }
    }
  }
  app.getSettings().APPLICATION_MODE.set(mode);
  app.getRoutingHelper().setAppMode(mode);
  app.initVoiceCommandPlayer(mapActivity);
  settings.FOLLOW_THE_ROUTE.set(false);
  app.getRoutingHelper().setFollowingMode(false);
  app.getRoutingHelper().setRoutePlanningMode(true);
  targets.setStartPoint(from,false,fromName);
  setGPXRouteParams(gpxFile);
  targets.updateRouteAndReferesh(true);
  mapActivity.getMapViewTrackingUtilities().switchToRoutePlanningMode();
  mapActivity.getMapView().refreshMap(true);
  mapActivity.getMapLayers().getMapControlsLayer().showDialog();
  if (targets.hasTooLongDistanceToNavigate()) {
    app.showToastMessage(R.string.route_is_too_long);
  }
}
