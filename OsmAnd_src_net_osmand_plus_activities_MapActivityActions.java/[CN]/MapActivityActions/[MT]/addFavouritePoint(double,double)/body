{
  final Resources resources=mapActivity.getResources();
  final FavouritePoint point=new FavouritePoint(latitude,longitude,resources.getString(R.string.add_favorite_dialog_default_favourite_name),resources.getString(R.string.favorite_default_category));
  Builder builder=new AlertDialog.Builder(mapActivity);
  builder.setTitle(R.string.favourites_edit_dialog_title);
  final View v=mapActivity.getLayoutInflater().inflate(R.layout.favourite_edit_dialog,null,false);
  final FavouritesDbHelper helper=((OsmandApplication)mapActivity.getApplication()).getFavorites();
  builder.setView(v);
  final EditText editText=(EditText)v.findViewById(R.id.Name);
  editText.setText(point.getName());
  final AutoCompleteTextView cat=(AutoCompleteTextView)v.findViewById(R.id.Category);
  cat.setText(point.getCategory());
  cat.setAdapter(new ArrayAdapter<String>(mapActivity,R.layout.list_textview,helper.getFavoriteGroups().keySet().toArray(new String[]{})));
  builder.setNegativeButton(R.string.default_buttons_cancel,null);
  builder.setNeutralButton(R.string.update_existing,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      Builder b=new AlertDialog.Builder(mapActivity);
      final Collection<FavouritePoint> points=helper.getFavouritePoints();
      final String[] names=new String[points.size()];
      final FavouritePoint[] favs=new FavouritePoint[points.size()];
      Iterator<FavouritePoint> it=points.iterator();
      int i=0;
      while (it.hasNext()) {
        FavouritePoint fp=it.next();
        if (fp.isStored()) {
          favs[i]=fp;
          names[i]=fp.getName();
          i++;
        }
      }
      b.setItems(names,new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int which){
          FavouritePoint fv=favs[which];
          if (helper.editFavourite(fv,latitude,longitude)) {
            Toast.makeText(mapActivity,getString(R.string.fav_points_edited),Toast.LENGTH_SHORT).show();
          }
          mapActivity.getMapView().refreshMap();
        }
      }
);
      if (names.length == 0) {
        Toast.makeText(mapActivity,getString(R.string.fav_points_not_exist),Toast.LENGTH_SHORT).show();
        helper.close();
      }
 else {
        b.show();
      }
    }
  }
);
  builder.setPositiveButton(R.string.default_buttons_add,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      final FavouritesDbHelper helper=((OsmandApplication)mapActivity.getApplication()).getFavorites();
      point.setName(editText.getText().toString());
      point.setCategory(cat.getText().toString());
      boolean added=helper.addFavourite(point);
      if (added) {
        Toast.makeText(mapActivity,MessageFormat.format(getString(R.string.add_favorite_dialog_favourite_added_template),point.getName()),Toast.LENGTH_SHORT).show();
      }
      mapActivity.getMapView().refreshMap();
    }
  }
);
  builder.create().show();
}
